(function() {
    var type_impls = Object.fromEntries([["rustc_next_trait_solver",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unchecked_map</a>&lt;W&gt;(self, map_op: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(V) -&gt; W) -&gt; Canonical&lt;I, W&gt;</h4></section></summary><div class=\"docblock\"><p>Allows you to map the <code>value</code> of a canonical while keeping the\nsame set of bound variables.</p>\n<p><strong>WARNING:</strong> This function is very easy to mis-use, hence the\nname!  In particular, the new value <code>W</code> must use all <strong>the\nsame type/region variables</strong> in <strong>precisely the same order</strong>\nas the original! (The ordering is defined by the\n<code>TypeFoldable</code> implementation of the type in question.)</p>\n<p>An example of a <strong>correct</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T,)&gt; = a.unchecked_map(|v| (v, ));</code></pre></div>\n<p>An example of an <strong>incorrect</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>ty: Ty&lt;I&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T, Ty&lt;I&gt;)&gt; = a.unchecked_map(|v| (v, ty));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_rebind\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unchecked_rebind</a>&lt;W&gt;(self, value: W) -&gt; Canonical&lt;I, W&gt;</h4></section></summary><div class=\"docblock\"><p>Allows you to map the <code>value</code> of a canonical while keeping the same set of\nbound variables.</p>\n<p><strong>WARNING:</strong> This function is very easy to mis-use, hence the name! See\nthe comment of [Canonical::unchecked_map] for more details.</p>\n</div></details></div></details>",0,"rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Canonical&lt;I, V&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, __f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3C__D%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Decodable%3C__D%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V, __D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt; for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    __D: TyDecoder&lt;I = I&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt;,\n    &lt;I as Interner&gt;::DefiningOpaqueTypes: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt;,\n    &lt;I as Interner&gt;::CanonicalVars: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(__decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __D</a>) -&gt; Canonical&lt;I, V&gt;</h4></section></div></details>","Decodable<__D>","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Display-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3C__E%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Encodable%3C__E%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V, __E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt; for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    __E: TyEncoder&lt;I = I&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt;,\n    &lt;I as Interner&gt;::DefiningOpaqueTypes: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt;,\n    &lt;I as Interner&gt;::CanonicalVars: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, __encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __E</a>)</h4></section></div></details>","Encodable<__E>","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, __state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3C__CTX%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-HashStable%3C__CTX%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V, __CTX&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt; for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,\n    &lt;I as Interner&gt;::DefiningOpaqueTypes: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,\n    &lt;I as Interner&gt;::CanonicalVars: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(\n    &amp;self,\n    __hcx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CTX</a>,\n    __hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;,\n)</h4></section></div></details>","HashStable<__CTX>","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, __other: &amp;Canonical&lt;I, V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-TypeFoldable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; TypeFoldable&lt;I&gt; for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: TypeFoldable&lt;I&gt;,\n    &lt;I as Interner&gt;::DefiningOpaqueTypes: TypeFoldable&lt;I&gt;,\n    &lt;I as Interner&gt;::CanonicalVars: TypeFoldable&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_fold_with</a>&lt;__F&gt;(\n    self,\n    __folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Canonical&lt;I, V&gt;, &lt;__F as FallibleTypeFolder&lt;I&gt;&gt;::Error&gt;<div class=\"where\">where\n    __F: FallibleTypeFolder&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<div class=\"where\">where\n    F: TypeFolder&lt;I&gt;,</div></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<I>","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-TypeVisitable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; TypeVisitable&lt;I&gt; for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: TypeVisitable&lt;I&gt;,\n    &lt;I as Interner&gt;::DefiningOpaqueTypes: TypeVisitable&lt;I&gt;,\n    &lt;I as Interner&gt;::CanonicalVars: TypeVisitable&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_with</a>&lt;__V&gt;(\n    &amp;self,\n    __visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __V</a>,\n) -&gt; &lt;__V as TypeVisitor&lt;I&gt;&gt;::Result<div class=\"where\">where\n    __V: TypeVisitor&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a>Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<section id=\"impl-Copy-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"],["<section id=\"impl-Eq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_next_trait_solver::solve::inspect::CanonicalState","rustc_next_trait_solver::solve::CanonicalInput","rustc_next_trait_solver::solve::CanonicalResponse"]]],["rustc_type_ir",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#32-70\">source</a><a href=\"#impl-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>, V&gt; <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_map\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#56-59\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_type_ir/canonical/struct.Canonical.html#tymethod.unchecked_map\" class=\"fn\">unchecked_map</a>&lt;W&gt;(self, map_op: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(V) -&gt; W) -&gt; <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, W&gt;</h4></section></summary><div class=\"docblock\"><p>Allows you to map the <code>value</code> of a canonical while keeping the\nsame set of bound variables.</p>\n<p><strong>WARNING:</strong> This function is very easy to mis-use, hence the\nname!  In particular, the new value <code>W</code> must use all <strong>the\nsame type/region variables</strong> in <strong>precisely the same order</strong>\nas the original! (The ordering is defined by the\n<code>TypeFoldable</code> implementation of the type in question.)</p>\n<p>An example of a <strong>correct</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T,)&gt; = a.unchecked_map(|v| (v, ));</code></pre></div>\n<p>An example of an <strong>incorrect</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>ty: Ty&lt;I&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T, Ty&lt;I&gt;)&gt; = a.unchecked_map(|v| (v, ty));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_rebind\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#66-69\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_type_ir/canonical/struct.Canonical.html#tymethod.unchecked_rebind\" class=\"fn\">unchecked_rebind</a>&lt;W&gt;(self, value: W) -&gt; <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, W&gt;</h4></section></summary><div class=\"docblock\"><p>Allows you to map the <code>value</code> of a canonical while keeping the same set of\nbound variables.</p>\n<p><strong>WARNING:</strong> This function is very easy to mis-use, hence the name! See\nthe comment of <a href=\"rustc_type_ir/canonical/struct.Canonical.html#method.unchecked_map\" title=\"method rustc_type_ir::canonical::Canonical::unchecked_map\">Canonical::unchecked_map</a> for more details.</p>\n</div></details></div></details>",0,"rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#impl-Clone-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#impl-Debug-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, __f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3C__D%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#23\">source</a><a href=\"#impl-Decodable%3C__D%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>, V, __D: <a class=\"trait\" href=\"rustc_type_ir/codec/trait.TyDecoder.html\" title=\"trait rustc_type_ir::codec::TyDecoder\">TyDecoder</a>&lt;I = I&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt; for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.DefiningOpaqueTypes\" title=\"type rustc_type_ir::interner::Interner::DefiningOpaqueTypes\">DefiningOpaqueTypes</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.CanonicalVars\" title=\"type rustc_type_ir::interner::Interner::CanonicalVars\">CanonicalVars</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#23\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(__decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __D</a>) -&gt; Self</h4></section></div></details>","Decodable<__D>","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#72-80\">source</a><a href=\"#impl-Display-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#73-79\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3C__E%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#23\">source</a><a href=\"#impl-Encodable%3C__E%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>, V, __E: <a class=\"trait\" href=\"rustc_type_ir/codec/trait.TyEncoder.html\" title=\"trait rustc_type_ir::codec::TyEncoder\">TyEncoder</a>&lt;I = I&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt; for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.DefiningOpaqueTypes\" title=\"type rustc_type_ir::interner::Interner::DefiningOpaqueTypes\">DefiningOpaqueTypes</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.CanonicalVars\" title=\"type rustc_type_ir::interner::Interner::CanonicalVars\">CanonicalVars</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#23\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, __encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __E</a>)</h4></section></div></details>","Encodable<__E>","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#impl-Hash-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, __state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3C__CTX%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#23\">source</a><a href=\"#impl-HashStable%3C__CTX%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>, V, __CTX&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt; for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.DefiningOpaqueTypes\" title=\"type rustc_type_ir::interner::Interner::DefiningOpaqueTypes\">DefiningOpaqueTypes</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.CanonicalVars\" title=\"type rustc_type_ir::interner::Interner::CanonicalVars\">CanonicalVars</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#23\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, __hcx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CTX</a>, __hasher: &amp;mut <a class=\"type\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/hashers/type.StableSipHasher128.html\" title=\"type rustc_stable_hash::hashers::StableSipHasher128\">StableHasher</a>)</h4></section></div></details>","HashStable<__CTX>","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, __other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#22\">source</a><a href=\"#impl-TypeFoldable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt; for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.DefiningOpaqueTypes\" title=\"type rustc_type_ir::interner::Interner::DefiningOpaqueTypes\">DefiningOpaqueTypes</a>: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.CanonicalVars\" title=\"type rustc_type_ir::interner::Interner::CanonicalVars\">CanonicalVars</a>: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#22\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;__F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;&gt;(\n    self,\n    __folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __F::<a class=\"associatedtype\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_type_ir::fold::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#91-95\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFolder.html\" title=\"trait rustc_type_ir::fold::TypeFolder\">TypeFolder</a>&lt;I&gt;&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self</h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<I>","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#22\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.DefiningOpaqueTypes\" title=\"type rustc_type_ir::interner::Interner::DefiningOpaqueTypes\">DefiningOpaqueTypes</a>: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,\n    I::<a class=\"associatedtype\" href=\"rustc_type_ir/interner/trait.Interner.html#associatedtype.CanonicalVars\" title=\"type rustc_type_ir::interner::Interner::CanonicalVars\">CanonicalVars</a>: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#22\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;__V: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;(&amp;self, __visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __V</a>) -&gt; __V::<a class=\"associatedtype\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_type_ir::visit::TypeVisitor::Result\">Result</a></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<section id=\"impl-Copy-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#impl-Copy-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"],["<section id=\"impl-Eq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/canonical.rs.html#16\">source</a><a href=\"#impl-Eq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_type_ir/canonical/struct.Canonical.html\" title=\"struct rustc_type_ir::canonical::Canonical\">Canonical</a>&lt;I, V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_type_ir::solve::inspect::CanonicalState","rustc_type_ir::solve::CanonicalInput","rustc_type_ir::solve::CanonicalResponse"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[25777,34322]}