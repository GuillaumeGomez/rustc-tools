(function() {
    var type_impls = Object.fromEntries([["rustc_data_structures",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#92-95\">source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#97\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#103\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#134-136\">source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#139\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#681-684\">source</a><a href=\"#impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#686\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></div></details>","Decodable<D>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1162-1164\">source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1167\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a></p>\n</div></details></div></details>","Default","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#668-671\">source</a><a href=\"#impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#673\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable<E>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1151-1154\">source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1156\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1140-1143\">source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1145\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1107-1110\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1112\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#353-365\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, R, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;K, R&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#359-364\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"type\" href=\"rustc_data_structures/stable_hasher/type.StableHasher.html\" title=\"type rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>)</h4></section></div></details>","HashStable<CTX>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(Bound<usize>, Bound<usize>)>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeInclusive<usize>>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeToInclusive<usize>>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1095\">source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values at indexed positions.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1101\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1096\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1192-1195\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1198-1200\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1210-1212\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1218-1220\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#171\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#176\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#186\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements the set can hold without reallocating.</p>\n<p>This number is a lower bound; the set might be able to hold more,\nbut is guaranteed to be able to hold at least this many.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#203\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the set’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#217\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#222\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#229\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#236\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the set’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#253-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Drain.html\" title=\"struct indexmap::set::iter::Drain\">Drain</a>&lt;'_, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <a href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\"><code>RangeBounds&lt;usize&gt;</code></a>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#267-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#279\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#291\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#298\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#310\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>try_reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#317\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#324\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#329-332\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#355\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_sorted\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_sorted\" class=\"fn\">insert_sorted</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at its ordered position among sorted values.</p>\n<p>This is equivalent to finding the position with\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.binary_search\" title=\"method indexmap::set::IndexSet::binary_search\"><code>binary_search</code></a>, and if needed calling\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for a new value.</p>\n<p>If the sorted item is found in the set, it returns the index of that\nexisting item and <code>false</code>, without any change. Otherwise, it inserts the\nnew item and returns its sorted index and <code>true</code>.</p>\n<p>If the existing items are <strong>not</strong> already sorted, then the insertion\nindex is unspecified (like <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a>), but the value\nis moved to or inserted at that position regardless.</p>\n<p>Computes in <strong>O(n)</strong> time (average). Instead of repeating calls to\n<code>insert_sorted</code>, it may be faster to call batched <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a>\nor <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.extend\" title=\"method indexmap::set::IndexSet::extend\"><code>extend</code></a> and only call <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort\" title=\"method indexmap::set::IndexSet::sort\"><code>sort</code></a> or\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> once.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_before\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#429\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_before\" class=\"fn\">insert_before</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set before the value at the given index, or at the end.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving the\noriginal value in the set, but moved to the new position. The returned index\nwill either be the given index or one less, depending on how the value moved.\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_insert\" title=\"method indexmap::set::IndexSet::shift_insert\"><code>shift_insert</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value exactly at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..=set.len()</code> (inclusive).</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up will shift others down, so this moves *before* 10 to index 9.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), (<span class=\"number\">9</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'z' down will shift others up, so this moves to exactly 10.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'z'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">11</span>));\n\n<span class=\"comment\">// Moving or inserting before the endpoint is also valid.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'*'</span>), (<span class=\"number\">26</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'+'</span>), (<span class=\"number\">27</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#486\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_insert\" class=\"fn\">shift_insert</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at the given index.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving\nthe original value in the set, but moved to the given index.\nNote that existing values <strong>cannot</strong> be moved to <code>index == set.len()</code>!\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..set.len()</code> (exclusive) when moving an existing value, or\n<code>0..=set.len()</code> (inclusive) when inserting a new value.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up to 10 will shift others down, including the '*' that was at 10.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n\n<span class=\"comment\">// Moving the value 'z' down to 9 will shift others up, including the '*' that was at 9.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">9</span>, <span class=\"string\">'z'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Existing values can move to len-1 at most, but new values can insert at the endpoint.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len() - <span class=\"number\">1</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len(), <span class=\"string\">'+'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// This is an invalid index for moving an existing value!\n</span>set.shift_insert(set.len(), <span class=\"string\">'a'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#495\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#504\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#515-517\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Difference.html\" title=\"struct indexmap::set::iter::Difference\">Difference</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#527-532\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.SymmetricDifference.html\" title=\"struct indexmap::set::iter::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#540-542\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Intersection.html\" title=\"struct indexmap::set::iter::Intersection\">Intersection</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#551-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;'a, S2&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Union.html\" title=\"struct indexmap::set::iter::Union\">Union</a>&lt;'a, T, S&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#587-590\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.splice\" class=\"fn\">splice</a>&lt;R, I&gt;(\n    &amp;mut self,\n    range: R,\n    replace_with: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Splice.html\" title=\"struct indexmap::set::iter::Splice\">Splice</a>&lt;'_, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>, T, S&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a splicing iterator that replaces the specified range in the set\nwith the given <code>replace_with</code> iterator and yields the removed items.\n<code>replace_with</code> does not need to be the same length as <code>range</code>.</p>\n<p>The <code>range</code> is removed even if the iterator is not consumed until the\nend. It is unspecified how many elements are removed from the set if the\n<code>Splice</code> value is leaked.</p>\n<p>The input iterator <code>replace_with</code> is only consumed when the <code>Splice</code>\nvalue is dropped. If a value from the iterator matches an existing entry\nin the set (outside of <code>range</code>), then the original will be unchanged.\nOtherwise, the new value will be inserted in the replaced <code>range</code>.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::from([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>new = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>];\n<span class=\"kw\">let </span>removed: Vec&lt;<span class=\"kw\">_</span>&gt; = set.splice(<span class=\"number\">2</span>..<span class=\"number\">4</span>, new).collect();\n\n<span class=\"comment\">// 1 and 4 kept their positions, while 5, 3, and 2 were newly inserted.\n</span><span class=\"macro\">assert!</span>(set.into_iter().eq([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]));\n<span class=\"macro\">assert_eq!</span>(removed, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#621\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.append\" class=\"fn\">append</a>&lt;S2&gt;(&amp;mut self, other: &amp;mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;)</h4></section></summary><div class=\"docblock\"><p>Moves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.</p>\n<p>This is equivalent to calling <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a> for each value\nfrom <code>other</code> in order, which means that values that already exist\nin <code>self</code> are unchanged in their current position.</p>\n<p>See also <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.union\" title=\"method indexmap::set::IndexSet::union\"><code>union</code></a> to iterate the combined values by\nreference, without modifying <code>self</code> or <code>other</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]);\n<span class=\"kw\">let </span>old_capacity = b.capacity();\n\na.append(<span class=\"kw-2\">&amp;mut </span>b);\n\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(b.len(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(b.capacity(), old_capacity);\n\n<span class=\"macro\">assert!</span>(a.iter().eq(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]));</code></pre></div>\n</div></details></div></details>",0,"rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#626-628\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#633-635\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#644-646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#652-654\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#662-664\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#677-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>remove</code> disrupts the set order – use <code>swap_remove</code> or <code>shift_remove</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_remove\" title=\"method indexmap::set::IndexSet::swap_remove\"><code>.swap_remove(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_remove\" title=\"method indexmap::set::IndexSet::shift_remove\"><code>.shift_remove(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#693-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#709-711\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#725-727\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>take</code> disrupts the set order – use <code>swap_take</code> or <code>shift_take</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_take\" title=\"method indexmap::set::IndexSet::swap_take\"><code>.swap_take(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_take\" title=\"method indexmap::set::IndexSet::shift_take\"><code>.shift_take(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#742-744\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#759-761\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#773-775\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#787-789\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details></div></details>",0,"rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#795\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#802\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#813-815\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#827-829\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>This is a stable sort – but equivalent values should not normally coexist in\na set at all, so <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> is preferred\nbecause it is generally faster and doesn’t allocate auxiliary memory.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_by\" title=\"method indexmap::set::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#837-839\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#848-850\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#860-862\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable_by\" title=\"method indexmap::set::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#870-872\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#879-881\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by_cached_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#896-899\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by_cached_key\" class=\"fn\">sort_by_cached_key</a>&lt;K, F&gt;(&amp;mut self, sort_key: F)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; K,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using a key extraction function.</p>\n<p>During sorting, the function is called at most once per entry, by using temporary storage\nto remember the results of its evaluation. The order of calls to the function is\nunspecified and may change between versions of <code>indexmap</code> or the standard library.</p>\n<p>Computes in <strong>O(m n + n log n + c)</strong> time () and <strong>O(n)</strong> space, where the function is\n<strong>O(m)</strong>, <em>n</em> is the length of the map, and <em>c</em> the capacity. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#913-915\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search\" class=\"fn\">binary_search</a>(&amp;self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set for a value.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time, which is notably less scalable than looking the value up\nusing <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.get_index_of\" title=\"method indexmap::set::IndexSet::get_index_of\"><code>get_index_of</code></a>, but this can also position missing values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#927-929\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by\" class=\"fn\">binary_search_by</a>&lt;'a, F&gt;(&amp;'a self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with a comparator function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by\" title=\"method slice::binary_search_by\"><code>slice::binary_search_by</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#941-944\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by_key\" class=\"fn\">binary_search_by_key</a>&lt;'a, B, F&gt;(\n    &amp;'a self,\n    b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;B</a>,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; B,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with an extraction function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by_key\" title=\"method slice::binary_search_by_key\"><code>slice::binary_search_by_key</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_point\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#956-958\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.partition_point\" class=\"fn\">partition_point</a>&lt;P&gt;(&amp;self, pred: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the index of the partition point of a sorted set according to the given predicate\n(the index of the first element of the second partition).</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.partition_point\" title=\"method slice::partition_point\"><code>slice::partition_point</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#966\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the set’s values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#973\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a slice of all the values in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#980\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts into a boxed slice of all the values in the set.</p>\n<p>Note that this will drop the inner hash table and any excess capacity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#989\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_range\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#998\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_range\" class=\"fn\">get_range</a>&lt;R&gt;(&amp;self, range: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a slice of values in the given range of indices.</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1007\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1027\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1040\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1053\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1062\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details></div></details>",0,"rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#19\">source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#20\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#21\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#23\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#103-105\">source</a><a href=\"#impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/sync/trait.Send.html\" title=\"trait rustc_data_structures::sync::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#107\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#108\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#110\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#51-53\">source</a><a href=\"#impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\">MutableValues</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Opt-in mutable access to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\"><code>MutableValues</code></a> for more information.</p>\n</div><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#55\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = T</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#57-59\">source</a><a href=\"#method.get_full_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\" class=\"fn\">get_full_mut2</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Return item index and mutable reference to the value <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#67\">source</a><a href=\"#method.get_index_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\" class=\"fn\">get_index_mut2</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class='docblock'>Return mutable reference to the value at an index. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#74-76\">source</a><a href=\"#method.retain2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\" class=\"fn\">retain2</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\">Read more</a></div></details></div></details>","MutableValues","rustc_data_structures::fx::FxIndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1174-1178\">source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","rustc_data_structures::fx::FxIndexSet"],["<section id=\"impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#82-100\">source</a><a href=\"#impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>, S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;</h3></section>","DynSend","rustc_data_structures::fx::FxIndexSet"],["<section id=\"impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#167-188\">source</a><a href=\"#impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>, S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;</h3></section>","DynSync","rustc_data_structures::fx::FxIndexSet"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1185-1188\">source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","rustc_data_structures::fx::FxIndexSet"]]],["rustc_infer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/arena/trait.ArenaAllocatable.html\" title=\"trait rustc_middle::arena::ArenaAllocatable\">ArenaAllocatable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.allocate_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_on\" class=\"fn\">allocate_on</a>(\n    self,\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n) -&gt; &amp;'tcx mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h4></section><section id=\"method.allocate_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_from_iter\" class=\"fn\">allocate_from_iter</a>(\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n    iter: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;&gt;,\n) -&gt; &amp;'tcx mut [<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;]</h4></section></div></details>","ArenaAllocatable<'tcx>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CSymbol,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CSymbol,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/arena/trait.ArenaAllocatable.html\" title=\"trait rustc_middle::arena::ArenaAllocatable\">ArenaAllocatable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.allocate_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_on\" class=\"fn\">allocate_on</a>(\n    self,\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n) -&gt; &amp;'tcx mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h4></section><section id=\"method.allocate_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_from_iter\" class=\"fn\">allocate_from_iter</a>(\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n    iter: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;&gt;,\n) -&gt; &amp;'tcx mut [<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;]</h4></section></div></details>","ArenaAllocatable<'tcx>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#92-95\">source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#97\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#103\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#134-136\">source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#139\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#681-684\">source</a><a href=\"#impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T, S&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#686\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></div></details>","Decodable<D>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1162-1164\">source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1167\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a></p>\n</div></details></div></details>","Default","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#668-671\">source</a><a href=\"#impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, T, S&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#673\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable<E>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1151-1154\">source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1156\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1140-1143\">source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1145\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1107-1110\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1112\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#353-356\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, R, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;K, R&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#359\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(Bound<usize>, Bound<usize>)>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeInclusive<usize>>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeToInclusive<usize>>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1095\">source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values at indexed positions.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1101\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1096\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1192-1195\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1198-1200\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1210-1212\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1218-1220\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#171\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#176\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#186\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements the set can hold without reallocating.</p>\n<p>This number is a lower bound; the set might be able to hold more,\nbut is guaranteed to be able to hold at least this many.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#203\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the set’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#217\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#222\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#229\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#236\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the set’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#253-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Drain.html\" title=\"struct indexmap::set::iter::Drain\">Drain</a>&lt;'_, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <a href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\"><code>RangeBounds&lt;usize&gt;</code></a>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#267-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#279\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#291\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#298\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#310\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>try_reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#317\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#324\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#329-332\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#355\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_sorted\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_sorted\" class=\"fn\">insert_sorted</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at its ordered position among sorted values.</p>\n<p>This is equivalent to finding the position with\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.binary_search\" title=\"method indexmap::set::IndexSet::binary_search\"><code>binary_search</code></a>, and if needed calling\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for a new value.</p>\n<p>If the sorted item is found in the set, it returns the index of that\nexisting item and <code>false</code>, without any change. Otherwise, it inserts the\nnew item and returns its sorted index and <code>true</code>.</p>\n<p>If the existing items are <strong>not</strong> already sorted, then the insertion\nindex is unspecified (like <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a>), but the value\nis moved to or inserted at that position regardless.</p>\n<p>Computes in <strong>O(n)</strong> time (average). Instead of repeating calls to\n<code>insert_sorted</code>, it may be faster to call batched <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a>\nor <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.extend\" title=\"method indexmap::set::IndexSet::extend\"><code>extend</code></a> and only call <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort\" title=\"method indexmap::set::IndexSet::sort\"><code>sort</code></a> or\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> once.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_before\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#429\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_before\" class=\"fn\">insert_before</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set before the value at the given index, or at the end.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving the\noriginal value in the set, but moved to the new position. The returned index\nwill either be the given index or one less, depending on how the value moved.\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_insert\" title=\"method indexmap::set::IndexSet::shift_insert\"><code>shift_insert</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value exactly at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..=set.len()</code> (inclusive).</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up will shift others down, so this moves *before* 10 to index 9.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), (<span class=\"number\">9</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'z' down will shift others up, so this moves to exactly 10.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'z'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">11</span>));\n\n<span class=\"comment\">// Moving or inserting before the endpoint is also valid.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'*'</span>), (<span class=\"number\">26</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'+'</span>), (<span class=\"number\">27</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#486\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_insert\" class=\"fn\">shift_insert</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at the given index.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving\nthe original value in the set, but moved to the given index.\nNote that existing values <strong>cannot</strong> be moved to <code>index == set.len()</code>!\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..set.len()</code> (exclusive) when moving an existing value, or\n<code>0..=set.len()</code> (inclusive) when inserting a new value.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up to 10 will shift others down, including the '*' that was at 10.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n\n<span class=\"comment\">// Moving the value 'z' down to 9 will shift others up, including the '*' that was at 9.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">9</span>, <span class=\"string\">'z'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Existing values can move to len-1 at most, but new values can insert at the endpoint.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len() - <span class=\"number\">1</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len(), <span class=\"string\">'+'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// This is an invalid index for moving an existing value!\n</span>set.shift_insert(set.len(), <span class=\"string\">'a'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#495\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#504\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#515-517\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Difference.html\" title=\"struct indexmap::set::iter::Difference\">Difference</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#527-532\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.SymmetricDifference.html\" title=\"struct indexmap::set::iter::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#540-542\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Intersection.html\" title=\"struct indexmap::set::iter::Intersection\">Intersection</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#551-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;'a, S2&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Union.html\" title=\"struct indexmap::set::iter::Union\">Union</a>&lt;'a, T, S&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#587-590\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.splice\" class=\"fn\">splice</a>&lt;R, I&gt;(\n    &amp;mut self,\n    range: R,\n    replace_with: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Splice.html\" title=\"struct indexmap::set::iter::Splice\">Splice</a>&lt;'_, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>, T, S&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a splicing iterator that replaces the specified range in the set\nwith the given <code>replace_with</code> iterator and yields the removed items.\n<code>replace_with</code> does not need to be the same length as <code>range</code>.</p>\n<p>The <code>range</code> is removed even if the iterator is not consumed until the\nend. It is unspecified how many elements are removed from the set if the\n<code>Splice</code> value is leaked.</p>\n<p>The input iterator <code>replace_with</code> is only consumed when the <code>Splice</code>\nvalue is dropped. If a value from the iterator matches an existing entry\nin the set (outside of <code>range</code>), then the original will be unchanged.\nOtherwise, the new value will be inserted in the replaced <code>range</code>.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::from([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>new = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>];\n<span class=\"kw\">let </span>removed: Vec&lt;<span class=\"kw\">_</span>&gt; = set.splice(<span class=\"number\">2</span>..<span class=\"number\">4</span>, new).collect();\n\n<span class=\"comment\">// 1 and 4 kept their positions, while 5, 3, and 2 were newly inserted.\n</span><span class=\"macro\">assert!</span>(set.into_iter().eq([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]));\n<span class=\"macro\">assert_eq!</span>(removed, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#621\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.append\" class=\"fn\">append</a>&lt;S2&gt;(&amp;mut self, other: &amp;mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;)</h4></section></summary><div class=\"docblock\"><p>Moves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.</p>\n<p>This is equivalent to calling <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a> for each value\nfrom <code>other</code> in order, which means that values that already exist\nin <code>self</code> are unchanged in their current position.</p>\n<p>See also <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.union\" title=\"method indexmap::set::IndexSet::union\"><code>union</code></a> to iterate the combined values by\nreference, without modifying <code>self</code> or <code>other</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]);\n<span class=\"kw\">let </span>old_capacity = b.capacity();\n\na.append(<span class=\"kw-2\">&amp;mut </span>b);\n\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(b.len(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(b.capacity(), old_capacity);\n\n<span class=\"macro\">assert!</span>(a.iter().eq(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]));</code></pre></div>\n</div></details></div></details>",0,"rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#626-628\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#633-635\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#644-646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#652-654\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#662-664\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#677-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>remove</code> disrupts the set order – use <code>swap_remove</code> or <code>shift_remove</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_remove\" title=\"method indexmap::set::IndexSet::swap_remove\"><code>.swap_remove(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_remove\" title=\"method indexmap::set::IndexSet::shift_remove\"><code>.shift_remove(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#693-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#709-711\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#725-727\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>take</code> disrupts the set order – use <code>swap_take</code> or <code>shift_take</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_take\" title=\"method indexmap::set::IndexSet::swap_take\"><code>.swap_take(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_take\" title=\"method indexmap::set::IndexSet::shift_take\"><code>.shift_take(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#742-744\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#759-761\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#773-775\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#787-789\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details></div></details>",0,"rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#795\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#802\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#813-815\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#827-829\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>This is a stable sort – but equivalent values should not normally coexist in\na set at all, so <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> is preferred\nbecause it is generally faster and doesn’t allocate auxiliary memory.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_by\" title=\"method indexmap::set::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#837-839\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#848-850\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#860-862\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable_by\" title=\"method indexmap::set::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#870-872\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#879-881\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by_cached_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#896-899\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by_cached_key\" class=\"fn\">sort_by_cached_key</a>&lt;K, F&gt;(&amp;mut self, sort_key: F)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; K,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using a key extraction function.</p>\n<p>During sorting, the function is called at most once per entry, by using temporary storage\nto remember the results of its evaluation. The order of calls to the function is\nunspecified and may change between versions of <code>indexmap</code> or the standard library.</p>\n<p>Computes in <strong>O(m n + n log n + c)</strong> time () and <strong>O(n)</strong> space, where the function is\n<strong>O(m)</strong>, <em>n</em> is the length of the map, and <em>c</em> the capacity. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#913-915\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search\" class=\"fn\">binary_search</a>(&amp;self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set for a value.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time, which is notably less scalable than looking the value up\nusing <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.get_index_of\" title=\"method indexmap::set::IndexSet::get_index_of\"><code>get_index_of</code></a>, but this can also position missing values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#927-929\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by\" class=\"fn\">binary_search_by</a>&lt;'a, F&gt;(&amp;'a self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with a comparator function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by\" title=\"method slice::binary_search_by\"><code>slice::binary_search_by</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#941-944\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by_key\" class=\"fn\">binary_search_by_key</a>&lt;'a, B, F&gt;(\n    &amp;'a self,\n    b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;B</a>,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; B,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with an extraction function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by_key\" title=\"method slice::binary_search_by_key\"><code>slice::binary_search_by_key</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_point\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#956-958\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.partition_point\" class=\"fn\">partition_point</a>&lt;P&gt;(&amp;self, pred: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the index of the partition point of a sorted set according to the given predicate\n(the index of the first element of the second partition).</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.partition_point\" title=\"method slice::partition_point\"><code>slice::partition_point</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#966\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the set’s values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#973\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a slice of all the values in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#980\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts into a boxed slice of all the values in the set.</p>\n<p>Note that this will drop the inner hash table and any excess capacity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#989\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_range\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#998\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_range\" class=\"fn\">get_range</a>&lt;R&gt;(&amp;self, range: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a slice of values in the given range of indices.</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1007\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1027\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1040\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1053\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1062\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details></div></details>",0,"rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#19\">source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#20\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#21\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#23\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#103-105\">source</a><a href=\"#impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#107\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#108\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#110\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#51-53\">source</a><a href=\"#impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\">MutableValues</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Opt-in mutable access to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\"><code>MutableValues</code></a> for more information.</p>\n</div><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#55\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = T</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#57-59\">source</a><a href=\"#method.get_full_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\" class=\"fn\">get_full_mut2</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Return item index and mutable reference to the value <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#67\">source</a><a href=\"#method.get_index_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\" class=\"fn\">get_index_mut2</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class='docblock'>Return mutable reference to the value at an index. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#74-76\">source</a><a href=\"#method.retain2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\" class=\"fn\">retain2</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\">Read more</a></div></details></div></details>","MutableValues","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1174-1178\">source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefDecodable%3C'tcx,+D%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#509\">source</a><a href=\"#impl-RefDecodable%3C'tcx,+D%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D&gt; <a class=\"trait\" href=\"rustc_middle/ty/codec/trait.RefDecodable.html\" title=\"trait rustc_middle::ty::codec::RefDecodable\">RefDecodable</a>&lt;'tcx, D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_infer/infer/canonical/ir/trait.TyDecoder.html\" title=\"trait rustc_infer::infer::canonical::ir::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#509\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/codec/trait.RefDecodable.html#tymethod.decode\" class=\"fn\">decode</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>,\n) -&gt; &amp;'tcx <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h4></section></div></details>","RefDecodable<'tcx, D>","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<section id=\"impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#82-100\">source</a><a href=\"#impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,\n    S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,</div></h3></section>","DynSend","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<section id=\"impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#167-188\">source</a><a href=\"#impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,\n    S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,</div></h3></section>","DynSync","rustc_infer::infer::canonical::ir::data_structures::IndexSet"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1185-1188\">source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","rustc_infer::infer::canonical::ir::data_structures::IndexSet"]]],["rustc_middle",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1226-1230\">source</a><a href=\"#impl-BitAnd%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1237\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the set intersection, cloned into a new set.</p>\n<p>Values are collected in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1232\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details></div></details>","BitAnd<&IndexSet<T, S2>>","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1242-1246\">source</a><a href=\"#impl-BitOr%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1254\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the set union, cloned into a new set.</p>\n<p>Values from <code>self</code> are collected in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1248\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details></div></details>","BitOr<&IndexSet<T, S2>>","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1259-1263\">source</a><a href=\"#impl-BitXor%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1271\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the set symmetric-difference, cloned into a new set.</p>\n<p>Values from <code>self</code> are collected in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1265\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details></div></details>","BitXor<&IndexSet<T, S2>>","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#92-95\">source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#97\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#103\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#134-136\">source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#139\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#681-684\">source</a><a href=\"#impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T, S&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#686\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></div></details>","Decodable<D>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1162-1164\">source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1167\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a></p>\n</div></details></div></details>","Default","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#668-671\">source</a><a href=\"#impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, T, S&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#673\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable<E>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1151-1154\">source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1156\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1140-1143\">source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1145\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1122-1124\">source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1135\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span>set1 = IndexSet::from([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>set2: IndexSet&lt;<span class=\"kw\">_</span>&gt; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>].into();\n<span class=\"macro\">assert_eq!</span>(set1, set2);</code></pre></div>\n</div></details></div></details>","From<[T; N]>","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1107-1110\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1112\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#353-356\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, R, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;K, R&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#359\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(Bound<usize>, Bound<usize>)>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeInclusive<usize>>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeToInclusive<usize>>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1095\">source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values at indexed positions.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1101\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1096\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#152\">source</a><a href=\"#impl-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#154\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set. (Does not allocate.)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1192-1195\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1198-1200\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1210-1212\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1218-1220\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#171\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#176\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#186\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements the set can hold without reallocating.</p>\n<p>This number is a lower bound; the set might be able to hold more,\nbut is guaranteed to be able to hold at least this many.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#203\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the set’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#217\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#222\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#229\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#236\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the set’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#253-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Drain.html\" title=\"struct indexmap::set::iter::Drain\">Drain</a>&lt;'_, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <a href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\"><code>RangeBounds&lt;usize&gt;</code></a>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#267-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#279\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#291\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#298\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#310\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>try_reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#317\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#324\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#329-332\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#355\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_sorted\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_sorted\" class=\"fn\">insert_sorted</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at its ordered position among sorted values.</p>\n<p>This is equivalent to finding the position with\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.binary_search\" title=\"method indexmap::set::IndexSet::binary_search\"><code>binary_search</code></a>, and if needed calling\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for a new value.</p>\n<p>If the sorted item is found in the set, it returns the index of that\nexisting item and <code>false</code>, without any change. Otherwise, it inserts the\nnew item and returns its sorted index and <code>true</code>.</p>\n<p>If the existing items are <strong>not</strong> already sorted, then the insertion\nindex is unspecified (like <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a>), but the value\nis moved to or inserted at that position regardless.</p>\n<p>Computes in <strong>O(n)</strong> time (average). Instead of repeating calls to\n<code>insert_sorted</code>, it may be faster to call batched <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a>\nor <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.extend\" title=\"method indexmap::set::IndexSet::extend\"><code>extend</code></a> and only call <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort\" title=\"method indexmap::set::IndexSet::sort\"><code>sort</code></a> or\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> once.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_before\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#429\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_before\" class=\"fn\">insert_before</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set before the value at the given index, or at the end.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving the\noriginal value in the set, but moved to the new position. The returned index\nwill either be the given index or one less, depending on how the value moved.\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_insert\" title=\"method indexmap::set::IndexSet::shift_insert\"><code>shift_insert</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value exactly at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..=set.len()</code> (inclusive).</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up will shift others down, so this moves *before* 10 to index 9.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), (<span class=\"number\">9</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'z' down will shift others up, so this moves to exactly 10.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'z'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">11</span>));\n\n<span class=\"comment\">// Moving or inserting before the endpoint is also valid.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'*'</span>), (<span class=\"number\">26</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'+'</span>), (<span class=\"number\">27</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#486\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_insert\" class=\"fn\">shift_insert</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at the given index.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving\nthe original value in the set, but moved to the given index.\nNote that existing values <strong>cannot</strong> be moved to <code>index == set.len()</code>!\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..set.len()</code> (exclusive) when moving an existing value, or\n<code>0..=set.len()</code> (inclusive) when inserting a new value.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up to 10 will shift others down, including the '*' that was at 10.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n\n<span class=\"comment\">// Moving the value 'z' down to 9 will shift others up, including the '*' that was at 9.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">9</span>, <span class=\"string\">'z'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Existing values can move to len-1 at most, but new values can insert at the endpoint.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len() - <span class=\"number\">1</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len(), <span class=\"string\">'+'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// This is an invalid index for moving an existing value!\n</span>set.shift_insert(set.len(), <span class=\"string\">'a'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#495\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#504\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#515-517\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Difference.html\" title=\"struct indexmap::set::iter::Difference\">Difference</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#527-532\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.SymmetricDifference.html\" title=\"struct indexmap::set::iter::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#540-542\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Intersection.html\" title=\"struct indexmap::set::iter::Intersection\">Intersection</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#551-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;'a, S2&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Union.html\" title=\"struct indexmap::set::iter::Union\">Union</a>&lt;'a, T, S&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#587-590\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.splice\" class=\"fn\">splice</a>&lt;R, I&gt;(\n    &amp;mut self,\n    range: R,\n    replace_with: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Splice.html\" title=\"struct indexmap::set::iter::Splice\">Splice</a>&lt;'_, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>, T, S&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a splicing iterator that replaces the specified range in the set\nwith the given <code>replace_with</code> iterator and yields the removed items.\n<code>replace_with</code> does not need to be the same length as <code>range</code>.</p>\n<p>The <code>range</code> is removed even if the iterator is not consumed until the\nend. It is unspecified how many elements are removed from the set if the\n<code>Splice</code> value is leaked.</p>\n<p>The input iterator <code>replace_with</code> is only consumed when the <code>Splice</code>\nvalue is dropped. If a value from the iterator matches an existing entry\nin the set (outside of <code>range</code>), then the original will be unchanged.\nOtherwise, the new value will be inserted in the replaced <code>range</code>.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::from([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>new = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>];\n<span class=\"kw\">let </span>removed: Vec&lt;<span class=\"kw\">_</span>&gt; = set.splice(<span class=\"number\">2</span>..<span class=\"number\">4</span>, new).collect();\n\n<span class=\"comment\">// 1 and 4 kept their positions, while 5, 3, and 2 were newly inserted.\n</span><span class=\"macro\">assert!</span>(set.into_iter().eq([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]));\n<span class=\"macro\">assert_eq!</span>(removed, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#621\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.append\" class=\"fn\">append</a>&lt;S2&gt;(&amp;mut self, other: &amp;mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;)</h4></section></summary><div class=\"docblock\"><p>Moves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.</p>\n<p>This is equivalent to calling <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a> for each value\nfrom <code>other</code> in order, which means that values that already exist\nin <code>self</code> are unchanged in their current position.</p>\n<p>See also <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.union\" title=\"method indexmap::set::IndexSet::union\"><code>union</code></a> to iterate the combined values by\nreference, without modifying <code>self</code> or <code>other</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]);\n<span class=\"kw\">let </span>old_capacity = b.capacity();\n\na.append(<span class=\"kw-2\">&amp;mut </span>b);\n\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(b.len(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(b.capacity(), old_capacity);\n\n<span class=\"macro\">assert!</span>(a.iter().eq(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]));</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#626-628\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#633-635\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#644-646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#652-654\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#662-664\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#677-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>remove</code> disrupts the set order – use <code>swap_remove</code> or <code>shift_remove</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_remove\" title=\"method indexmap::set::IndexSet::swap_remove\"><code>.swap_remove(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_remove\" title=\"method indexmap::set::IndexSet::shift_remove\"><code>.shift_remove(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#693-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#709-711\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#725-727\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>take</code> disrupts the set order – use <code>swap_take</code> or <code>shift_take</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_take\" title=\"method indexmap::set::IndexSet::swap_take\"><code>.swap_take(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_take\" title=\"method indexmap::set::IndexSet::shift_take\"><code>.shift_take(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#742-744\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#759-761\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#773-775\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#787-789\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details></div></details>",0,"rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#795\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#802\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#813-815\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#827-829\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>This is a stable sort – but equivalent values should not normally coexist in\na set at all, so <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> is preferred\nbecause it is generally faster and doesn’t allocate auxiliary memory.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_by\" title=\"method indexmap::set::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#837-839\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#848-850\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#860-862\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable_by\" title=\"method indexmap::set::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#870-872\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#879-881\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by_cached_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#896-899\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by_cached_key\" class=\"fn\">sort_by_cached_key</a>&lt;K, F&gt;(&amp;mut self, sort_key: F)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; K,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using a key extraction function.</p>\n<p>During sorting, the function is called at most once per entry, by using temporary storage\nto remember the results of its evaluation. The order of calls to the function is\nunspecified and may change between versions of <code>indexmap</code> or the standard library.</p>\n<p>Computes in <strong>O(m n + n log n + c)</strong> time () and <strong>O(n)</strong> space, where the function is\n<strong>O(m)</strong>, <em>n</em> is the length of the map, and <em>c</em> the capacity. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#913-915\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search\" class=\"fn\">binary_search</a>(&amp;self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set for a value.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time, which is notably less scalable than looking the value up\nusing <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.get_index_of\" title=\"method indexmap::set::IndexSet::get_index_of\"><code>get_index_of</code></a>, but this can also position missing values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#927-929\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by\" class=\"fn\">binary_search_by</a>&lt;'a, F&gt;(&amp;'a self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with a comparator function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by\" title=\"method slice::binary_search_by\"><code>slice::binary_search_by</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#941-944\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by_key\" class=\"fn\">binary_search_by_key</a>&lt;'a, B, F&gt;(\n    &amp;'a self,\n    b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;B</a>,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; B,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with an extraction function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by_key\" title=\"method slice::binary_search_by_key\"><code>slice::binary_search_by_key</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_point\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#956-958\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.partition_point\" class=\"fn\">partition_point</a>&lt;P&gt;(&amp;self, pred: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the index of the partition point of a sorted set according to the given predicate\n(the index of the first element of the second partition).</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.partition_point\" title=\"method slice::partition_point\"><code>slice::partition_point</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#966\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the set’s values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#973\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a slice of all the values in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#980\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts into a boxed slice of all the values in the set.</p>\n<p>Note that this will drop the inner hash table and any excess capacity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#989\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_range\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#998\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_range\" class=\"fn\">get_range</a>&lt;R&gt;(&amp;self, range: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a slice of values in the given range of indices.</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1007\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1027\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1040\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1053\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1062\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details></div></details>",0,"rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#10\">source</a><a href=\"#impl-IntoIterator-for-%26IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#11\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#12\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#14\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#19\">source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#20\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#21\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#23\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#131-133\">source</a><a href=\"#impl-IntoParallelIterator-for-%26IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#135\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#136\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.ParIter.html\" title=\"struct indexmap::rustc::set::ParIter\">ParIter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#138\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.ParIter.html\" title=\"struct indexmap::rustc::set::ParIter\">ParIter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#103-105\">source</a><a href=\"#impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#107\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#108\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#110\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#51-53\">source</a><a href=\"#impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\">MutableValues</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Opt-in mutable access to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\"><code>MutableValues</code></a> for more information.</p>\n</div><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#55\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = T</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#57-59\">source</a><a href=\"#method.get_full_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\" class=\"fn\">get_full_mut2</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Return item index and mutable reference to the value <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#67\">source</a><a href=\"#method.get_index_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\" class=\"fn\">get_index_mut2</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class='docblock'>Return mutable reference to the value at an index. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#74-76\">source</a><a href=\"#method.retain2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\" class=\"fn\">retain2</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\">Read more</a></div></details></div></details>","MutableValues","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1174-1178\">source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1276-1280\">source</a><a href=\"#impl-Sub%3C%26IndexSet%3CT,+S2%3E%3E-for-%26IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1287\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the set difference, cloned into a new set.</p>\n<p>Values are collected in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1282\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details></div></details>","Sub<&IndexSet<T, S2>>","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<section id=\"impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#82-100\">source</a><a href=\"#impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,\n    S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,</div></h3></section>","DynSend","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<section id=\"impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#167-188\">source</a><a href=\"#impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,\n    S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,</div></h3></section>","DynSync","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1185-1188\">source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","rustc_middle::ty::RegisteredTools","rustc_middle::ty::data_structures::IndexSet","rustc_middle::query::queries::registered_tools::ProvidedValue","rustc_middle::query::queries::mir_keys::ProvidedValue"]]],["rustc_trait_selection",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/arena/trait.ArenaAllocatable.html\" title=\"trait rustc_middle::arena::ArenaAllocatable\">ArenaAllocatable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.allocate_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_on\" class=\"fn\">allocate_on</a>(\n    self,\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n) -&gt; &amp;'tcx mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h4></section><section id=\"method.allocate_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_from_iter\" class=\"fn\">allocate_from_iter</a>(\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n    iter: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;&gt;,\n) -&gt; &amp;'tcx mut [<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;]</h4></section></div></details>","ArenaAllocatable<'tcx>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CSymbol,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#impl-ArenaAllocatable%3C'tcx%3E-for-IndexSet%3CSymbol,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/arena/trait.ArenaAllocatable.html\" title=\"trait rustc_middle::arena::ArenaAllocatable\">ArenaAllocatable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.allocate_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_on\" class=\"fn\">allocate_on</a>(\n    self,\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n) -&gt; &amp;'tcx mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h4></section><section id=\"method.allocate_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/arena.rs.html#121\">source</a><a href=\"#method.allocate_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/arena/trait.ArenaAllocatable.html#tymethod.allocate_from_iter\" class=\"fn\">allocate_from_iter</a>(\n    arena: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/arena/struct.Arena.html\" title=\"struct rustc_middle::arena::Arena\">Arena</a>&lt;'tcx&gt;,\n    iter: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;&gt;,\n) -&gt; &amp;'tcx mut [<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;]</h4></section></div></details>","ArenaAllocatable<'tcx>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#92-95\">source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#97\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#103\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#134-136\">source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#139\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#681-684\">source</a><a href=\"#impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T, S&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#686\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></div></details>","Decodable<D>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1162-1164\">source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1167\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a></p>\n</div></details></div></details>","Default","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#668-671\">source</a><a href=\"#impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, T, S&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#673\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable<E>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1151-1154\">source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1156\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1140-1143\">source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1145\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1107-1110\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1112\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#353-356\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, R, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;K, R&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#359\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(Bound<usize>, Bound<usize>)>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeInclusive<usize>>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeToInclusive<usize>>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1095\">source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values at indexed positions.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1101\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1096\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1192-1195\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1198-1200\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1210-1212\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1218-1220\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#171\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#176\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#186\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements the set can hold without reallocating.</p>\n<p>This number is a lower bound; the set might be able to hold more,\nbut is guaranteed to be able to hold at least this many.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#203\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the set’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#217\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#222\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#229\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#236\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the set’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#253-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Drain.html\" title=\"struct indexmap::set::iter::Drain\">Drain</a>&lt;'_, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <a href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\"><code>RangeBounds&lt;usize&gt;</code></a>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#267-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#279\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#291\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#298\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#310\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>try_reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#317\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#324\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#329-332\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#355\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_sorted\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_sorted\" class=\"fn\">insert_sorted</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at its ordered position among sorted values.</p>\n<p>This is equivalent to finding the position with\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.binary_search\" title=\"method indexmap::set::IndexSet::binary_search\"><code>binary_search</code></a>, and if needed calling\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for a new value.</p>\n<p>If the sorted item is found in the set, it returns the index of that\nexisting item and <code>false</code>, without any change. Otherwise, it inserts the\nnew item and returns its sorted index and <code>true</code>.</p>\n<p>If the existing items are <strong>not</strong> already sorted, then the insertion\nindex is unspecified (like <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a>), but the value\nis moved to or inserted at that position regardless.</p>\n<p>Computes in <strong>O(n)</strong> time (average). Instead of repeating calls to\n<code>insert_sorted</code>, it may be faster to call batched <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a>\nor <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.extend\" title=\"method indexmap::set::IndexSet::extend\"><code>extend</code></a> and only call <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort\" title=\"method indexmap::set::IndexSet::sort\"><code>sort</code></a> or\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> once.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_before\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#429\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_before\" class=\"fn\">insert_before</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set before the value at the given index, or at the end.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving the\noriginal value in the set, but moved to the new position. The returned index\nwill either be the given index or one less, depending on how the value moved.\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_insert\" title=\"method indexmap::set::IndexSet::shift_insert\"><code>shift_insert</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value exactly at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..=set.len()</code> (inclusive).</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up will shift others down, so this moves *before* 10 to index 9.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), (<span class=\"number\">9</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'z' down will shift others up, so this moves to exactly 10.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'z'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">11</span>));\n\n<span class=\"comment\">// Moving or inserting before the endpoint is also valid.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'*'</span>), (<span class=\"number\">26</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'+'</span>), (<span class=\"number\">27</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#486\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_insert\" class=\"fn\">shift_insert</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at the given index.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving\nthe original value in the set, but moved to the given index.\nNote that existing values <strong>cannot</strong> be moved to <code>index == set.len()</code>!\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..set.len()</code> (exclusive) when moving an existing value, or\n<code>0..=set.len()</code> (inclusive) when inserting a new value.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up to 10 will shift others down, including the '*' that was at 10.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n\n<span class=\"comment\">// Moving the value 'z' down to 9 will shift others up, including the '*' that was at 9.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">9</span>, <span class=\"string\">'z'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Existing values can move to len-1 at most, but new values can insert at the endpoint.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len() - <span class=\"number\">1</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len(), <span class=\"string\">'+'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// This is an invalid index for moving an existing value!\n</span>set.shift_insert(set.len(), <span class=\"string\">'a'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#495\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#504\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#515-517\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Difference.html\" title=\"struct indexmap::set::iter::Difference\">Difference</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#527-532\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.SymmetricDifference.html\" title=\"struct indexmap::set::iter::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#540-542\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Intersection.html\" title=\"struct indexmap::set::iter::Intersection\">Intersection</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#551-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;'a, S2&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Union.html\" title=\"struct indexmap::set::iter::Union\">Union</a>&lt;'a, T, S&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#587-590\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.splice\" class=\"fn\">splice</a>&lt;R, I&gt;(\n    &amp;mut self,\n    range: R,\n    replace_with: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Splice.html\" title=\"struct indexmap::set::iter::Splice\">Splice</a>&lt;'_, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>, T, S&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a splicing iterator that replaces the specified range in the set\nwith the given <code>replace_with</code> iterator and yields the removed items.\n<code>replace_with</code> does not need to be the same length as <code>range</code>.</p>\n<p>The <code>range</code> is removed even if the iterator is not consumed until the\nend. It is unspecified how many elements are removed from the set if the\n<code>Splice</code> value is leaked.</p>\n<p>The input iterator <code>replace_with</code> is only consumed when the <code>Splice</code>\nvalue is dropped. If a value from the iterator matches an existing entry\nin the set (outside of <code>range</code>), then the original will be unchanged.\nOtherwise, the new value will be inserted in the replaced <code>range</code>.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::from([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>new = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>];\n<span class=\"kw\">let </span>removed: Vec&lt;<span class=\"kw\">_</span>&gt; = set.splice(<span class=\"number\">2</span>..<span class=\"number\">4</span>, new).collect();\n\n<span class=\"comment\">// 1 and 4 kept their positions, while 5, 3, and 2 were newly inserted.\n</span><span class=\"macro\">assert!</span>(set.into_iter().eq([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]));\n<span class=\"macro\">assert_eq!</span>(removed, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#621\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.append\" class=\"fn\">append</a>&lt;S2&gt;(&amp;mut self, other: &amp;mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;)</h4></section></summary><div class=\"docblock\"><p>Moves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.</p>\n<p>This is equivalent to calling <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a> for each value\nfrom <code>other</code> in order, which means that values that already exist\nin <code>self</code> are unchanged in their current position.</p>\n<p>See also <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.union\" title=\"method indexmap::set::IndexSet::union\"><code>union</code></a> to iterate the combined values by\nreference, without modifying <code>self</code> or <code>other</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]);\n<span class=\"kw\">let </span>old_capacity = b.capacity();\n\na.append(<span class=\"kw-2\">&amp;mut </span>b);\n\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(b.len(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(b.capacity(), old_capacity);\n\n<span class=\"macro\">assert!</span>(a.iter().eq(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]));</code></pre></div>\n</div></details></div></details>",0,"rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#626-628\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#633-635\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#644-646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#652-654\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#662-664\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#677-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>remove</code> disrupts the set order – use <code>swap_remove</code> or <code>shift_remove</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_remove\" title=\"method indexmap::set::IndexSet::swap_remove\"><code>.swap_remove(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_remove\" title=\"method indexmap::set::IndexSet::shift_remove\"><code>.shift_remove(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#693-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#709-711\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#725-727\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>take</code> disrupts the set order – use <code>swap_take</code> or <code>shift_take</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_take\" title=\"method indexmap::set::IndexSet::swap_take\"><code>.swap_take(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_take\" title=\"method indexmap::set::IndexSet::shift_take\"><code>.shift_take(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#742-744\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#759-761\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#773-775\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#787-789\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details></div></details>",0,"rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#795\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#802\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#813-815\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#827-829\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>This is a stable sort – but equivalent values should not normally coexist in\na set at all, so <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> is preferred\nbecause it is generally faster and doesn’t allocate auxiliary memory.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_by\" title=\"method indexmap::set::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#837-839\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#848-850\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#860-862\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable_by\" title=\"method indexmap::set::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#870-872\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#879-881\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by_cached_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#896-899\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by_cached_key\" class=\"fn\">sort_by_cached_key</a>&lt;K, F&gt;(&amp;mut self, sort_key: F)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; K,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using a key extraction function.</p>\n<p>During sorting, the function is called at most once per entry, by using temporary storage\nto remember the results of its evaluation. The order of calls to the function is\nunspecified and may change between versions of <code>indexmap</code> or the standard library.</p>\n<p>Computes in <strong>O(m n + n log n + c)</strong> time () and <strong>O(n)</strong> space, where the function is\n<strong>O(m)</strong>, <em>n</em> is the length of the map, and <em>c</em> the capacity. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#913-915\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search\" class=\"fn\">binary_search</a>(&amp;self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set for a value.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time, which is notably less scalable than looking the value up\nusing <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.get_index_of\" title=\"method indexmap::set::IndexSet::get_index_of\"><code>get_index_of</code></a>, but this can also position missing values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#927-929\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by\" class=\"fn\">binary_search_by</a>&lt;'a, F&gt;(&amp;'a self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with a comparator function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by\" title=\"method slice::binary_search_by\"><code>slice::binary_search_by</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#941-944\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by_key\" class=\"fn\">binary_search_by_key</a>&lt;'a, B, F&gt;(\n    &amp;'a self,\n    b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;B</a>,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; B,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with an extraction function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by_key\" title=\"method slice::binary_search_by_key\"><code>slice::binary_search_by_key</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_point\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#956-958\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.partition_point\" class=\"fn\">partition_point</a>&lt;P&gt;(&amp;self, pred: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the index of the partition point of a sorted set according to the given predicate\n(the index of the first element of the second partition).</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.partition_point\" title=\"method slice::partition_point\"><code>slice::partition_point</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#966\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the set’s values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#973\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a slice of all the values in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#980\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts into a boxed slice of all the values in the set.</p>\n<p>Note that this will drop the inner hash table and any excess capacity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#989\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_range\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#998\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_range\" class=\"fn\">get_range</a>&lt;R&gt;(&amp;self, range: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a slice of values in the given range of indices.</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1007\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1027\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1040\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1053\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1062\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details></div></details>",0,"rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#19\">source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#20\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#21\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#23\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#103-105\">source</a><a href=\"#impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#107\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#108\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#110\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#51-53\">source</a><a href=\"#impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\">MutableValues</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Opt-in mutable access to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\"><code>MutableValues</code></a> for more information.</p>\n</div><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#55\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = T</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#57-59\">source</a><a href=\"#method.get_full_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\" class=\"fn\">get_full_mut2</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Return item index and mutable reference to the value <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#67\">source</a><a href=\"#method.get_index_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\" class=\"fn\">get_index_mut2</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class='docblock'>Return mutable reference to the value at an index. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#74-76\">source</a><a href=\"#method.retain2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\" class=\"fn\">retain2</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\">Read more</a></div></details></div></details>","MutableValues","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1174-1178\">source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefDecodable%3C'tcx,+D%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#509\">source</a><a href=\"#impl-RefDecodable%3C'tcx,+D%3E-for-IndexSet%3CItemLocalId,+BuildHasherDefault%3CFxHasher%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D&gt; <a class=\"trait\" href=\"rustc_middle/ty/codec/trait.RefDecodable.html\" title=\"trait rustc_middle::ty::codec::RefDecodable\">RefDecodable</a>&lt;'tcx, D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_trait_selection/infer/canonical/ir/trait.TyDecoder.html\" title=\"trait rustc_trait_selection::infer::canonical::ir::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#509\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/codec/trait.RefDecodable.html#tymethod.decode\" class=\"fn\">decode</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>,\n) -&gt; &amp;'tcx <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.ItemLocalId.html\" title=\"struct rustc_hir::hir_id::ItemLocalId\">ItemLocalId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>&gt;&gt;</h4></section></div></details>","RefDecodable<'tcx, D>","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet"],["<section id=\"impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#82-100\">source</a><a href=\"#impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,\n    S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,</div></h3></section>","DynSend","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<section id=\"impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/marker.rs.html#167-188\">source</a><a href=\"#impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,\n    S: <a class=\"trait\" href=\"rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,</div></h3></section>","DynSync","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1185-1188\">source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","rustc_trait_selection::infer::canonical::ir::data_structures::IndexSet","rustc_trait_selection::infer::outlives::env::RegionBoundPairs"]]],["rustc_type_ir",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#92-95\">source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#97\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#103\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#134-136\">source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#139\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#681-684\">source</a><a href=\"#impl-Decodable%3CD%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#686\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></div></details>","Decodable<D>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1162-1164\">source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1167\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a></p>\n</div></details></div></details>","Default","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#668-671\">source</a><a href=\"#impl-Encodable%3CE%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#673\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable<E>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1151-1154\">source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1156\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1140-1143\">source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1145\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1107-1110\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1112\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_data_structures/stable_hasher.rs.html#353-356\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-IndexSet%3CK,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, R, CTX&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;K, R&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_data_structures/stable_hasher.rs.html#359\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(Bound<usize>, Bound<usize>)>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeInclusive<usize>>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/slice.rs.html#283-291\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeToInclusive.html\" title=\"struct core::ops::range::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeToInclusive<usize>>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1095\">source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values at indexed positions.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1101\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1096\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1192-1195\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1198-1200\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1210-1212\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1218-1220\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#171\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#176\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#186\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements the set can hold without reallocating.</p>\n<p>This number is a lower bound; the set might be able to hold more,\nbut is guaranteed to be able to hold at least this many.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#203\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the set’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#217\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#222\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Iter.html\" title=\"struct indexmap::set::iter::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#229\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#236\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the set’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#253-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Drain.html\" title=\"struct indexmap::set::iter::Drain\">Drain</a>&lt;'_, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <a href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\"><code>RangeBounds&lt;usize&gt;</code></a>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#267-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#279\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#291\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#298\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#310\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>try_reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#317\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#324\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#329-332\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#355\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_sorted\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_sorted\" class=\"fn\">insert_sorted</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at its ordered position among sorted values.</p>\n<p>This is equivalent to finding the position with\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.binary_search\" title=\"method indexmap::set::IndexSet::binary_search\"><code>binary_search</code></a>, and if needed calling\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for a new value.</p>\n<p>If the sorted item is found in the set, it returns the index of that\nexisting item and <code>false</code>, without any change. Otherwise, it inserts the\nnew item and returns its sorted index and <code>true</code>.</p>\n<p>If the existing items are <strong>not</strong> already sorted, then the insertion\nindex is unspecified (like <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a>), but the value\nis moved to or inserted at that position regardless.</p>\n<p>Computes in <strong>O(n)</strong> time (average). Instead of repeating calls to\n<code>insert_sorted</code>, it may be faster to call batched <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a>\nor <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.extend\" title=\"method indexmap::set::IndexSet::extend\"><code>extend</code></a> and only call <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort\" title=\"method indexmap::set::IndexSet::sort\"><code>sort</code></a> or\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> once.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_before\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#429\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.insert_before\" class=\"fn\">insert_before</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set before the value at the given index, or at the end.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving the\noriginal value in the set, but moved to the new position. The returned index\nwill either be the given index or one less, depending on how the value moved.\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_insert\" title=\"method indexmap::set::IndexSet::shift_insert\"><code>shift_insert</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value exactly at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..=set.len()</code> (inclusive).</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up will shift others down, so this moves *before* 10 to index 9.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), (<span class=\"number\">9</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'z' down will shift others up, so this moves to exactly 10.\n</span><span class=\"macro\">assert_eq!</span>(set.insert_before(<span class=\"number\">10</span>, <span class=\"string\">'z'</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">11</span>));\n\n<span class=\"comment\">// Moving or inserting before the endpoint is also valid.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'*'</span>), (<span class=\"number\">26</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.insert_before(set.len(), <span class=\"string\">'+'</span>), (<span class=\"number\">27</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#486\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_insert\" class=\"fn\">shift_insert</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set at the given index.</p>\n<p>If an equivalent item already exists in the set, it returns <code>false</code> leaving\nthe original value in the set, but moved to the given index.\nNote that existing values <strong>cannot</strong> be moved to <code>index == set.len()</code>!\n(See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert_before\" title=\"method indexmap::set::IndexSet::insert_before\"><code>insert_before</code></a> for different behavior here.)</p>\n<p>Otherwise, it inserts the new value at the given index and returns <code>true</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.\nValid indices are <code>0..set.len()</code> (exclusive) when moving an existing value, or\n<code>0..=set.len()</code> (inclusive) when inserting a new value.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// The new value '*' goes exactly at the given index.\n</span><span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Moving the value 'a' up to 10 will shift others down, including the '*' that was at 10.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">10</span>, <span class=\"string\">'a'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'a'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n\n<span class=\"comment\">// Moving the value 'z' down to 9 will shift others up, including the '*' that was at 9.\n</span><span class=\"macro\">assert_eq!</span>(set.shift_insert(<span class=\"number\">9</span>, <span class=\"string\">'z'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'z'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"comment\">// Existing values can move to len-1 at most, but new values can insert at the endpoint.\n</span><span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">27</span>);\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len() - <span class=\"number\">1</span>, <span class=\"string\">'*'</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'*'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">26</span>));\n<span class=\"macro\">assert_eq!</span>(set.shift_insert(set.len(), <span class=\"string\">'+'</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_index_of(<span class=\"kw-2\">&amp;</span><span class=\"string\">'+'</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">27</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">28</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: IndexSet&lt;char&gt; = (<span class=\"string\">'a'</span>..=<span class=\"string\">'z'</span>).collect();\n\n<span class=\"comment\">// This is an invalid index for moving an existing value!\n</span>set.shift_insert(set.len(), <span class=\"string\">'a'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#495\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#504\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#515-517\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Difference.html\" title=\"struct indexmap::set::iter::Difference\">Difference</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#527-532\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.SymmetricDifference.html\" title=\"struct indexmap::set::iter::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#540-542\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Intersection.html\" title=\"struct indexmap::set::iter::Intersection\">Intersection</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#551-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;'a, S2&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Union.html\" title=\"struct indexmap::set::iter::Union\">Union</a>&lt;'a, T, S&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#587-590\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.splice\" class=\"fn\">splice</a>&lt;R, I&gt;(\n    &amp;mut self,\n    range: R,\n    replace_with: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.Splice.html\" title=\"struct indexmap::set::iter::Splice\">Splice</a>&lt;'_, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>, T, S&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a splicing iterator that replaces the specified range in the set\nwith the given <code>replace_with</code> iterator and yields the removed items.\n<code>replace_with</code> does not need to be the same length as <code>range</code>.</p>\n<p>The <code>range</code> is removed even if the iterator is not consumed until the\nend. It is unspecified how many elements are removed from the set if the\n<code>Splice</code> value is leaked.</p>\n<p>The input iterator <code>replace_with</code> is only consumed when the <code>Splice</code>\nvalue is dropped. If a value from the iterator matches an existing entry\nin the set (outside of <code>range</code>), then the original will be unchanged.\nOtherwise, the new value will be inserted in the replaced <code>range</code>.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::from([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>new = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>];\n<span class=\"kw\">let </span>removed: Vec&lt;<span class=\"kw\">_</span>&gt; = set.splice(<span class=\"number\">2</span>..<span class=\"number\">4</span>, new).collect();\n\n<span class=\"comment\">// 1 and 4 kept their positions, while 5, 3, and 2 were newly inserted.\n</span><span class=\"macro\">assert!</span>(set.into_iter().eq([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]));\n<span class=\"macro\">assert_eq!</span>(removed, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#621\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.append\" class=\"fn\">append</a>&lt;S2&gt;(&amp;mut self, other: &amp;mut <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;)</h4></section></summary><div class=\"docblock\"><p>Moves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.</p>\n<p>This is equivalent to calling <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.insert\" title=\"method indexmap::set::IndexSet::insert\"><code>insert</code></a> for each value\nfrom <code>other</code> in order, which means that values that already exist\nin <code>self</code> are unchanged in their current position.</p>\n<p>See also <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.union\" title=\"method indexmap::set::IndexSet::union\"><code>union</code></a> to iterate the combined values by\nreference, without modifying <code>self</code> or <code>other</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = IndexSet::from([<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]);\n<span class=\"kw\">let </span>old_capacity = b.capacity();\n\na.append(<span class=\"kw-2\">&amp;mut </span>b);\n\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(b.len(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(b.capacity(), old_capacity);\n\n<span class=\"macro\">assert!</span>(a.iter().eq(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]));</code></pre></div>\n</div></details></div></details>",0,"rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#626-628\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#633-635\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#644-646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#652-654\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#662-664\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#677-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>remove</code> disrupts the set order – use <code>swap_remove</code> or <code>shift_remove</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_remove\" title=\"method indexmap::set::IndexSet::swap_remove\"><code>.swap_remove(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_remove\" title=\"method indexmap::set::IndexSet::shift_remove\"><code>.shift_remove(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#693-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#709-711\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#725-727\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>take</code> disrupts the set order – use <code>swap_take</code> or <code>shift_take</code> for explicit behavior.</span></div></span></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.swap_take\" title=\"method indexmap::set::IndexSet::swap_take\"><code>.swap_take(value)</code></a>, replacing this\nvalue’s position with the last element, and it is deprecated in favor of calling that\nexplicitly. If you need to preserve the relative order of the values in the set, use\n<a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.shift_take\" title=\"method indexmap::set::IndexSet::shift_take\"><code>.shift_take(value)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#742-744\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#759-761\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#773-775\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#787-789\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details></div></details>",0,"rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#795\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#802\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#813-815\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#827-829\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>This is a stable sort – but equivalent values should not normally coexist in\na set at all, so <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable\" title=\"method indexmap::set::IndexSet::sort_unstable\"><code>sort_unstable</code></a> is preferred\nbecause it is generally faster and doesn’t allocate auxiliary memory.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_by\" title=\"method indexmap::set::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#837-839\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#848-850\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#860-862\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.sort_unstable_by\" title=\"method indexmap::set::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#870-872\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#879-881\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by_cached_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#896-899\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.sort_by_cached_key\" class=\"fn\">sort_by_cached_key</a>&lt;K, F&gt;(&amp;mut self, sort_key: F)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; K,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using a key extraction function.</p>\n<p>During sorting, the function is called at most once per entry, by using temporary storage\nto remember the results of its evaluation. The order of calls to the function is\nunspecified and may change between versions of <code>indexmap</code> or the standard library.</p>\n<p>Computes in <strong>O(m n + n log n + c)</strong> time () and <strong>O(n)</strong> space, where the function is\n<strong>O(m)</strong>, <em>n</em> is the length of the map, and <em>c</em> the capacity. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#913-915\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search\" class=\"fn\">binary_search</a>(&amp;self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set for a value.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search\" title=\"method slice::binary_search\"><code>slice::binary_search</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time, which is notably less scalable than looking the value up\nusing <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#method.get_index_of\" title=\"method indexmap::set::IndexSet::get_index_of\"><code>get_index_of</code></a>, but this can also position missing values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#927-929\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by\" class=\"fn\">binary_search_by</a>&lt;'a, F&gt;(&amp;'a self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with a comparator function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by\" title=\"method slice::binary_search_by\"><code>slice::binary_search_by</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binary_search_by_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#941-944\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.binary_search_by_key\" class=\"fn\">binary_search_by_key</a>&lt;'a, B, F&gt;(\n    &amp;'a self,\n    b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;B</a>,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; B,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Search over a sorted set with an extraction function.</p>\n<p>Returns the position where that value is present, or the position where it can be inserted\nto maintain the sort. See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.binary_search_by_key\" title=\"method slice::binary_search_by_key\"><code>slice::binary_search_by_key</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_point\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#956-958\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.partition_point\" class=\"fn\">partition_point</a>&lt;P&gt;(&amp;self, pred: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the index of the partition point of a sorted set according to the given predicate\n(the index of the first element of the second partition).</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.partition_point\" title=\"method slice::partition_point\"><code>slice::partition_point</code></a> for more details.</p>\n<p>Computes in <strong>O(log(n))</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#966\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the set’s values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#973\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a slice of all the values in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#980\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts into a boxed slice of all the values in the set.</p>\n<p>Note that this will drop the inner hash table and any excess capacity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#989\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_range\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#998\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.get_range\" class=\"fn\">get_range</a>&lt;R&gt;(&amp;self, range: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/slice/struct.Slice.html\" title=\"struct indexmap::set::slice::Slice\">Slice</a>&lt;T&gt;&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a slice of values in the given range of indices.</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1007\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1027\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.swap_remove\" title=\"method alloc::vec::Vec::swap_remove\"><code>Vec::swap_remove</code></a>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1040\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.remove\" title=\"method alloc::vec::Vec::remove\"><code>Vec::remove</code></a>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1053\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1062\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details></div></details>",0,"rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#19\">source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#20\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#21\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/iter.rs.html#23\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/iter/struct.IntoIter.html\" title=\"struct indexmap::set::iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#103-105\">source</a><a href=\"#impl-IntoParallelIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#107\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#108\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/rustc.rs.html#110\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/rustc/set/struct.IntoParIter.html\" title=\"struct indexmap::rustc::set::IntoParIter\">IntoParIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#51-53\">source</a><a href=\"#impl-MutableValues-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\">MutableValues</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Opt-in mutable access to <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\"><code>IndexSet</code></a> values.</p>\n<p>See <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html\" title=\"trait indexmap::set::mutable::MutableValues\"><code>MutableValues</code></a> for more information.</p>\n</div><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#55\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = T</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#57-59\">source</a><a href=\"#method.get_full_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\" class=\"fn\">get_full_mut2</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.1/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Return item index and mutable reference to the value <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_full_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_mut2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#67\">source</a><a href=\"#method.get_index_mut2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\" class=\"fn\">get_index_mut2</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class='docblock'>Return mutable reference to the value at an index. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.get_index_mut2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set/mutable.rs.html#74-76\">source</a><a href=\"#method.retain2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\" class=\"fn\">retain2</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>. <a href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/mutable/trait.MutableValues.html#tymethod.retain2\">Read more</a></div></details></div></details>","MutableValues","rustc_type_ir::data_structures::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1174-1178\">source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","rustc_type_ir::data_structures::IndexSet"],["<section id=\"impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_data_structures/marker.rs.html#82-100\">source</a><a href=\"#impl-DynSend-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/marker/trait.DynSend.html\" title=\"trait rustc_data_structures::marker::DynSend\">DynSend</a>,</div></h3></section>","DynSend","rustc_type_ir::data_structures::IndexSet"],["<section id=\"impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_data_structures/marker.rs.html#167-188\">source</a><a href=\"#impl-DynSync-for-IndexSet%3CV,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;V, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/marker/trait.DynSync.html\" title=\"trait rustc_data_structures::marker::DynSync\">DynSync</a>,</div></h3></section>","DynSync","rustc_type_ir::data_structures::IndexSet"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/2.5.0/src/indexmap/set.rs.html#1185-1188\">source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://docs.rs/indexmap/2.5.0/indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","rustc_type_ir::data_structures::IndexSet"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[167691,179987,198774,182193,168729]}