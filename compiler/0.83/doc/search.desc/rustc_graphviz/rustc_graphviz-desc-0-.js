searchState.loadedDescShard("rustc_graphviz", 0, "Generate files suitable for use with Graphviz\nBorrowed data.\nBorrowed data.\nThis kind of label uses the graphviz label escString type: …\nGraphWalk is an abstraction over a directed graph = …\nThis uses a graphviz HTML string label. The string is …\n<code>Id</code> is a Graphviz <code>ID</code>.\nThis kind of label preserves the text directly as is.\nThe text for a graphviz label on a node or edge.\nEach instance of a type that implements <code>Label&lt;C&gt;</code> maps to a …\nOwned data.\nOwned data.\nThe style for a node or edge. See …\nMaps <code>e</code> to a label that will be used in the rendered output.\nMaps <code>e</code> to a style that will be used in the rendered output.\nReturns all of the edges in this graph.\nEscape tags in such a way that it is suitable for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMust return a DOT compatible identifier naming the graph.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an <code>Id</code> named <code>name</code>.\nMaps <code>n</code> to a unique identifier with respect to <code>self</code>. The …\nMaps <code>n</code> to a label that will be used in the rendered output.\nMaps <code>n</code> to one of the graphviz <code>shape</code> names. If <code>None</code> is …\nMaps <code>n</code> to a style that will be used in the rendered output.\nReturns all the nodes in this graph.\nRenders directed graph <code>g</code> into the writer <code>w</code> in DOT syntax. …\nRenders directed graph <code>g</code> into the writer <code>w</code> in DOT syntax. …\nThe source node for <code>edge</code>.\nThe target node for <code>edge</code>.\nRenders text as string suitable for a label in a .dot file.")