searchState.loadedDescShard("rustc_middle", 1, "If this place represents a local variable like <code>_X</code> with no …\nA short representation of this used for MIR printing.\nInverse of <code>SwitchTargets::static_if</code>.\nReturns <code>true</code> if this is accepted inside …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nGets the <code>ty::FnDef</code> from an operand if it’s a constant …\nConvenience helper to make a literal-like constant from a …\nReturns the <code>ConstOperand</code> that is the target of this <code>Operand</code>…\nNumber of elements to copy from src to dest, not bytes.\nFormat the diagnostic message for use in a lint (e.g. when …\nFormat the message arguments for the <code>assert(cond, msg..)</code> …\nWrites the “head” part of the terminator; that is, its …\nReturns the list of labels for the edges to the successor …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience helper to make a constant that refers to the fn\nReturns <code>true</code> if this rvalue is deeply initialized (most …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if all targets (including the fallback …\nReturns <code>true</code> if this is a <code>Downcast</code> projection with the …\nReturns <code>true</code> if this is a <code>Field</code> projection with the given …\nReturns <code>true</code> if this <code>Place</code> contains a <code>Deref</code> projection.\nReturns <code>true</code> if the target of this projection may refer to …\nReturns <code>true</code> if this <code>Place</code>’s first projection is <code>Deref</code>.\nReturns true if this an overflow checking assertion …\nReturns whether this is a <code>FooWithOverflow</code>\nReturns true if rvalue can be safely removed when the …\nReturns <code>true</code> if the target of this projection always …\nReturns an iterator over the switch targets.\nIterate over the projections in evaluation order, i.e., …\nFinds the innermost <code>Local</code> from this <code>Place</code>, <em>if</em> it is either …\nReturns a simple string representation of a <code>StatementKind</code> …\nReturns a simple string representation of a <code>TerminatorKind</code> …\nCreates switch targets from an iterator of values and …\nReturns the fallback target that is jumped to when none of …\nIf this is a <code>FooWithOverflow</code>, return <code>Some(Foo)</code>.\nGet the lang item that is invoked to print a static …\nParses an <code>MirPhase</code> from a pair of strings. Panics if this …\nGets the index of the current MirPhase within the set of …\nReturns the <code>Place</code> that is the target of this <code>Operand</code>, or …\nGenerates a new place by appending <code>more_projections</code> to the …\nprojection out of a place (access a field, deref a …\nBuilds a switch targets definition that jumps to <code>then</code> if …\nLike <code>SwitchTargets::target_for_value</code>, but returning the …\nFinds the <code>BasicBlock</code> to which this <code>SwitchInt</code> will branch …\nPossible branch sites. The last element of this vector is …\nOptional user-given type: for something like …\nPossible values. The locations to branch to in each case …\nIf this is a <code>Foo</code>, return <code>Some(FooWithOverflow)</code>.\nThis represents the index into the <code>targets</code> array in …\nCounting backwards from end? This is always false when …\nWhether <code>to</code> counts from the start or end of the array/slice.\nThe thing being indexed must be at least this long – …\nindex or -index (in Python terms), depending on from_end\nCounting backwards from end? This is always false when …\nWhether <code>to</code> counts from the start or end of the array/slice.\nThe thing being indexed must be at least this long – …\nindex or -index (in Python terms), depending on from_end\nArguments the function is called with. These are owned by …\nArguments the function is called with. These are owned by …\nMacro used to create this inline asm: one of <code>asm!</code> or …\nWhere this call came from in HIR/THIR.\nWhere the returned value will be written\nThe discriminant value being tested.\nCleanup to be done if the coroutine is dropped at this …\nThis <code>Span</code> is the span of the function, without the dot and …\nThis <code>Span</code> is the span of the function, without the dot and …\nThe function that’s being called.\nThe function that’s being called.\nA block control flow could conceptually jump to, but won’…\nSource spans for each line of the inline assembly code. …\nThe operands for the inline assembly, as <code>Operand</code>s or <code>Place</code>…\nMiscellaneous options for the inline assembly.\nThe target normal control flow will take.\nThe target normal control flow will take.\nWhere to resume to.\nThe place to store the resume argument in.\nWhere to go after this call returns. If none, the call …\nValid targets for the inline assembly. The first element …\nThe template for the inline assembly, with placeholders.\nAction to be taken if the call unwinds.\nThe imaginary cleanup block link. This particular path …\nAction to be taken if the inline assembly unwinds. This is …\nThe value to return.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\n<code>place_ty.field_ty(tcx, f)</code> computes the type at a given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience wrapper around <code>projection_ty_core</code> for <code>PlaceElem</code>…\n<code>place_ty.projection_ty_core(tcx, elem, |...| { ... })</code> …\nDowncast to a particular variant of an enum or a …\nSpecial action for <code>Yield</code>, <code>Call</code> and <code>InlineAsm</code> terminators.\nList of places that are written to after a successful …\nFor terminators that two successors, <code>assert</code> with cleanup …\nFor terminators that have no successor, like <code>return</code>.\nFor terminators that a single successor, like <code>goto</code>, and …\nSpecial edge for <code>SwitchInt</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe cleanup block, if it exists.\nLets us plug in some additional logic and data into a …\nPostorder traversal of a graph.\nPreorder traversal of a graph.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTraversal of a <code>Body</code> that tries to avoid unreachable blocks …\n<code>MonoReachable</code> internally accumulates a <code>BitSet</code> of visited …\nPostorder traversal of a graph.\nPreorder traversal of a graph.\nReturns an iterator over all basic blocks reachable from …\nReturns a <code>BitSet</code> containing all basic blocks reachable …\nReverse postorder traversal of a graph.\nUser type annotation assertions for NLL.\nOutput operand of an inline assembly block.\nMutable borrow.\nDestination of a call.\nConsumed as part of an operand.\nAppears on <code>Deinit</code>\nBeing dropped.\nA fake borrow. FIXME: do we need to distinguish shallow …\nBeing inspected in some way, like loading a len.\nA type found at some location.\nConsumed as part of an operand.\nPlaceMention statement.\nUsed as base for another place, e.g., <code>x</code> in <code>x.y</code>. Will not …\nUsed as base for another place, e.g., <code>x</code> in <code>x.y</code>. Could …\n<code>&amp;raw const</code>.\n<code>&amp;raw mut</code>.\nRetagging, a “Stacked Borrows” shadow state operation\nThe return type of the function.\nAppears on <code>SetDiscriminant</code>\nShared borrow.\nEnding a storage live range.\nStarting a storage live range.\nAppears as LHS of an assignment.\nExtra information passed to <code>visit_ty</code> and friends to give …\nThe inferred type of a user type annotation.\nThe data of a user variable, for debug info.\nDestination of a yield.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this place context represents an …\nReturns <code>true</code> if this place context represents a borrow.\nReturns <code>true</code> if this place context represents a drop.\nReturns <code>true</code> if this place context represents a use that …\nReturns <code>true</code> if this place context represents an …\nReturns <code>true</code> if this place context represents a storage …\nReturns <code>true</code> if this place context represents a use.\nThis is called for every constant in the MIR body and …\nThis is called for every constant in the MIR body and …\nThe index of the local variable we are visiting.\nThe source location where this local variable was declared.\nThe <code>Key</code> trait controls what types can legally be used as …\nPlaceholder for <code>CrateNum</code>’s “local” counterpart\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns all diagnostic items defined in all crates.\nReturns all diagnostic items defined in all crates.\nReturn all <code>impl</code> blocks in the current crate.\nReturn all <code>impl</code> blocks in the current crate.\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe root query triggering all analysis passes like typeck …\nThe root query triggering all analysis passes like typeck …\nGiven an instance of this key, what crate is it referring …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from a trait/impl item to the trait/impl item “…\nMaps from a trait/impl item to the trait/impl item “…\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nCollects the associated items defined on a trait or impl.\nCollects the associated items defined on a trait or impl.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an impl trait in trait <code>opaque_ty_def_id</code>, create and …\nGiven an impl trait in trait <code>opaque_ty_def_id</code>, create and …\nGiven <code>fn_def_id</code> of a trait or of an impl that implements a …\nGiven <code>fn_def_id</code> of a trait or of an impl that implements a …\nReturns the types assumed to be well formed while “inside…\nReturns the types assumed to be well formed while “inside…\nWe need to store the assumed_wf_types for an RPITIT so …\nWe need to store the assumed_wf_types for an RPITIT so …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThis query checks the fulfillment of collected lint …\nThis query checks the fulfillment of collected lint …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks the attributes in the module.\nChecks the attributes in the module.\nChecks the const bodies in the module for illegal …\nChecks the const bodies in the module for illegal …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks the loops in the module.\nChecks the loops in the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks for uses of unstable APIs in the module.\nChecks for uses of unstable APIs in the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLint against <code>extern fn</code> declarations having incompatible …\nLint against <code>extern fn</code> declarations having incompatible …\nReturns names of captured upvars for closures and …\nReturns names of captured upvars for closures and …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven the def_id of a const-generic parameter, computes …\nGiven the def_id of a const-generic parameter, computes …\nReturns <code>true</code> if this is a const fn, use the <code>is_const_fn</code> to …\nReturns <code>true</code> if this is a const fn, use the <code>is_const_fn</code> to …\nThe body of the coroutine, modified to take its upvars by …\nThe body of the coroutine, modified to take its upvars by …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] Given …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nSummarizes coverage IDs inserted by the <code>InstrumentCoverage</code> …\nSummarizes coverage IDs inserted by the <code>InstrumentCoverage</code> …\nGets the paths where the crate came from in the file …\nGets the paths where the crate came from in the file …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the hash for the host proc macro. Used to support -Z …\nGets the hash for the host proc macro. Used to support -Z …\nCollects all incoherent impls for the given crate and type.\nCollects all incoherent impls for the given crate and type.\nGets a complete map from all types to their inherent impls.\nGets a complete map from all types to their inherent impls.\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nGets the name of the crate.\nGets the name of the crate.\nGets a map with the variance of every item; use …\nGets a map with the variance of every item; use …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the debugger visualizers defined for this crate. …\nReturns the debugger visualizers defined for this crate. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the span for the identifier of the definition.\nGets the span for the identifier of the definition.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the span for the definition.\nGets the span for the definition.\nIn the event that a cycle occurs, if no explicit span has …\nReturns whether the impl or associated function has the …\nReturns whether the impl or associated function has the …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDestructures array, ADT or tuple constants into the …\nDestructures array, ADT or tuple constants into the …\nPerforms an HIR-based well-formed check on the item with …\nPerforms an HIR-based well-formed check on the item with …\nReturns the diagnostic items defined in a crate.\nReturns the diagnostic items defined in a crate.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms part of the privacy check and computes effective …\nPerforms part of the privacy check and computes effective …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nEvaluate a static’s initializer, returning the …\nEvaluate a static’s initializer, returning the …\nEvaluates a constant and returns the computed allocation.\nEvaluates a constant and returns the computed allocation.\nEvaluates const items or anonymous constants (such as enum …\nEvaluates const items or anonymous constants (such as enum …\nEvaluate a constant and convert it to a type level …\nEvaluate a constant and convert it to a type level …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nThe predicates of the trait that are implied during …\nThe predicates of the trait that are implied during …\nReturns the list of bounds that are required to be …\nReturns the list of bounds that are required to be …\nThe set of item bounds (see <code>TyCtxt::explicit_item_bounds</code>) …\nThe set of item bounds (see <code>TyCtxt::explicit_item_bounds</code>) …\nReturns the predicates written explicitly by the user.\nReturns the predicates written explicitly by the user.\nMaps from the <code>DefId</code> of a trait to the list of …\nMaps from the <code>DefId</code> of a trait to the list of …\nThe Ident is the name of an associated type.The query …\nThe Ident is the name of an associated type.The query …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe list of symbols exported from the given crate.\nThe list of symbols exported from the given crate.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the extra data to put in each output filename for a …\nGets the extra data to put in each output filename for a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the signature of the function.\nComputes the signature of the function.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\n[query description - consider adding a doc-comment!] check …\n[query description - consider adding a doc-comment!] check …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nThe list of backend features computed from CLI flags (…\nThe list of backend features computed from CLI flags (…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nRepresents crate as a whole (as distinct from the …\nRepresents crate as a whole (as distinct from the …\nAll items in the crate.\nAll items in the crate.\nThe items in a module.\nThe items in a module.\nGives access to the HIR node’s parent for the HIR owner …\nGives access to the HIR node’s parent for the HIR owner …\nMaps from associated items on a trait to the corresponding …\nMaps from associated items on a trait to the corresponding …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven a crate and a trait, look up all impls of that trait …\nGiven a crate and a trait, look up all impls of that trait …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from thee <code>DefId</code> of a type to its (inferred) outlives.\nMaps from thee <code>DefId</code> of a type to its (inferred) outlives.\nReturns the inferred outlives predicates (e.g., for …\nReturns the inferred outlives predicates (e.g., for …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the function is an intrinsic\nWhether the function is an intrinsic\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDetermines whether an item is annotated with <code>doc(hidden)</code>.\nDetermines whether an item is annotated with <code>doc(hidden)</code>.\nDetermines whether an item is annotated with …\nDetermines whether an item is annotated with …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_freeze</code>.\nQuery backing <code>Ty::is_freeze</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns whether or not the crate with CrateNum ‘cnum’ …\nReturns whether or not the crate with CrateNum ‘cnum’ …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>true</code> if calls to the function may be promoted.\nReturns <code>true</code> if calls to the function may be promoted.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_sized</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_unpin</code>.\nQuery backing <code>Ty::is_unpin</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the attributes on the item at <code>def_id</code>.\nReturns the attributes on the item at <code>def_id</code>.\nElaborated version of the predicates from …\nElaborated version of the predicates from …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDefines the set of legal keys that can be used in queries.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the layout of a type. Note that this implicitly …\nComputes the layout of a type. Note that this implicitly …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms lint checking for the module.\nPerforms lint checking for the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturn the live symbols in the crate for dead code check.\nReturn the live symbols in the crate for dead code check.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturns HIR ID for the given <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nBorrow-checks the function body. If this is a closure, …\nBorrow-checks the function body. If this is a closure, …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nCheck whether the function has any recursion that could …\nCheck whether the function has any recursion that could …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nObtain all the calls into other local functions\nObtain all the calls into other local functions\nSet of all the <code>DefId</code>s in this crate that have MIR …\nSet of all the <code>DefId</code>s in this crate that have MIR …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGenerates a MIR body for the shim.\nGenerates a MIR body for the shim.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLook up all native libraries this crate depends on. These …\nLook up all native libraries this crate depends on. These …\nGet the corresponding native library from the …\nGet the corresponding native library from the …\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nFor a given item’s generic parameter, gets the default …\nFor a given item’s generic parameter, gets the default …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nMIR after our optimization passes have run. This is MIR …\nMIR after our optimization passes have run. This is MIR …\nChecks whether all impls in the crate pass the overlap …\nChecks whether all impls in the crate pass the overlap …\nReturn the filenames where output artefacts shall be …\nReturn the filenames where output artefacts shall be …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the ParameterEnvironment for a given item; this …\nGets the ParameterEnvironment for a given item; this …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> in <code>Reveal::All</code> …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> in <code>Reveal::All</code> …\nSet of param indexes for type params that are in the type…\nSet of param indexes for type params that are in the type…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nCollects the list of all tools registered using …\nCollects the list of all tools registered using …\nGets the rendered value of the specified constant or …\nGets the rendered value of the specified constant or …\nGets the rendered precise capturing args for an opaque for …\nGets the rendered precise capturing args for an opaque for …\nChecks whether a type is representable or infinitely sized\nChecks whether a type is representable or infinitely sized\nAn implementation detail for the <code>representability</code> query\nAn implementation detail for the <code>representability</code> query\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDoes lifetime resolution on items. Importantly, we can’t …\nDoes lifetime resolution on items. Importantly, we can’t …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturn the span for a definition. Contrary to <code>def_span</code> …\nReturn the span for a definition. Contrary to <code>def_span</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nComputes the tag (if any) for a given type and variant.\nComputes the tag (if any) for a given type and variant.\nTry to build an abstract representation of the given …\nTry to build an abstract representation of the given …\nFetch the THIR for a given body. If typeck for that body …\nFetch the THIR for a given body. If typeck for that body …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns everything that looks like a predicate written …\nReturns everything that looks like a predicate written …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nA list of all traits in a crate, used by rustdoc and error …\nA list of all traits in a crate, used by rustdoc and error …\nThis exists purely for testing the interactions between …\nThis exists purely for testing the interactions between …\nCollects the “trimmed”, shortest accessible paths to …\nCollects the “trimmed”, shortest accessible paths to …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the <code>Ty</code> of the given <code>DefId</code>. If the <code>DefId</code> points to …\nReturns the <code>Ty</code> of the given <code>DefId</code>. If the <code>DefId</code> points to …\nSpecialized instance of <code>type_of</code> that detects cycles that …\nSpecialized instance of <code>type_of</code> that detects cycles that …\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nTo avoid cycles within the predicates of a single item we …\nTo avoid cycles within the predicates of a single item we …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports drop-glue for the …\nReturns the upstream crate that exports drop-glue for the …\nThe entire set of monomorphizations the local crate can …\nThe entire set of monomorphizations the local crate can …\nReturns the set of upstream monomorphizations available …\nReturns the set of upstream monomorphizations available …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nConverts a type level constant value into <code>ConstValue</code>\nConverts a type level constant value into <code>ConstValue</code>\nMaps from the <code>DefId</code> of a type or region parameter to its …\nMaps from the <code>DefId</code> of a type or region parameter to its …\nComputes the visibility of the provided <code>def_id</code>.\nComputes the visibility of the provided <code>def_id</code>.\nThe visible parent map is a map from every item to a …\nThe visible parent map is a map from every item to a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRestores an erased value.\nThe <code>Key</code> trait controls what types can legally be used as …\nPlaceholder for <code>CrateNum</code>’s “local” counterpart\nGiven an instance of this key, what crate is it referring …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nIn the event that a cycle occurs, if no explicit span has …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf the key is a <code>DefId</code> or <code>DefId</code>–equivalent, return that …\nIf the key is a <code>DefId</code> or <code>DefId</code>–equivalent, return that …\nA decoder that can read from the incremental compilation …\nAn encoder that can write to the incremental compilation …\nProvides an interface to incremental compilation data …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nExecute all cache promotions and release the serialized …\nEncode something with additional information that allows …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a <code>QuerySideEffects</code> created during the previous …\nReturn whether the cached query result can be decoded.\nCreates a new <code>OnDiskCache</code> instance from the serialized …\nStores a <code>QuerySideEffects</code> emitted during the current …\nStores side effect emitted during computation of an …\nReturns the cached query result if there is something in …\nAn analogue of the <code>Into</code> trait that’s intended only for …\nA value uniquely identifying an active query job.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns all diagnostic items defined in all crates.\nReturns all diagnostic items defined in all crates.\nReturns all diagnostic items defined in all crates.\nReturn all <code>impl</code> blocks in the current crate.\nReturn all <code>impl</code> blocks in the current crate.\nReturn all <code>impl</code> blocks in the current crate.\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe root query triggering all analysis passes like typeck …\nThe root query triggering all analysis passes like typeck …\nThe root query triggering all analysis passes like typeck …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from a trait/impl item to the trait/impl item “…\nMaps from a trait/impl item to the trait/impl item “…\nMaps from a trait/impl item to the trait/impl item “…\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nCollects the associated items defined on a trait or impl.\nCollects the associated items defined on a trait or impl.\nCollects the associated items defined on a trait or impl.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an impl trait in trait <code>opaque_ty_def_id</code>, create and …\nGiven an impl trait in trait <code>opaque_ty_def_id</code>, create and …\nGiven an impl trait in trait <code>opaque_ty_def_id</code>, create and …\nGiven <code>fn_def_id</code> of a trait or of an impl that implements a …\nGiven <code>fn_def_id</code> of a trait or of an impl that implements a …\nGiven <code>fn_def_id</code> of a trait or of an impl that implements a …\nReturns the types assumed to be well formed while “inside…\nReturns the types assumed to be well formed while “inside…\nReturns the types assumed to be well formed while “inside…\nWe need to store the assumed_wf_types for an RPITIT so …\nWe need to store the assumed_wf_types for an RPITIT so …\nWe need to store the assumed_wf_types for an RPITIT so …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCreate the MIR for a given <code>DefId</code> - this includes …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThis query checks the fulfillment of collected lint …\nThis query checks the fulfillment of collected lint …\nThis query checks the fulfillment of collected lint …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks the attributes in the module.\nChecks the attributes in the module.\nChecks the attributes in the module.\nChecks the const bodies in the module for illegal …\nChecks the const bodies in the module for illegal …\nChecks the const bodies in the module for illegal …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks the loops in the module.\nChecks the loops in the module.\nChecks the loops in the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks for uses of unstable APIs in the module.\nChecks for uses of unstable APIs in the module.\nChecks for uses of unstable APIs in the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLint against <code>extern fn</code> declarations having incompatible …\nLint against <code>extern fn</code> declarations having incompatible …\nLint against <code>extern fn</code> declarations having incompatible …\nReturns names of captured upvars for closures and …\nReturns names of captured upvars for closures and …\nReturns names of captured upvars for closures and …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGetting a &amp;core::panic::Location referring to a span.\nEvaluates a constant without providing any generic …\nGiven the def_id of a const-generic parameter, computes …\nGiven the def_id of a const-generic parameter, computes …\nGiven the def_id of a const-generic parameter, computes …\nReturns <code>true</code> if this is a const fn, use the <code>is_const_fn</code> to …\nReturns <code>true</code> if this is a const fn, use the <code>is_const_fn</code> to …\nReturns <code>true</code> if this is a const fn, use the <code>is_const_fn</code> to …\nThe body of the coroutine, modified to take its upvars by …\nThe body of the coroutine, modified to take its upvars by …\nThe body of the coroutine, modified to take its upvars by …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] Given …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nSummarizes coverage IDs inserted by the <code>InstrumentCoverage</code> …\nSummarizes coverage IDs inserted by the <code>InstrumentCoverage</code> …\nSummarizes coverage IDs inserted by the <code>InstrumentCoverage</code> …\nGets the paths where the crate came from in the file …\nGets the paths where the crate came from in the file …\nGets the paths where the crate came from in the file …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the hash for the host proc macro. Used to support -Z …\nGets the hash for the host proc macro. Used to support -Z …\nGets the hash for the host proc macro. Used to support -Z …\nCollects all incoherent impls for the given crate and type.\nCollects all incoherent impls for the given crate and type.\nCollects all incoherent impls for the given crate and type.\nGets a complete map from all types to their inherent impls.\nGets a complete map from all types to their inherent impls.\nGets a complete map from all types to their inherent impls.\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nGets the name of the crate.\nGets the name of the crate.\nGets the name of the crate.\nGets a map with the variance of every item; use …\nGets a map with the variance of every item; use …\nGets a map with the variance of every item; use …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCreate a new definition within the incr. comp. engine.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the debugger visualizers defined for this crate. …\nReturns the debugger visualizers defined for this crate. …\nReturns the debugger visualizers defined for this crate. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the span for the identifier of the definition.\nGets the span for the identifier of the definition.\nGets the span for the identifier of the definition.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nConverts a <code>DefPathHash</code> to its corresponding <code>DefId</code> in the …\nGets the span for the definition.\nGets the span for the definition.\nGets the span for the definition.\nReturns whether the impl or associated function has the …\nReturns whether the impl or associated function has the …\nReturns whether the impl or associated function has the …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDestructures array, ADT or tuple constants into the …\nDestructures array, ADT or tuple constants into the …\nDestructures array, ADT or tuple constants into the …\nPerforms an HIR-based well-formed check on the item with …\nPerforms an HIR-based well-formed check on the item with …\nPerforms an HIR-based well-formed check on the item with …\nReturns the diagnostic items defined in a crate.\nReturns the diagnostic items defined in a crate.\nReturns the diagnostic items defined in a crate.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms part of the privacy check and computes effective …\nPerforms part of the privacy check and computes effective …\nPerforms part of the privacy check and computes effective …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nEvaluate a static’s initializer, returning the …\nEvaluate a static’s initializer, returning the …\nEvaluate a static’s initializer, returning the …\nEvaluates a constant and returns the computed allocation.\nEvaluates a constant and returns the computed allocation.\nEvaluates a constant and returns the computed allocation.\nEvaluates const items or anonymous constants (such as enum …\nEvaluates const items or anonymous constants (such as enum …\nEvaluates const items or anonymous constants (such as enum …\nEvaluate a constant and convert it to a type level …\nEvaluate a constant and convert it to a type level …\nEvaluate a constant and convert it to a type level …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nThe predicates of the trait that are implied during …\nThe predicates of the trait that are implied during …\nThe predicates of the trait that are implied during …\nReturns the list of bounds that are required to be …\nReturns the list of bounds that are required to be …\nReturns the list of bounds that are required to be …\nThe set of item bounds (see <code>TyCtxt::explicit_item_bounds</code>) …\nThe set of item bounds (see <code>TyCtxt::explicit_item_bounds</code>) …\nThe set of item bounds (see <code>TyCtxt::explicit_item_bounds</code>) …\nReturns the predicates written explicitly by the user.\nReturns the predicates written explicitly by the user.\nReturns the predicates written explicitly by the user.\nMaps from the <code>DefId</code> of a trait to the list of …\nMaps from the <code>DefId</code> of a trait to the list of …\nMaps from the <code>DefId</code> of a trait to the list of …\nThe Ident is the name of an associated type.The query …\nThe Ident is the name of an associated type.The query …\nThe Ident is the name of an associated type.The query …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe list of symbols exported from the given crate.\nThe list of symbols exported from the given crate.\nThe list of symbols exported from the given crate.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the extra data to put in each output filename for a …\nGets the extra data to put in each output filename for a …\nGets the extra data to put in each output filename for a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the signature of the function.\nComputes the signature of the function.\nComputes the signature of the function.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\n[query description - consider adding a doc-comment!] check …\n[query description - consider adding a doc-comment!] check …\n[query description - consider adding a doc-comment!] check …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nThe list of backend features computed from CLI flags (…\nThe list of backend features computed from CLI flags (…\nThe list of backend features computed from CLI flags (…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nRepresents crate as a whole (as distinct from the …\nRepresents crate as a whole (as distinct from the …\nRepresents crate as a whole (as distinct from the …\nAll items in the crate.\nAll items in the crate.\nAll items in the crate.\nThe items in a module.\nThe items in a module.\nThe items in a module.\nGives access to the HIR node’s parent for the HIR owner …\nGives access to the HIR node’s parent for the HIR owner …\nGives access to the HIR node’s parent for the HIR owner …\nMaps from associated items on a trait to the corresponding …\nMaps from associated items on a trait to the corresponding …\nMaps from associated items on a trait to the corresponding …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven a crate and a trait, look up all impls of that trait …\nGiven a crate and a trait, look up all impls of that trait …\nGiven a crate and a trait, look up all impls of that trait …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nImports all <code>SourceFile</code>s from the given crate into the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from thee <code>DefId</code> of a type to its (inferred) outlives.\nMaps from thee <code>DefId</code> of a type to its (inferred) outlives.\nMaps from thee <code>DefId</code> of a type to its (inferred) outlives.\nReturns the inferred outlives predicates (e.g., for …\nReturns the inferred outlives predicates (e.g., for …\nReturns the inferred outlives predicates (e.g., for …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the function is an intrinsic\nWhether the function is an intrinsic\nWhether the function is an intrinsic\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDetermines whether an item is annotated with <code>doc(hidden)</code>.\nDetermines whether an item is annotated with <code>doc(hidden)</code>.\nDetermines whether an item is annotated with <code>doc(hidden)</code>.\nDetermines whether an item is annotated with …\nDetermines whether an item is annotated with …\nDetermines whether an item is annotated with …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>true</code> if this def is a function-like thing that is …\nQuery backing <code>Ty::is_freeze</code>.\nQuery backing <code>Ty::is_freeze</code>.\nQuery backing <code>Ty::is_freeze</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns whether or not the crate with CrateNum ‘cnum’ …\nReturns whether or not the crate with CrateNum ‘cnum’ …\nReturns whether or not the crate with CrateNum ‘cnum’ …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>true</code> if calls to the function may be promoted.\nReturns <code>true</code> if calls to the function may be promoted.\nReturns <code>true</code> if calls to the function may be promoted.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_sized</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_unpin</code>.\nQuery backing <code>Ty::is_unpin</code>.\nQuery backing <code>Ty::is_unpin</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the attributes on the item at <code>def_id</code>.\nReturns the attributes on the item at <code>def_id</code>.\nReturns the attributes on the item at <code>def_id</code>.\nElaborated version of the predicates from …\nElaborated version of the predicates from …\nElaborated version of the predicates from …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the layout of a type. Note that this implicitly …\nComputes the layout of a type. Note that this implicitly …\nComputes the layout of a type. Note that this implicitly …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms lint checking for the module.\nPerforms lint checking for the module.\nPerforms lint checking for the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturn the live symbols in the crate for dead code check.\nReturn the live symbols in the crate for dead code check.\nReturn the live symbols in the crate for dead code check.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturns HIR ID for the given <code>LocalDefId</code>.\nIf <code>separate_provide_if_extern</code>, then the key can be …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nBorrow-checks the function body. If this is a closure, …\nBorrow-checks the function body. If this is a closure, …\nBorrow-checks the function body. If this is a closure, …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nCheck whether the function has any recursion that could …\nCheck whether the function has any recursion that could …\nCheck whether the function has any recursion that could …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nObtain all the calls into other local functions\nObtain all the calls into other local functions\nObtain all the calls into other local functions\nSet of all the <code>DefId</code>s in this crate that have MIR …\nSet of all the <code>DefId</code>s in this crate that have MIR …\nSet of all the <code>DefId</code>s in this crate that have MIR …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGenerates a MIR body for the shim.\nGenerates a MIR body for the shim.\nGenerates a MIR body for the shim.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLook up all native libraries this crate depends on. These …\nLook up all native libraries this crate depends on. These …\nLook up all native libraries this crate depends on. These …\nGet the corresponding native library from the …\nGet the corresponding native library from the …\nGet the corresponding native library from the …\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nFor a given item’s generic parameter, gets the default …\nFor a given item’s generic parameter, gets the default …\nFor a given item’s generic parameter, gets the default …\nThis provides access to the incremental compilation …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nMIR after our optimization passes have run. This is MIR …\nMIR after our optimization passes have run. This is MIR …\nMIR after our optimization passes have run. This is MIR …\nChecks whether all impls in the crate pass the overlap …\nChecks whether all impls in the crate pass the overlap …\nChecks whether all impls in the crate pass the overlap …\nReturn the filenames where output artefacts shall be …\nReturn the filenames where output artefacts shall be …\nReturn the filenames where output artefacts shall be …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the ParameterEnvironment for a given item; this …\nGets the ParameterEnvironment for a given item; this …\nGets the ParameterEnvironment for a given item; this …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> in <code>Reveal::All</code> …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> in <code>Reveal::All</code> …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> in <code>Reveal::All</code> …\nSet of param indexes for type params that are in the type…\nSet of param indexes for type params that are in the type…\nSet of param indexes for type params that are in the type…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nMaps from the <code>DefId</code> of an item (trait/struct/enum/fn) to …\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nCollects the list of all tools registered using …\nCollects the list of all tools registered using …\nCollects the list of all tools registered using …\nGets the rendered value of the specified constant or …\nGets the rendered value of the specified constant or …\nGets the rendered value of the specified constant or …\nGets the rendered precise capturing args for an opaque for …\nGets the rendered precise capturing args for an opaque for …\nGets the rendered precise capturing args for an opaque for …\nChecks whether a type is representable or infinitely sized\nChecks whether a type is representable or infinitely sized\nChecks whether a type is representable or infinitely sized\nAn implementation detail for the <code>representability</code> query\nAn implementation detail for the <code>representability</code> query\nAn implementation detail for the <code>representability</code> query\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDoes lifetime resolution on items. Importantly, we can’t …\nDoes lifetime resolution on items. Importantly, we can’t …\nDoes lifetime resolution on items. Importantly, we can’t …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>true</code> if we should codegen an instance in the local …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturn the span for a definition. Contrary to <code>def_span</code> …\nReturn the span for a definition. Contrary to <code>def_span</code> …\nReturn the span for a definition. Contrary to <code>def_span</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nComputes the tag (if any) for a given type and variant.\nComputes the tag (if any) for a given type and variant.\nComputes the tag (if any) for a given type and variant.\nTry to build an abstract representation of the given …\nTry to build an abstract representation of the given …\nTry to build an abstract representation of the given …\nFetch the THIR for a given body. If typeck for that body …\nFetch the THIR for a given body. If typeck for that body …\nFetch the THIR for a given body. If typeck for that body …\nCreate a list-like THIR representation for debugging.\nCreate a THIR tree for debugging.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns everything that looks like a predicate written …\nReturns everything that looks like a predicate written …\nReturns everything that looks like a predicate written …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nA list of all traits in a crate, used by rustdoc and error …\nA list of all traits in a crate, used by rustdoc and error …\nA list of all traits in a crate, used by rustdoc and error …\nThis exists purely for testing the interactions between …\nThis exists purely for testing the interactions between …\nThis exists purely for testing the interactions between …\nCollects the “trimmed”, shortest accessible paths to …\nCollects the “trimmed”, shortest accessible paths to …\nCollects the “trimmed”, shortest accessible paths to …\nTries to destructure an <code>mir::Const</code> ADT or array into its …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the <code>Ty</code> of the given <code>DefId</code>. If the <code>DefId</code> points to …\nReturns the <code>Ty</code> of the given <code>DefId</code>. If the <code>DefId</code> points to …\nReturns the <code>Ty</code> of the given <code>DefId</code>. If the <code>DefId</code> points to …\nSpecialized instance of <code>type_of</code> that detects cycles that …\nSpecialized instance of <code>type_of</code> that detects cycles that …\nSpecialized instance of <code>type_of</code> that detects cycles that …\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nTo avoid cycles within the predicates of a single item we …\nTo avoid cycles within the predicates of a single item we …\nTo avoid cycles within the predicates of a single item we …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports drop-glue for the …\nReturns the upstream crate that exports drop-glue for the …\nReturns the upstream crate that exports drop-glue for the …\nThe entire set of monomorphizations the local crate can …\nThe entire set of monomorphizations the local crate can …\nThe entire set of monomorphizations the local crate can …\nReturns the set of upstream monomorphizations available …\nReturns the set of upstream monomorphizations available …\nReturns the set of upstream monomorphizations available …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nConverts a type level constant value into <code>ConstValue</code>\nConverts a type level constant value into <code>ConstValue</code>\nConverts a type level constant value into <code>ConstValue</code>\nMaps from the <code>DefId</code> of a type or region parameter to its …\nMaps from the <code>DefId</code> of a type or region parameter to its …\nMaps from the <code>DefId</code> of a type or region parameter to its …\nComputes the visibility of the provided <code>def_id</code>.\nComputes the visibility of the provided <code>def_id</code>.\nComputes the visibility of the provided <code>def_id</code>.\nThe visible parent map is a map from every item to a …\nThe visible parent map is a map from every item to a …\nThe visible parent map is a map from every item to a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nAn analogue of the <code>Into</code> trait that’s intended only for …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nWhether this is a method with an explicit self as its …\nWhether this is a method with an explicit self as its …\n<code>Some</code> if the associated item (an associated type) comes …\n<code>Some</code> if the associated item (an associated type) comes …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nIf this is an item in an impl of a trait then this is the …\nIf this is an item in an impl of a trait then this is the …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\n<code>core::future::async_drop::async_drop_in_place::&lt;&#39;_, T&gt;</code>.\n<code>core::future::async_drop::async_drop_in_place::&lt;&#39;_, T&gt;</code>.\nCompiler-generated <code>&lt;T as Clone&gt;::clone</code> implementation.\nCompiler-generated <code>&lt;T as Clone&gt;::clone</code> implementation.\n<code>&lt;[FnMut/Fn closure] as FnOnce&gt;::call_once</code>.\n<code>&lt;[FnMut/Fn closure] as FnOnce&gt;::call_once</code>.\n<code>&lt;[FnMut/Fn coroutine-closure] as FnOnce&gt;::call_once</code>\n<code>&lt;[FnMut/Fn coroutine-closure] as FnOnce&gt;::call_once</code>\n<code>core::ptr::drop_in_place::&lt;T&gt;</code>.\n<code>core::ptr::drop_in_place::&lt;T&gt;</code>.\nCompiler-generated <code>&lt;T as FnPtr&gt;::addr</code> implementation.\nCompiler-generated <code>&lt;T as FnPtr&gt;::addr</code> implementation.\n<code>&lt;fn() as FnTrait&gt;::call_*</code> (generated <code>FnTrait</code> …\n<code>&lt;fn() as FnTrait&gt;::call_*</code> (generated <code>FnTrait</code> …\nAn intrinsic <code>fn</code> item (with <code>&quot;rust-intrinsic&quot;</code> or …\nAn intrinsic <code>fn</code> item (with <code>&quot;rust-intrinsic&quot;</code> or …\nA user-defined callable item.\nA user-defined callable item.\nThis type alias specifies the type returned from query …\n<code>fn()</code> pointer where the function itself cannot be turned …\n<code>fn()</code> pointer where the function itself cannot be turned …\nCompiler-generated accessor for thread locals which …\nCompiler-generated accessor for thread locals which …\n<code>&lt;T as Trait&gt;::method</code> where <code>method</code> receives unsizeable …\n<code>&lt;T as Trait&gt;::method</code> where <code>method</code> receives unsizeable …\nDynamic dispatch to <code>&lt;dyn Trait as Trait&gt;::fn</code>.\nDynamic dispatch to <code>&lt;dyn Trait as Trait&gt;::fn</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nAnonymous constant, e.g. the <code>1 + 2</code> in <code>[u8; 1 + 2]</code>\nAnonymous constant, e.g. the <code>1 + 2</code> in <code>[u8; 1 + 2]</code>\nAssociated constant: <code>trait MyTrait { const ASSOC: usize; }</code>\nAssociated constant: <code>trait MyTrait { const ASSOC: usize; }</code>\nAssociated function: <code>impl MyStruct { fn associated() {} }</code> …\nAssociated function: <code>impl MyStruct { fn associated() {} }</code> …\nAssociated type: <code>trait MyTrait { type Assoc; }</code>\nAssociated type: <code>trait MyTrait { type Assoc; }</code>\nA closure, coroutine, or coroutine-closure.\nA closure, coroutine, or coroutine-closure.\nConstant generic parameter: …\nConstant generic parameter: …\nRefers to the struct or enum variant’s constructor.\nRefers to the struct or enum variant’s constructor.\nA field in a struct, enum or union. e.g.\nA field in a struct, enum or union. e.g.\nAn <code>extern</code> block.\nAn <code>extern</code> block.\nType from an <code>extern</code> block.\nType from an <code>extern</code> block.\nA use of <code>global_asm!</code>.\nA use of <code>global_asm!</code>.\nAn inline constant, e.g. <code>const { 1 + 2 }</code>\nAn inline constant, e.g. <code>const { 1 + 2 }</code>\nLifetime parameter: the <code>&#39;a</code> in <code>struct Foo&lt;&#39;a&gt; { ... }</code>\nLifetime parameter: the <code>&#39;a</code> in <code>struct Foo&lt;&#39;a&gt; { ... }</code>\nOpaque type, aka <code>impl Trait</code>.\nOpaque type, aka <code>impl Trait</code>.\nThis type alias specifies the type returned from query …\nRefers to the struct itself, [<code>DefKind::Ctor</code>] refers to its …\nRefers to the struct itself, [<code>DefKind::Ctor</code>] refers to its …\nThe definition of a synthetic coroutine body created by …\nThe definition of a synthetic coroutine body created by …\nTrait alias: <code>trait IntIterator = Iterator&lt;Item = i32&gt;;</code>\nTrait alias: <code>trait IntIterator = Iterator&lt;Item = i32&gt;;</code>\nType alias: <code>type Foo = Bar;</code>\nType alias: <code>type Foo = Bar;</code>\nType parameter: the <code>T</code> in <code>struct Vec&lt;T&gt; { ... }</code>\nType parameter: the <code>T</code> in <code>struct Vec&lt;T&gt; { ... }</code>\nRefers to the variant itself, [<code>DefKind::Ctor</code>] refers to …\nRefers to the variant itself, [<code>DefKind::Ctor</code>] refers to …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nWhether it’s a <code>static mut</code> or just a <code>static</code>.\nWhether it’s an anonymous static generated for nested …\nWhether it’s a <code>unsafe static</code>, <code>safe static</code> (inside extern …\nWhether it’s a <code>static mut</code> or just a <code>static</code>.\nWhether it’s an anonymous static generated for nested …\nWhether it’s a <code>unsafe static</code>, <code>safe static</code> (inside extern …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nA dependency that is required by an rlib version of this …\nA dependency that is required by an rlib version of this …\nA dependency that is always injected into the dependency …\nA dependency that is always injected into the dependency …\nA dependency that is only used for its macros.\nA dependency that is only used for its macros.\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …")