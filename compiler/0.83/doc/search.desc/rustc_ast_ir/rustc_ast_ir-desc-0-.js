searchState.loadedDescShard("rustc_ast_ir", 0, "The movability of a coroutine / closure literal: whether a …\nMust not contain self-references, <code>Unpin</code>.\nMay contain self-references, <code>!Unpin</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if self is mutable\nReturn <code>true</code> if self is <strong>not</strong> mutable\nReturns <code>&quot;&quot;</code> (empty string) or <code>&quot;mutably &quot;</code> depending on the …\nReturns <code>&quot;&quot;</code> (empty string) or <code>&quot;mut &quot;</code> depending on the …\nReturns <code>&quot;const&quot;</code> or <code>&quot;mut&quot;</code> depending on the mutability.\nReturns <code>&quot;&amp;&quot;</code> or <code>&quot;&amp;mut &quot;</code> depending on the mutability.\nSimilar to the <code>Try</code> trait, but also implemented for <code>()</code>.")