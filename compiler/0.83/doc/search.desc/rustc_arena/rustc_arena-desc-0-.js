searchState.loadedDescShard("rustc_arena", 0, "The arena, a fast but limited type of allocator.\nAn arena that can hold objects of multiple different types …\nAn arena that can hold objects of only one type.\nMarker indicating that dropping the arena causes its owned …\nAllocates an object in the <code>TypedArena</code>, returning a …\nAllocates the elements of this iterator into a contiguous …\nAllocates a slice of objects that are copied into the …\nAllocates a string slice that is copied into the …\nA vector of arena chunks.\nA vector of arena chunks.\nUsed by <code>Lift</code> to check whether this slice is allocated in …\nDeclare an <code>Arena</code> containing one dropless arena and many …\nCreates a new <code>TypedArena</code>.\nDestroys this arena chunk.\nA pointer to the end of the allocated area. When this …\nA pointer to the end of free space.\nThe number of valid entries in the chunk.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGrows the arena.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis calls the passed function while ensuring it won’t …\nA pointer to the next object to be allocated.\nA pointer to the start of the free space.\nThe raw storage for the arena chunk.\nSafety")