(function() {var type_impls = {
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Clone-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Debug-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3C__D%3E-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Decodable%3C__D%3E-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;__D&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;__D&gt; for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a><div class=\"where\">where\n    __D: <a class=\"trait\" href=\"rustc_span/trait.SpanDecoder.html\" title=\"trait rustc_span::SpanDecoder\">SpanDecoder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(__decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __D</a>) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h4></section></div></details>","Decodable<__D>","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DepNodeParams%3CTyCtxt%3C'tcx%3E%3E-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/dep_graph/dep_node.rs.html#456\">source</a><a href=\"#impl-DepNodeParams%3CTyCtxt%3C'tcx%3E%3E-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/dep_graph/dep_node/trait.DepNodeParams.html\" title=\"trait rustc_middle::dep_graph::dep_node::DepNodeParams\">DepNodeParams</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.fingerprint_style\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/dep_graph/dep_node.rs.html#456\">source</a><a href=\"#method.fingerprint_style\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/dep_graph/dep_node/trait.DepNodeParams.html#tymethod.fingerprint_style\" class=\"fn\">fingerprint_style</a>() -&gt; <a class=\"enum\" href=\"rustc_query_system/dep_graph/enum.FingerprintStyle.html\" title=\"enum rustc_query_system::dep_graph::FingerprintStyle\">FingerprintStyle</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fingerprint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/dep_graph/dep_node.rs.html#456\">source</a><a href=\"#method.to_fingerprint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/dep_graph/dep_node/trait.DepNodeParams.html#method.to_fingerprint\" class=\"fn\">to_fingerprint</a>(&amp;self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; <a class=\"struct\" href=\"rustc_data_structures/fingerprint/struct.Fingerprint.html\" title=\"struct rustc_data_structures::fingerprint::Fingerprint\">Fingerprint</a></h4></section></summary><div class='docblock'>This method turns the parameters of a DepNodeConstructor into an opaque\nFingerprint to be used in DepNode.\nNot all DepNodeParams support being turned into a Fingerprint (they\ndon’t need to if the corresponding DepNode is anonymous).</div></details><section id=\"method.to_debug_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/dep_graph/dep_node.rs.html#456\">source</a><a href=\"#method.to_debug_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/dep_graph/dep_node/trait.DepNodeParams.html#method.to_debug_str\" class=\"fn\">to_debug_str</a>(&amp;self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/dep_graph/dep_node.rs.html#456\">source</a><a href=\"#method.recover\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/dep_graph/dep_node/trait.DepNodeParams.html#tymethod.recover\" class=\"fn\">recover</a>(tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;, dep_node: &amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>This method tries to recover the query key from the given <code>DepNode</code>,\nsomething which is needed when forcing <code>DepNode</code>s during red-green\nevaluation. The query system will only call this method if\n<code>fingerprint_style()</code> is not <code>FingerprintStyle::Opaque</code>.\nIt is always valid to return <code>None</code> here, in which case incremental\ncompilation will treat the query as having changed instead of forcing it.</div></details></div></details>","DepNodeParams<TyCtxt<'tcx>>","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3C__E%3E-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Encodable%3C__E%3E-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;__E&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;__E&gt; for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a><div class=\"where\">where\n    __E: <a class=\"trait\" href=\"rustc_span/trait.SpanEncoder.html\" title=\"trait rustc_span::SpanEncoder\">SpanEncoder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, __encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __E</a>)</h4></section></div></details>","Encodable<__E>","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#222-321\">source</a><a href=\"#impl-EraseType-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Hash-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3C__CTX%3E-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-HashStable%3C__CTX%3E-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;__CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt; for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a><div class=\"where\">where\n    __CTX: <a class=\"trait\" href=\"rustc_span/trait.HashStableContext.html\" title=\"trait rustc_span::HashStableContext\">HashStableContext</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, __hcx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CTX</a>, __hasher: &amp;mut <a class=\"struct\" href=\"rustc_data_structures/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>)</h4></section></div></details>","HashStable<__CTX>","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoQueryParam%3CDefId%3E-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/plumbing.rs.html#655-660\">source</a><a href=\"#impl-IntoQueryParam%3CDefId%3E-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/plumbing/sealed/trait.IntoQueryParam.html\" title=\"trait rustc_middle::query::plumbing::sealed::IntoQueryParam\">IntoQueryParam</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt; for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_query_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/plumbing.rs.html#657-659\">source</a><a href=\"#method.into_query_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/plumbing/sealed/trait.IntoQueryParam.html#tymethod.into_query_param\" class=\"fn\">into_query_param</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a></h4></section></div></details>","IntoQueryParam<DefId>","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoQueryParam%3CLocalDefId%3E-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/plumbing.rs.html#662-667\">source</a><a href=\"#impl-IntoQueryParam%3CLocalDefId%3E-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/plumbing/sealed/trait.IntoQueryParam.html\" title=\"trait rustc_middle::query::plumbing::sealed::IntoQueryParam\">IntoQueryParam</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>&gt; for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_query_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/plumbing.rs.html#664-666\">source</a><a href=\"#method.into_query_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/plumbing/sealed/trait.IntoQueryParam.html#tymethod.into_query_param\" class=\"fn\">into_query_param</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a></h4></section></div></details>","IntoQueryParam<LocalDefId>","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#177-188\">source</a><a href=\"#impl-Key-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.CacheSelector\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CacheSelector\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/keys/trait.Key.html#associatedtype.CacheSelector\" class=\"associatedtype\">CacheSelector</a> = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCacheSelector.html\" title=\"struct rustc_query_system::query::caches::DefaultCacheSelector\">DefaultCacheSelector</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#180-182\">source</a><a href=\"#method.default_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#185-187\">source</a><a href=\"#method.key_as_def_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_def_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_def_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_def_id\" class=\"fn\">ty_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><h4 class=\"code-header\">pub const fn <a href=\"rustc_span/def_id/struct.LocalModDefId.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(def_id: <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h4></section><section id=\"method.to_def_id\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/def_id/struct.LocalModDefId.html#tymethod.to_def_id\" class=\"fn\">to_def_id</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a></h4></section><section id=\"method.to_local_def_id\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/def_id/struct.LocalModDefId.html#tymethod.to_local_def_id\" class=\"fn\">to_local_def_id</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a></h4></section></div></details>",0,"rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#543\">source</a><a href=\"#impl-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.CRATE_DEF_ID\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#544\">source</a><h4 class=\"code-header\">pub const <a href=\"rustc_span/def_id/struct.LocalModDefId.html#associatedconstant.CRATE_DEF_ID\" class=\"constant\">CRATE_DEF_ID</a>: <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a> = _</h4></section></div></details>",0,"rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#553\">source</a><a href=\"#impl-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_top_level_module\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#554\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/def_id/struct.LocalModDefId.html#tymethod.is_top_level_module\" class=\"fn\">is_top_level_module</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Ord-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"tymethod.cmp\" class=\"tymethod trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#836\">source</a></span><a href=\"#tymethod.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#851-853\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#871-873\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details></div></details>","Ord","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-PartialEq-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-PartialOrd-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"tymethod.partial_cmp\" class=\"tymethod trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1157\">source</a></span><a href=\"#tymethod.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1171\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1188\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1204\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1221\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<section id=\"impl-Copy-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Copy-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section>","Copy","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<section id=\"impl-Eq-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-Eq-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section>","Eq","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"],["<section id=\"impl-StructuralPartialEq-for-LocalModDefId\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/def_id.rs.html#541\">source</a><a href=\"#impl-StructuralPartialEq-for-LocalModDefId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_span/def_id/struct.LocalModDefId.html\" title=\"struct rustc_span::def_id::LocalModDefId\">LocalModDefId</a></h3></section>","StructuralPartialEq","rustc_middle::query::queries::hir_module_items::Key","rustc_middle::query::queries::hir_module_items::LocalKey","rustc_middle::query::queries::lint_mod::Key","rustc_middle::query::queries::lint_mod::LocalKey","rustc_middle::query::queries::check_mod_attrs::Key","rustc_middle::query::queries::check_mod_attrs::LocalKey","rustc_middle::query::queries::check_mod_unstable_api_usage::Key","rustc_middle::query::queries::check_mod_unstable_api_usage::LocalKey","rustc_middle::query::queries::check_mod_const_bodies::Key","rustc_middle::query::queries::check_mod_const_bodies::LocalKey","rustc_middle::query::queries::check_mod_loops::Key","rustc_middle::query::queries::check_mod_loops::LocalKey","rustc_middle::query::queries::check_mod_naked_functions::Key","rustc_middle::query::queries::check_mod_naked_functions::LocalKey","rustc_middle::query::queries::check_mod_privacy::Key","rustc_middle::query::queries::check_mod_privacy::LocalKey","rustc_middle::query::queries::check_mod_deathness::Key","rustc_middle::query::queries::check_mod_deathness::LocalKey","rustc_middle::query::queries::check_mod_type_wf::Key","rustc_middle::query::queries::check_mod_type_wf::LocalKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()