(function() {var type_impls = {
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-Clone-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#144\">source</a><a href=\"#impl-Debug-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#145\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#154\">source</a><a href=\"#impl-Deref-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = &amp;'a <a class=\"struct\" href=\"rustc_abi/struct.LayoutS.html\" title=\"struct rustc_abi::LayoutS\">LayoutS</a>&lt;<a class=\"struct\" href=\"rustc_target/abi/struct.FieldIdx.html\" title=\"struct rustc_target::abi::FieldIdx\">FieldIdx</a>, <a class=\"struct\" href=\"rustc_target/abi/struct.VariantIdx.html\" title=\"struct rustc_target::abi::VariantIdx\">VariantIdx</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#156\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&amp;'a <a class=\"struct\" href=\"rustc_abi/struct.LayoutS.html\" title=\"struct rustc_abi::LayoutS\">LayoutS</a>&lt;<a class=\"struct\" href=\"rustc_target/abi/struct.FieldIdx.html\" title=\"struct rustc_target::abi::FieldIdx\">FieldIdx</a>, <a class=\"struct\" href=\"rustc_target/abi/struct.VariantIdx.html\" title=\"struct rustc_target::abi::VariantIdx\">VariantIdx</a>&gt;</h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-Hash-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3C__CTX%3E-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-HashStable%3C__CTX%3E-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty, __CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt; for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    __CTX: <a class=\"trait\" href=\"rustc_abi/trait.HashStableContext.html\" title=\"trait rustc_abi::HashStableContext\">HashStableContext</a>,\n    Ty: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;__CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, __hcx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CTX</a>, __hasher: &amp;mut <a class=\"struct\" href=\"rustc_data_structures/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>)</h4></section></div></details>","HashStable<__CTX>","rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-PartialEq-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/call/mod.rs.html#394\">source</a><a href=\"#impl-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.homogeneous_aggregate\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/call/mod.rs.html#412-414\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.homogeneous_aggregate\" class=\"fn\">homogeneous_aggregate</a>&lt;C&gt;(\n    &amp;self,\n    cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"rustc_target/abi/call/enum.HomogeneousAggregate.html\" title=\"enum rustc_target::abi::call::HomogeneousAggregate\">HomogeneousAggregate</a>, <a class=\"struct\" href=\"rustc_target/abi/call/struct.Heterogeneous.html\" title=\"struct rustc_target::abi::call::Heterogeneous\">Heterogeneous</a>&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>Homogeneous</code> if this layout is an aggregate containing fields of\nonly a single type (e.g., <code>(u32, u32)</code>). Such aggregates are often\nspecial-cased in ABIs.</p>\n<p>Note: We generally ignore 1-ZST fields when computing this value (see #56877).</p>\n<p>This is public so that it can be used in unit tests, but\nshould generally only be relevant to the ABI details of\nspecific targets.</p>\n</div></details></div></details>",0,"rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#182\">source</a><a href=\"#impl-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.for_variant\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#183-185\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.for_variant\" class=\"fn\">for_variant</a>&lt;C&gt;(\n    self,\n    cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>,\n    variant_index: <a class=\"struct\" href=\"rustc_target/abi/struct.VariantIdx.html\" title=\"struct rustc_target::abi::VariantIdx\">VariantIdx</a>\n) -&gt; <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.field\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#190-192\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.field\" class=\"fn\">field</a>&lt;C&gt;(self, cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.pointee_info_at\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#197-199\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.pointee_info_at\" class=\"fn\">pointee_info_at</a>&lt;C&gt;(self, cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>, offset: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_abi/struct.PointeeInfo.html\" title=\"struct rustc_abi::PointeeInfo\">PointeeInfo</a>&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.is_single_fp_element\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#204-207\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.is_single_fp_element\" class=\"fn\">is_single_fp_element</a>&lt;C&gt;(self, cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,\n    C: <a class=\"trait\" href=\"rustc_abi/trait.HasDataLayout.html\" title=\"trait rustc_abi::HasDataLayout\">HasDataLayout</a>,</div></h4></section><section id=\"method.is_adt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#222-224\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.is_adt\" class=\"fn\">is_adt</a>&lt;C&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.is_never\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#229-231\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.is_never\" class=\"fn\">is_never</a>&lt;C&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.is_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#236-238\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.is_tuple\" class=\"fn\">is_tuple</a>&lt;C&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.is_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#243-245\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.is_unit\" class=\"fn\">is_unit</a>&lt;C&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.is_transparent\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#250-252\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.is_transparent\" class=\"fn\">is_transparent</a>&lt;C&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,</div></h4></section><section id=\"method.offset_of_subfield\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#257-260\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.offset_of_subfield\" class=\"fn\">offset_of_subfield</a>&lt;C, I&gt;(self, cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>, indices: I) -&gt; <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a><div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (<a class=\"struct\" href=\"rustc_target/abi/struct.VariantIdx.html\" title=\"struct rustc_target::abi::VariantIdx\">VariantIdx</a>, <a class=\"struct\" href=\"rustc_target/abi/struct.FieldIdx.html\" title=\"struct rustc_target::abi::FieldIdx\">FieldIdx</a>)&gt;,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.non_1zst_field\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#282-284\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_target/abi/struct.TyAndLayout.html#tymethod.non_1zst_field\" class=\"fn\">non_1zst_field</a>&lt;C&gt;(&amp;self, cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;)&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"rustc_target/abi/trait.TyAbiInterface.html\" title=\"trait rustc_target::abi::TyAbiInterface\">TyAbiInterface</a>&lt;'a, C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Finds the one field that is not a 1-ZST.\nReturns <code>None</code> if there are multiple non-1-ZST fields or only 1-ZST-fields.</p>\n</div></details></div></details>",0,"rustc_middle::ty::layout::TyAndLayout"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-TyAndLayout%3C'tcx,+Ty%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#803-807\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-TyAndLayout%3C'tcx,+Ty%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'tcx, <a class=\"struct\" href=\"rustc_middle/ty/struct.Ty.html\" title=\"struct rustc_middle::ty::Ty\">Ty</a>&lt;'tcx&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#804-806\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_middle::ty::TypeVisitor::Result\">Result</a></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<TyCtxt<'tcx>>","rustc_middle::ty::layout::TyAndLayout"],["<section id=\"impl-Copy-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-Copy-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_middle::ty::layout::TyAndLayout"],["<section id=\"impl-Eq-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-Eq-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;<div class=\"where\">where\n    Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_middle::ty::layout::TyAndLayout"],["<section id=\"impl-StructuralPartialEq-for-TyAndLayout%3C'a,+Ty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/abi/mod.rs.html#138\">source</a><a href=\"#impl-StructuralPartialEq-for-TyAndLayout%3C'a,+Ty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ty&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_target/abi/struct.TyAndLayout.html\" title=\"struct rustc_target::abi::TyAndLayout\">TyAndLayout</a>&lt;'a, Ty&gt;</h3></section>","StructuralPartialEq","rustc_middle::ty::layout::TyAndLayout"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()