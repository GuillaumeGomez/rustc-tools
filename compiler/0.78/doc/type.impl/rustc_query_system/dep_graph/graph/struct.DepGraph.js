(function() {var type_impls = {
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DepGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#27\">source</a><a href=\"#impl-Clone-for-DepGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.Deps.html\" title=\"trait rustc_middle::dep_graph::Deps\">Deps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#27\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::dep_graph::DepGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DepGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#113\">source</a><a href=\"#impl-DepGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.Deps.html\" title=\"trait rustc_middle::dep_graph::Deps\">Deps</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#114-121\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.new\" class=\"fn\">new</a>(\n    profiler: &amp;<a class=\"struct\" href=\"rustc_data_structures/profiling/struct.SelfProfilerRef.html\" title=\"struct rustc_data_structures::profiling::SelfProfilerRef\">SelfProfilerRef</a>,\n    prev_graph: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.SerializedDepGraph.html\" title=\"struct rustc_middle::dep_graph::SerializedDepGraph\">SerializedDepGraph</a>,\n    prev_work_products: <a class=\"struct\" href=\"rustc_data_structures/unord/struct.UnordMap.html\" title=\"struct rustc_data_structures::unord::UnordMap\">UnordMap</a>&lt;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.WorkProductId.html\" title=\"struct rustc_middle::dep_graph::WorkProductId\">WorkProductId</a>, <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.WorkProduct.html\" title=\"struct rustc_middle::dep_graph::WorkProduct\">WorkProduct</a>&gt;,\n    encoder: <a class=\"struct\" href=\"rustc_serialize/opaque/struct.FileEncoder.html\" title=\"struct rustc_serialize::opaque::FileEncoder\">FileEncoder</a>,\n    record_graph: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    record_stats: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;</h4></section><section id=\"method.new_disabled\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#179\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.new_disabled\" class=\"fn\">new_disabled</a>() -&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_fully_enabled\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#190\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.is_fully_enabled\" class=\"fn\">is_fully_enabled</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if we are actually building the full dep-graph, and <code>false</code> otherwise.</p>\n</div></details><section id=\"method.with_query\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#194\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.with_query\" class=\"fn\">with_query</a>(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepGraphQuery.html\" title=\"struct rustc_middle::dep_graph::DepGraphQuery\">DepGraphQuery</a>))</h4></section><section id=\"method.assert_ignored\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#200\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.assert_ignored\" class=\"fn\">assert_ignored</a>(&amp;self)</h4></section><section id=\"method.with_ignore\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#212-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.with_ignore\" class=\"fn\">with_ignore</a>&lt;OP, R&gt;(&amp;self, op: OP) -&gt; R<div class=\"where\">where\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; R,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_query_deserialization\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#265-267\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.with_query_deserialization\" class=\"fn\">with_query_deserialization</a>&lt;OP, R&gt;(&amp;self, op: OP) -&gt; R<div class=\"where\">where\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Used to wrap the deserialization of a query result from disk,\nThis method enforces that no new <code>DepNodes</code> are created during\nquery result deserialization.</p>\n<p>Enforcing this makes the query dep graph simpler - all nodes\nmust be created during the query execution, and should be\ncreated from inside the ‘body’ of a query (the implementation\nprovided by a particular compiler crate).</p>\n<p>Consider the case of three queries <code>A</code>, <code>B</code>, and <code>C</code>, where\n<code>A</code> invokes <code>B</code> and <code>B</code> invokes <code>C</code>:</p>\n<p><code>A -&gt; B -&gt; C</code></p>\n<p>Suppose that decoding the result of query <code>B</code> required re-computing\nthe query <code>C</code>. If we did not create a fresh <code>TaskDeps</code> when\ndecoding <code>B</code>, we would still be using the <code>TaskDeps</code> for query <code>A</code>\n(if we needed to re-execute <code>A</code>). This would cause us to create\na new edge <code>A -&gt; C</code>. If this edge did not previously\nexist in the <code>DepGraph</code>, then we could end up with a different\n<code>DepGraph</code> at the end of compilation, even if there were no\nmeaningful changes to the overall program (e.g. a newline was added).\nIn addition, this edge might cause a subsequent compilation run\nto try to force <code>C</code> before marking other necessary nodes green. If\n<code>C</code> did not exist in the new compilation session, then we could\nget an ICE. Normally, we would have tried (and failed) to mark\nsome other query green (e.g. <code>item_children</code>) which was used\nto obtain <code>C</code>, which would prevent us from ever trying to force\na nonexistent <code>D</code>.</p>\n<p>It might be possible to enforce that all <code>DepNode</code>s read during\ndeserialization already exist in the previous <code>DepGraph</code>. In\nthe above example, we would invoke <code>D</code> during the deserialization\nof <code>B</code>. Since we correctly create a new <code>TaskDeps</code> from the decoding\nof <code>B</code>, this would result in an edge <code>B -&gt; D</code>. If that edge already\nexisted (with the same <code>DepPathHash</code>es), then it should be correct\nto allow the invocation of the query to proceed during deserialization\nof a query result. We would merely assert that the dep-graph fragment\nthat would have been added by invoking <code>C</code> while decoding <code>B</code>\nis equivalent to the dep-graph fragment that we already instantiated for B\n(at the point where we successfully marked B as green).</p>\n<p>However, this would require additional complexity\nin the query infrastructure, and is not currently needed by the\ndecoding of any query results. Should the need arise in the future,\nwe should consider extending the query system with this functionality.</p>\n</div></details><section id=\"method.with_task\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#273-280\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.with_task\" class=\"fn\">with_task</a>&lt;Ctxt, A, R&gt;(\n    &amp;self,\n    key: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>,\n    cx: Ctxt,\n    arg: A,\n    task: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: Ctxt, _: A) -&gt; R,\n    hash_result: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;mut <a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'_&gt;, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;R</a>) -&gt; <a class=\"struct\" href=\"rustc_data_structures/fingerprint/struct.Fingerprint.html\" title=\"struct rustc_data_structures::fingerprint::Fingerprint\">Fingerprint</a>&gt;\n) -&gt; (R, <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNodeIndex.html\" title=\"struct rustc_middle::dep_graph::DepNodeIndex\">DepNodeIndex</a>)<div class=\"where\">where\n    Ctxt: <a class=\"trait\" href=\"rustc_query_system/dep_graph/trait.HasDepContext.html\" title=\"trait rustc_query_system::dep_graph::HasDepContext\">HasDepContext</a>&lt;Deps = D&gt;,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section><section id=\"method.with_anon_task\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#287-294\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.with_anon_task\" class=\"fn\">with_anon_task</a>&lt;Tcx, OP, R&gt;(\n    &amp;self,\n    cx: Tcx,\n    dep_kind: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepKind.html\" title=\"struct rustc_middle::dep_graph::DepKind\">DepKind</a>,\n    op: OP\n) -&gt; (R, <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNodeIndex.html\" title=\"struct rustc_middle::dep_graph::DepNodeIndex\">DepNodeIndex</a>)<div class=\"where\">where\n    Tcx: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.DepContext.html\" title=\"trait rustc_middle::dep_graph::DepContext\">DepContext</a>&lt;Deps = D&gt;,\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; R,</div></h4></section></div></details>",0,"rustc_middle::dep_graph::DepGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DepGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#446\">source</a><a href=\"#impl-DepGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.Deps.html\" title=\"trait rustc_middle::dep_graph::Deps\">Deps</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.read_index\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#448\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.read_index\" class=\"fn\">read_index</a>(&amp;self, dep_node_index: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNodeIndex.html\" title=\"struct rustc_middle::dep_graph::DepNodeIndex\">DepNodeIndex</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_feed_task\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#517-524\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.with_feed_task\" class=\"fn\">with_feed_task</a>&lt;Ctxt, A, R&gt;(\n    &amp;self,\n    node: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>,\n    cx: Ctxt,\n    key: A,\n    result: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;R</a>,\n    hash_result: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;mut <a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'_&gt;, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;R</a>) -&gt; <a class=\"struct\" href=\"rustc_data_structures/fingerprint/struct.Fingerprint.html\" title=\"struct rustc_data_structures::fingerprint::Fingerprint\">Fingerprint</a>&gt;\n) -&gt; <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNodeIndex.html\" title=\"struct rustc_middle::dep_graph::DepNodeIndex\">DepNodeIndex</a><div class=\"where\">where\n    Ctxt: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.DepContext.html\" title=\"trait rustc_middle::dep_graph::DepContext\">DepContext</a>&lt;Deps = D&gt;,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Create a node when we force-feed a value into the query cache.\nThis is used to remove cycles during type-checking const generic parameters.</p>\n<p>As usual in the query system, we consider the current state of the calling query\nonly depends on the list of dependencies up to now. As a consequence, the value\nthat this query gives us can only depend on those dependencies too. Therefore,\nit is sound to use the current dependency set for the created node.</p>\n<p>During replay, the order of the nodes is relevant in the dependency graph.\nSo the unchanged replay will mark the caller query before trying to mark this one.\nIf there is a change to report, the caller query will be re-executed before this one.</p>\n<p>FIXME: If the code is changed enough for this node to be marked before requiring the\ncaller’s node, we suppose that those changes will be enough to mark this node red and\nforce a recomputation using the “normal” way.</p>\n</div></details></div></details>",0,"rustc_middle::dep_graph::DepGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DepGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#646\">source</a><a href=\"#impl-DepGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.Deps.html\" title=\"trait rustc_middle::dep_graph::Deps\">Deps</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dep_node_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#648\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.dep_node_exists\" class=\"fn\">dep_node_exists</a>(&amp;self, dep_node: &amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.previous_work_product\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#654\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.previous_work_product\" class=\"fn\">previous_work_product</a>(&amp;self, v: &amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.WorkProductId.html\" title=\"struct rustc_middle::dep_graph::WorkProductId\">WorkProductId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.WorkProduct.html\" title=\"struct rustc_middle::dep_graph::WorkProduct\">WorkProduct</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checks whether a previous work product exists for <code>v</code> and, if\nso, return the path that leads to it. Used to skip doing work.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.previous_work_products\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#660\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.previous_work_products\" class=\"fn\">previous_work_products</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"rustc_data_structures/unord/struct.UnordMap.html\" title=\"struct rustc_data_structures::unord::UnordMap\">UnordMap</a>&lt;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.WorkProductId.html\" title=\"struct rustc_middle::dep_graph::WorkProductId\">WorkProductId</a>, <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.WorkProduct.html\" title=\"struct rustc_middle::dep_graph::WorkProduct\">WorkProduct</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Access the map of work-products created during the cached run. Only\nused during saving of the dep-graph.</p>\n</div></details><section id=\"method.debug_was_loaded_from_disk\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#664\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.debug_was_loaded_from_disk\" class=\"fn\">debug_was_loaded_from_disk</a>(&amp;self, dep_node: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.dep_node_debug_str\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#683\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.dep_node_debug_str\" class=\"fn\">dep_node_debug_str</a>(&amp;self, dep_node: <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section><section id=\"method.try_mark_green\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#695-699\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.try_mark_green\" class=\"fn\">try_mark_green</a>&lt;Qcx&gt;(\n    &amp;self,\n    qcx: Qcx,\n    dep_node: &amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.SerializedDepNodeIndex.html\" title=\"struct rustc_middle::dep_graph::SerializedDepNodeIndex\">SerializedDepNodeIndex</a>, <a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNodeIndex.html\" title=\"struct rustc_middle::dep_graph::DepNodeIndex\">DepNodeIndex</a>)&gt;<div class=\"where\">where\n    Qcx: <a class=\"trait\" href=\"rustc_query_system/query/trait.QueryContext.html\" title=\"trait rustc_query_system::query::QueryContext\">QueryContext</a>&lt;Deps = D&gt;,</div></h4></section></div></details>",0,"rustc_middle::dep_graph::DepGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DepGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#914\">source</a><a href=\"#impl-DepGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html\" title=\"struct rustc_query_system::dep_graph::graph::DepGraph\">DepGraph</a>&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.Deps.html\" title=\"trait rustc_middle::dep_graph::Deps\">Deps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_red\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#917\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.is_red\" class=\"fn\">is_red</a>(&amp;self, dep_node: &amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the given node has been marked as red during the\ncurrent compilation session. Used in various assertions</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_green\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#923\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.is_green\" class=\"fn\">is_green</a>(&amp;self, dep_node: &amp;<a class=\"struct\" href=\"rustc_middle/dep_graph/struct.DepNode.html\" title=\"struct rustc_middle::dep_graph::DepNode\">DepNode</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the given node has been marked as green during the\ncurrent compilation session. Used in various assertions</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_cache_promotions\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#935\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.exec_cache_promotions\" class=\"fn\">exec_cache_promotions</a>&lt;Tcx&gt;(&amp;self, tcx: Tcx)<div class=\"where\">where\n    Tcx: <a class=\"trait\" href=\"rustc_middle/dep_graph/trait.DepContext.html\" title=\"trait rustc_middle::dep_graph::DepContext\">DepContext</a>,</div></h4></section></summary><div class=\"docblock\"><p>This method loads all on-disk cacheable query results into memory, so\nthey can be written out to the new cache file again. Most query results\nwill already be in memory but in the case where we marked something as\ngreen but then did not need the value, that value will never have been\nloaded from disk.</p>\n<p>This method will only load queries that will end up in the disk cache.\nOther queries will not be executed.</p>\n</div></details><section id=\"method.print_incremental_info\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#954\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.print_incremental_info\" class=\"fn\">print_incremental_info</a>(&amp;self)</h4></section><section id=\"method.finish_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_query_system/dep_graph/graph.rs.html#963\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_query_system/dep_graph/graph/struct.DepGraph.html#tymethod.finish_encoding\" class=\"fn\">finish_encoding</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, (<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>)&gt;</h4></section></div></details>",0,"rustc_middle::dep_graph::DepGraph"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()