(function() {var type_impls = {
"rustc_hir":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4689\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4691\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#20\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#24\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data, T&gt; IntoParallelIterator for &amp;'data <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'data,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'data T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Iter</a> = Iter&lt;'data, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_par_iter</a>(self) -&gt; Iter&lt;'data, T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a>Read more</a></div></details></div></details>","IntoParallelIterator","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#81-83\">source</a></span><a href=\"#impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#86\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#90\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[U; N]>","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Vec&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: Allocator,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","rustc_hir::hir::GenericBounds"]],
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"impl\"><a href=\"#impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;ZeroSlice&lt;T&gt;&gt; for &amp;[&lt;T as AsULE&gt;::ULE]<div class=\"where\">where\n    T: AsULE,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;ZeroSlice&lt;T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<ZeroSlice<T>>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5B(Clause%3C'tcx%3E,+Span)%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#775-780\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5B(Clause%3C'tcx%3E,+Span)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [(<a class=\"struct\" href=\"rustc_middle/ty/predicate/struct.Clause.html\" title=\"struct rustc_middle::ty::predicate::Clause\">Clause</a>&lt;'tcx&gt;, <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>)]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#777-779\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5B(ExportedSymbol%3C'tcx%3E,+SymbolExportInfo)%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5B(ExportedSymbol%3C'tcx%3E,+SymbolExportInfo)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [(<a class=\"enum\" href=\"rustc_middle/middle/exported_symbols/enum.ExportedSymbol.html\" title=\"enum rustc_middle::middle::exported_symbols::ExportedSymbol\">ExportedSymbol</a>&lt;'tcx&gt;, <a class=\"struct\" href=\"rustc_middle/middle/exported_symbols/struct.SymbolExportInfo.html\" title=\"struct rustc_middle::middle::exported_symbols::SymbolExportInfo\">SymbolExportInfo</a>)]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BAttribute%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BAttribute%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BDeducedParamAttrs%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BDeducedParamAttrs%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_middle/ty/context/struct.DeducedParamAttrs.html\" title=\"struct rustc_middle::ty::context::DeducedParamAttrs\">DeducedParamAttrs</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BDefId%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BDefId%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BIdent%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BIdent%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_span/symbol/struct.Ident.html\" title=\"struct rustc_span::symbol::Ident\">Ident</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BVariance%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26%5BVariance%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"enum\" href=\"rustc_middle/ty/enum.Variance.html\" title=\"enum rustc_middle::ty::Variance\">Variance</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#809-818\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable<CacheDecoder<'a, 'tcx>>","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4689\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4691\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CVarZeroSlice%3CT,+F%3E%3E-for-%26%5BE%5D\" class=\"impl\"><a href=\"#impl-EncodeAsVarULE%3CVarZeroSlice%3CT,+F%3E%3E-for-%26%5BE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E, F&gt; EncodeAsVarULE&lt;VarZeroSlice&lt;T, F&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[E]</a><div class=\"where\">where\n    T: VarULE + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: EncodeAsVarULE&lt;T&gt;,\n    F: VarZeroVecFormat,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding [<code>VarULE</code>] type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding [<code>VarULE</code>] type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of [<code>Self::encode_var_ule_len()</code>]</div></details></div></details>","EncodeAsVarULE<VarZeroSlice<T, F>>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CZeroSlice%3CT%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-EncodeAsVarULE%3CZeroSlice%3CT%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; EncodeAsVarULE&lt;ZeroSlice&lt;T&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: AsULE + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding [<code>VarULE</code>] type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding [<code>VarULE</code>] type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of [<code>Self::encode_var_ule_len()</code>]</div></details></div></details>","EncodeAsVarULE<ZeroSlice<T>>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#62-64\">source</a><a href=\"#impl-EraseType-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#20\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#24\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/slice/mod.rs.html#671\">source</a><a href=\"#impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for &amp;'data <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'data,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'data T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/slice/mod.rs.html#675\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterizedOverTcx-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/parameterized.rs.html#12-14\">source</a><a href=\"#impl-ParameterizedOverTcx-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt; <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a> for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" class=\"associatedtype\">Value</a>&lt;'tcx&gt; = &amp;'tcx [&lt;T as <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" title=\"type rustc_middle::ty::parameterized::ParameterizedOverTcx::Value\">Value</a>&lt;'tcx&gt;]</h4></section></div></details>","ParameterizedOverTcx","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#81-83\">source</a></span><a href=\"#impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#86\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#90\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[U; N]>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Vec&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: Allocator,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Store%3CK,+V%3E-for-%26%5B(K,+V)%5D\" class=\"impl\"><a href=\"#impl-Store%3CK,+V%3E-for-%26%5B(K,+V)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V&gt; Store&lt;K, V&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>]<div class=\"where\">where\n    K: 'a,\n    V: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lm_len\" class=\"method trait-impl\"><a href=\"#method.lm_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of elements in the store.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lm_is_empty\" class=\"method trait-impl\"><a href=\"#method.lm_is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether the store is empty (contains 0 elements).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lm_get\" class=\"method trait-impl\"><a href=\"#method.lm_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_get</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class='docblock'>Gets a key/value pair at the specified index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lm_last\" class=\"method trait-impl\"><a href=\"#method.lm_last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class='docblock'>Gets the last element in the store, or <code>None</code> if the store is empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lm_binary_search_by\" class=\"method trait-impl\"><a href=\"#method.lm_binary_search_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_binary_search_by</a>&lt;F&gt;(&amp;self, cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Searches the store for a particular element with a comparator function. <a>Read more</a></div></details></div></details>","Store<K, V>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoreConstEmpty%3CK,+V%3E-for-%26%5B(K,+V)%5D\" class=\"impl\"><a href=\"#impl-StoreConstEmpty%3CK,+V%3E-for-%26%5B(K,+V)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V&gt; StoreConstEmpty&lt;K, V&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>]<div class=\"where\">where\n    K: 'a,\n    V: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EMPTY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EMPTY</a>: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>] = _</h4></section></summary><div class='docblock'>An empty store</div></details></div></details>","StoreConstEmpty<K, V>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoreIterable%3C'a,+K,+V%3E-for-%26%5B(K,+V)%5D\" class=\"impl\"><a href=\"#impl-StoreIterable%3C'a,+K,+V%3E-for-%26%5B(K,+V)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V&gt; StoreIterable&lt;'a, K, V&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>]<div class=\"where\">where\n    K: 'a,\n    V: 'a,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.KeyValueIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.KeyValueIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">KeyValueIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.lm_iter\" class=\"method trait-impl\"><a href=\"#method.lm_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_iter</a>(&amp;'a self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class='docblock'>Returns an iterator over key/value pairs.</div></details></div></details>","StoreIterable<'a, K, V>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoreSlice%3CK,+V%3E-for-%26%5B(K,+V)%5D\" class=\"impl\"><a href=\"#impl-StoreSlice%3CK,+V%3E-for-%26%5B(K,+V)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V&gt; StoreSlice&lt;K, V&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Slice</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>]</h4></section><section id=\"method.lm_get_range\" class=\"method trait-impl\"><a href=\"#method.lm_get_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lm_get_range</a>(&amp;self, range: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>]&gt;</h4></section></div></details>","StoreSlice<K, V>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#175\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_middle/ty/trait.Interner.html\" title=\"trait rustc_middle::ty::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#176\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_middle::ty::TypeVisitor::Result\">Result</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value%3CTyCtxt%3C'tcx%3E%3E-for-%26%5BVariance%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/values.rs.html#134-153\">source</a><a href=\"#impl-Value%3CTyCtxt%3C'tcx%3E%3E-for-%26%5BVariance%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_query_system/values/trait.Value.html\" title=\"trait rustc_query_system::values::Value\">Value</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for &amp;[<a class=\"enum\" href=\"rustc_middle/ty/enum.Variance.html\" title=\"enum rustc_middle::ty::Variance\">Variance</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.from_cycle_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/values.rs.html#135-152\">source</a><a href=\"#method.from_cycle_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_query_system/values/trait.Value.html#tymethod.from_cycle_error\" class=\"fn\">from_cycle_error</a>(\n    tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;,\n    cycle_error: &amp;<a class=\"struct\" href=\"rustc_query_system/query/plumbing/struct.CycleError.html\" title=\"struct rustc_query_system::query::plumbing::CycleError\">CycleError</a>,\n    _guar: <a class=\"struct\" href=\"rustc_span/struct.ErrorGuaranteed.html\" title=\"struct rustc_span::ErrorGuaranteed\">ErrorGuaranteed</a>\n) -&gt; Self</h4></section></div></details>","Value<TyCtxt<'tcx>>","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+%5BT%5D%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-ZeroFrom%3C'zf,+%5BT%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, T&gt; ZeroFrom&lt;'zf, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, [T]>","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::used_crates::Value","rustc_middle::query::queries::used_crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"]],
"rustc_session":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"impl\"><a href=\"#impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;ZeroSlice&lt;T&gt;&gt; for &amp;[&lt;T as AsULE&gt;::ULE]<div class=\"where\">where\n    T: AsULE,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;ZeroSlice&lt;T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<ZeroSlice<T>>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4689\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4691\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CVarZeroSlice%3CT,+F%3E%3E-for-%26%5BE%5D\" class=\"impl\"><a href=\"#impl-EncodeAsVarULE%3CVarZeroSlice%3CT,+F%3E%3E-for-%26%5BE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E, F&gt; EncodeAsVarULE&lt;VarZeroSlice&lt;T, F&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[E]</a><div class=\"where\">where\n    T: VarULE + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: EncodeAsVarULE&lt;T&gt;,\n    F: VarZeroVecFormat,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding [<code>VarULE</code>] type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding [<code>VarULE</code>] type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of [<code>Self::encode_var_ule_len()</code>]</div></details></div></details>","EncodeAsVarULE<VarZeroSlice<T, F>>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CZeroSlice%3CT%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-EncodeAsVarULE%3CZeroSlice%3CT%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; EncodeAsVarULE&lt;ZeroSlice&lt;T&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: AsULE + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding [<code>VarULE</code>] type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding [<code>VarULE</code>] type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of [<code>Self::encode_var_ule_len()</code>]</div></details></div></details>","EncodeAsVarULE<ZeroSlice<T>>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#20\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#24\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data, T&gt; IntoParallelIterator for &amp;'data <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'data,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'data T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Iter</a> = Iter&lt;'data, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_par_iter</a>(self) -&gt; Iter&lt;'data, T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a>Read more</a></div></details></div></details>","IntoParallelIterator","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#81-83\">source</a></span><a href=\"#impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#86\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#90\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[U; N]>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Vec&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: Allocator,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#175\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#176\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_type_ir::visit::TypeVisitor::Result\">Result</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+%5BT%5D%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-ZeroFrom%3C'zf,+%5BT%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, T&gt; ZeroFrom&lt;'zf, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, [T]>","rustc_session::options::OptionDescrs"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()