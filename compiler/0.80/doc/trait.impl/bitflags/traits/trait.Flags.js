(function() {var implementors = {
"rustc_abi":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_abi/struct.ReprFlags.html\" title=\"struct rustc_abi::ReprFlags\">ReprFlags</a>"]],
"rustc_ast":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_ast/ast/struct.InlineAsmOptions.html\" title=\"struct rustc_ast::ast::InlineAsmOptions\">InlineAsmOptions</a>"]],
"rustc_codegen_llvm":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_codegen_llvm/llvm_/ffi/debuginfo/struct.DIFlags.html\" title=\"struct rustc_codegen_llvm::llvm_::ffi::debuginfo::DIFlags\">DIFlags</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_codegen_llvm/llvm_/ffi/debuginfo/struct.DISPFlags.html\" title=\"struct rustc_codegen_llvm::llvm_::ffi::debuginfo::DISPFlags\">DISPFlags</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_codegen_llvm/llvm_/ffi/struct.AllocKindFlags.html\" title=\"struct rustc_codegen_llvm::llvm_::ffi::AllocKindFlags\">AllocKindFlags</a>"]],
"rustc_codegen_ssa":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_codegen_ssa/struct.MemFlags.html\" title=\"struct rustc_codegen_ssa::MemFlags\">MemFlags</a>"]],
"rustc_data_structures":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_data_structures/profiling/struct.EventFilter.html\" title=\"struct rustc_data_structures::profiling::EventFilter\">EventFilter</a>"]],
"rustc_metadata":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_metadata/rmeta/struct.AttrFlags.html\" title=\"struct rustc_metadata::rmeta::AttrFlags\">AttrFlags</a>"]],
"rustc_middle":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_middle/middle/codegen_fn_attrs/struct.CodegenFnAttrFlags.html\" title=\"struct rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags\">CodegenFnAttrFlags</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_middle/ty/adt/struct.AdtFlags.html\" title=\"struct rustc_middle::ty::adt::AdtFlags\">AdtFlags</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.VariantFlags.html\" title=\"struct rustc_middle::ty::VariantFlags\">VariantFlags</a>"]],
"rustc_parse":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_parse/parser/struct.Restrictions.html\" title=\"struct rustc_parse::parser::Restrictions\">Restrictions</a>"]],
"rustc_sanitizers":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/1.3.2/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_sanitizers/cfi/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_sanitizers::cfi::typeid::TypeIdOptions\">TypeIdOptions</a>"]],
"rustc_session":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_session/config/struct.RemapPathScopeComponents.html\" title=\"struct rustc_session::config::RemapPathScopeComponents\">RemapPathScopeComponents</a>"]],
"rustc_target":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_target/abi/call/attr_impl/struct.ArgAttribute.html\" title=\"struct rustc_target::abi::call::attr_impl::ArgAttribute\">ArgAttribute</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_target/spec/struct.LinkSelfContainedComponents.html\" title=\"struct rustc_target::spec::LinkSelfContainedComponents\">LinkSelfContainedComponents</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_target/spec/struct.LinkerFeatures.html\" title=\"struct rustc_target::spec::LinkerFeatures\">LinkerFeatures</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_target/spec/struct.SanitizerSet.html\" title=\"struct rustc_target::spec::SanitizerSet\">SanitizerSet</a>"]],
"rustc_type_ir":[["impl <a class=\"trait\" href=\"https://docs.rs/bitflags/2.5.0/bitflags/traits/trait.Flags.html\" title=\"trait bitflags::traits::Flags\">Flags</a> for <a class=\"struct\" href=\"rustc_type_ir/flags/struct.TypeFlags.html\" title=\"struct rustc_type_ir::flags::TypeFlags\">TypeFlags</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()