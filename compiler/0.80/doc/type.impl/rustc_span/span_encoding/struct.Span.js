(function() {var type_impls = {
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#impl-Clone-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1306\">source</a><a href=\"#impl-Debug-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1307\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1258\">source</a><a href=\"#impl-Decodable%3CD%3E-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_span/trait.SpanDecoder.html\" title=\"trait rustc_span::SpanDecoder\">SpanDecoder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1259\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></div></details>","Decodable<D>","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1101\">source</a><a href=\"#impl-Default-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1102\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1160\">source</a><a href=\"#impl-Encodable%3CE%3E-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"rustc_span/trait.SpanEncoder.html\" title=\"trait rustc_span::SpanEncoder\">SpanEncoder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1161\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable<E>","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#impl-Hash-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#2473-2475\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a><div class=\"where\">where\n    CTX: <a class=\"trait\" href=\"rustc_span/trait.HashStableContext.html\" title=\"trait rustc_span::HashStableContext\">HashStableContext</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#2487\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Hashes a span in a stable way. We can’t directly hash the span’s <code>BytePos</code>\nfields (that would be similar to hashing pointers, since those are just\noffsets into the <code>SourceMap</code>). Instead, we hash the (file name, line, column)\ntriple, which stays the same even if the containing <code>SourceFile</code> has moved\nwithin the <code>SourceMap</code>.</p>\n<p>Also note that we are hashing byte offsets for the column, not unicode\ncodepoint offsets. For the purpose of the hash that’s sufficient.\nAlso, hashing filenames is expensive so we avoid doing it twice when the\nspan starts and ends in the same file, which is almost always the case.</p>\n</div></details></div></details>","HashStable<CTX>","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#534\">source</a><a href=\"#impl-Ord-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#535\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#855-857\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#876-878\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterizedOverTcx-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/parameterized.rs.html#52-111\">source</a><a href=\"#impl-ParameterizedOverTcx-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" class=\"associatedtype\">Value</a>&lt;'tcx&gt; = <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></div></details>","ParameterizedOverTcx","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#impl-PartialEq-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#529\">source</a><a href=\"#impl-PartialOrd-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#530\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefDecodable%3C'tcx,+D%3E-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#535-543\">source</a><a href=\"#impl-RefDecodable%3C'tcx,+D%3E-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyDecoder.html\" title=\"trait rustc_middle::ty::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_middle/ty/codec/trait.RefDecodable.html\" title=\"trait rustc_middle::ty::codec::RefDecodable\">RefDecodable</a>&lt;'tcx, D&gt; for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#535-543\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/codec/trait.RefDecodable.html#tymethod.decode\" class=\"fn\">decode</a>(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'tcx Self</a></h4></section></div></details>","RefDecodable<'tcx, D>","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/hygiene.rs.html#899\">source</a><a href=\"#impl-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mark_with_reason\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/hygiene.rs.html#902-908\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.mark_with_reason\" class=\"fn\">mark_with_reason</a>(\n    self,\n    allow_internal_unstable: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/data_structures/struct.Lrc.html\" title=\"struct rustc_middle::ty::data_structures::Lrc\">Arc</a>&lt;[<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>]&gt;&gt;,\n    reason: <a class=\"enum\" href=\"rustc_span/hygiene/enum.DesugaringKind.html\" title=\"enum rustc_span::hygiene::DesugaringKind\">DesugaringKind</a>,\n    edition: <a class=\"enum\" href=\"rustc_span/edition/enum.Edition.html\" title=\"enum rustc_span::edition::Edition\">Edition</a>,\n    ctx: impl <a class=\"trait\" href=\"rustc_span/trait.HashStableContext.html\" title=\"trait rustc_span::HashStableContext\">HashStableContext</a>,\n) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Reuses the span but adds information like the kind of the desugaring and features that are\nallowed inside this span.</p>\n</div></details></div></details>",0,"rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#540\">source</a><a href=\"#impl-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.lo\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#542\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.lo\" class=\"fn\">lo</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a></h4></section><section id=\"method.with_lo\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#546\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_lo\" class=\"fn\">with_lo</a>(self, lo: <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.hi\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#550\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.hi\" class=\"fn\">hi</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a></h4></section><section id=\"method.with_hi\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#554\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_hi\" class=\"fn\">with_hi</a>(self, hi: <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.with_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#558\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_ctxt\" class=\"fn\">with_ctxt</a>(self, ctxt: <a class=\"struct\" href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\">SyntaxContext</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.is_visible\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#563\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.is_visible\" class=\"fn\">is_visible</a>(self, sm: &amp;<a class=\"struct\" href=\"rustc_span/source_map/struct.SourceMap.html\" title=\"struct rustc_span::source_map::SourceMap\">SourceMap</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_expansion\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#569\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.from_expansion\" class=\"fn\">from_expansion</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this span comes from any kind of macro, desugaring or inlining.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_derive_expansion\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#574\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.in_derive_expansion\" class=\"fn\">in_derive_expansion</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>span</code> originates in a derive-macro’s expansion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_be_used_for_suggestions\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#579\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.can_be_used_for_suggestions\" class=\"fn\">can_be_used_for_suggestions</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Gate suggestions that would not be appropriate in a context the user didn’t write.</p>\n</div></details><section id=\"method.with_root_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#589\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_root_ctxt\" class=\"fn\">with_root_ctxt</a>(lo: <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a>, hi: <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_lo\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#595\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.shrink_to_lo\" class=\"fn\">shrink_to_lo</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns a new span representing an empty span at the beginning of this span.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_hi\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#601\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.shrink_to_hi\" class=\"fn\">shrink_to_hi</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns a new span representing an empty span at the end of this span.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#608\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>hi == lo</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.substitute_dummy\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#614\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.substitute_dummy\" class=\"fn\">substitute_dummy</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>self</code> if <code>self</code> is not the dummy span, and <code>other</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#619\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.contains\" class=\"fn\">contains</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> fully encloses <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overlaps\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#626\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.overlaps\" class=\"fn\">overlaps</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> touches <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overlaps_or_adjacent\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#633\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.overlaps_or_adjacent\" class=\"fn\">overlaps_or_adjacent</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> touches or adjoins <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#643\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.source_equal\" class=\"fn\">source_equal</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the spans are equal with regards to the source text.</p>\n<p>Use this instead of <code>==</code> when either span could be generated code,\nand you only care that they point to the same bytes of source text.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trim_start\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#650\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.trim_start\" class=\"fn\">trim_start</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(span)</code>, where the start is trimmed by the end of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trim_end\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#657\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.trim_end\" class=\"fn\">trim_end</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(span)</code>, where the end is trimmed by the start of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source_callsite\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#665\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.source_callsite\" class=\"fn\">source_callsite</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns the source span – this is either the supplied span, or the span for\nthe macro callsite that expanded to it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_callsite\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#672\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.parent_callsite\" class=\"fn\">parent_callsite</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The <code>Span</code> for the tokens in the previous macro expansion from which <code>self</code> was generated,\nif any.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_ancestor_inside\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#684\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.find_ancestor_inside\" class=\"fn\">find_ancestor_inside</a>(self, outer: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Walk down the expansion ancestors to find a span that’s contained within <code>outer</code>.</p>\n<p>The span returned by this method may have a different <a href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\"><code>SyntaxContext</code></a> as <code>outer</code>.\nIf you need to extend the span, use <a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_inside_same_ctxt\" title=\"method rustc_span::span_encoding::Span::find_ancestor_inside_same_ctxt\"><code>find_ancestor_inside_same_ctxt</code></a> instead,\nbecause joining spans with different syntax contexts can create unexpected results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_ancestor_in_same_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#701\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.find_ancestor_in_same_ctxt\" class=\"fn\">find_ancestor_in_same_ctxt</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Walk down the expansion ancestors to find a span with the same <a href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\"><code>SyntaxContext</code></a> as\n<code>other</code>.</p>\n<p>Like <a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_inside_same_ctxt\" title=\"method rustc_span::span_encoding::Span::find_ancestor_inside_same_ctxt\"><code>find_ancestor_inside_same_ctxt</code></a>, but specifically for when spans might not\noverlap. Take care when using this, and prefer <a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_inside\" title=\"method rustc_span::span_encoding::Span::find_ancestor_inside\"><code>find_ancestor_inside</code></a> or\n<a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_inside_same_ctxt\" title=\"method rustc_span::span_encoding::Span::find_ancestor_inside_same_ctxt\"><code>find_ancestor_inside_same_ctxt</code></a> when you know that the spans are nested (modulo\nmacro expansion).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_ancestor_inside_same_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#717\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.find_ancestor_inside_same_ctxt\" class=\"fn\">find_ancestor_inside_same_ctxt</a>(self, outer: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Walk down the expansion ancestors to find a span that’s contained within <code>outer</code> and\nhas the same <a href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\"><code>SyntaxContext</code></a> as <code>outer</code>.</p>\n<p>This method is the combination of <a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_inside\" title=\"method rustc_span::span_encoding::Span::find_ancestor_inside\"><code>find_ancestor_inside</code></a> and\n<a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_in_same_ctxt\" title=\"method rustc_span::span_encoding::Span::find_ancestor_in_same_ctxt\"><code>find_ancestor_in_same_ctxt</code></a> and should be preferred when extending the returned span.\nIf you do not need to modify the span, use <a href=\"rustc_span/span_encoding/struct.Span.html#method.find_ancestor_inside\" title=\"method rustc_span::span_encoding::Span::find_ancestor_inside\"><code>find_ancestor_inside</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_oldest_ancestor_in_same_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#753\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.find_oldest_ancestor_in_same_ctxt\" class=\"fn\">find_oldest_ancestor_in_same_ctxt</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Recursively walk down the expansion ancestors to find the oldest ancestor span with the same\n<a href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\"><code>SyntaxContext</code></a> the initial span.</p>\n<p>This method is suitable for peeling through <em>local</em> macro expansions to find the “innermost”\nspan that is still local and shares the same <a href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\"><code>SyntaxContext</code></a>. For example, given</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code> <span class=\"macro\">macro_rules!</span> outer {\n     (<span class=\"macro-nonterminal\">$x</span>: expr) =&gt; {\n         <span class=\"macro\">inner!</span>(<span class=\"macro-nonterminal\">$x</span>)\n     }\n }\n\n <span class=\"macro\">macro_rules!</span> inner {\n     (<span class=\"macro-nonterminal\">$x</span>: expr) =&gt; {\n         <span class=\"macro\">format!</span>(<span class=\"string\">\"error: {}\"</span>, <span class=\"macro-nonterminal\">$x</span>)\n         <span class=\"comment\">//~^ ERROR mismatched types\n     </span>}\n }\n\n <span class=\"kw\">fn </span>bar(x: <span class=\"kw-2\">&amp;</span>str) -&gt; <span class=\"prelude-ty\">Result</span>&lt;(), Box&lt;<span class=\"kw\">dyn </span>std::error::Error&gt;&gt; {\n     <span class=\"prelude-val\">Err</span>(<span class=\"macro\">outer!</span>(x))\n }</code></pre></div>\n<p>if provided the initial span of <code>outer!(x)</code> inside <code>bar</code>, this method will recurse\nthe parent callsites until we reach <code>format!(\"error: {}\", $x)</code>, at which point it is the\noldest ancestor span that is both still local and shares the same <a href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\"><code>SyntaxContext</code></a> as the\ninitial span.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edition\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#764\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.edition\" class=\"fn\">edition</a>(self) -&gt; <a class=\"enum\" href=\"rustc_span/edition/enum.Edition.html\" title=\"enum rustc_span::edition::Edition\">Edition</a></h4></section></summary><div class=\"docblock\"><p>Edition of the crate from which this span came.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_rust_2015\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#770\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.is_rust_2015\" class=\"fn\">is_rust_2015</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Is this edition 2015?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_least_rust_2018\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#776\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.at_least_rust_2018\" class=\"fn\">at_least_rust_2018</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Are we allowed to use features from the Rust 2018 edition?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_least_rust_2021\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#782\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.at_least_rust_2021\" class=\"fn\">at_least_rust_2021</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Are we allowed to use features from the Rust 2021 edition?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_least_rust_2024\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#788\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.at_least_rust_2024\" class=\"fn\">at_least_rust_2024</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Are we allowed to use features from the Rust 2024 edition?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source_callee\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#797\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.source_callee\" class=\"fn\">source_callee</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnData.html\" title=\"struct rustc_span::hygiene::ExpnData\">ExpnData</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the source callee.</p>\n<p>Returns <code>None</code> if the supplied span has no expansion trace,\nelse returns the <code>ExpnData</code> for the macro definition\ncorresponding to the source callsite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allows_unstable\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#811\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.allows_unstable\" class=\"fn\">allows_unstable</a>(self, feature: <a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if a span is “internal” to a macro in which <code>#[unstable]</code>\nitems can be used (that is, a macro marked with\n<code>#[allow_internal_unstable]</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_desugaring\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#819\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.is_desugaring\" class=\"fn\">is_desugaring</a>(self, kind: <a class=\"enum\" href=\"rustc_span/hygiene/enum.DesugaringKind.html\" title=\"enum rustc_span::hygiene::DesugaringKind\">DesugaringKind</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if this span arises from a compiler desugaring of kind <code>kind</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.desugaring_kind\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#828\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.desugaring_kind\" class=\"fn\">desugaring_kind</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"rustc_span/hygiene/enum.DesugaringKind.html\" title=\"enum rustc_span::hygiene::DesugaringKind\">DesugaringKind</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the compiler desugaring that created this span, or <code>None</code>\nif this span is not from a desugaring.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allows_unsafe\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#838\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.allows_unsafe\" class=\"fn\">allows_unsafe</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if a span is “internal” to a macro in which <code>unsafe</code>\ncan be used without triggering the <code>unsafe_code</code> lint.\n(that is, a macro marked with <code>#[allow_internal_unsafe]</code>).</p>\n</div></details><section id=\"method.macro_backtrace\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#842\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.macro_backtrace\" class=\"fn\">macro_backtrace</a>(self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnData.html\" title=\"struct rustc_span::hygiene::ExpnData\">ExpnData</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_at\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#866\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.split_at\" class=\"fn\">split_at</a>(self, pos: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>, <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>)</h4></section></summary><div class=\"docblock\"><p>Splits a span into two composite spans around a certain position.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_neighbor\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#938\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_neighbor\" class=\"fn\">with_neighbor</a>(self, neighbor: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>This span, but in a larger context, may switch to the metavariable span if suitable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#955\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.to\" class=\"fn\">to</a>(self, end: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns a <code>Span</code> that would enclose both <code>self</code> and <code>end</code>.</p>\n<p>Note that this can also be used to extend the span “backwards”:\n<code>start.to(end)</code> and <code>end.to(start)</code> return the same <code>Span</code>.</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>    ____             ___\n    self lorem ipsum end\n    ^^^^^^^^^^^^^^^^^^^^\n</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.between\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#971\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.between\" class=\"fn\">between</a>(self, end: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns a <code>Span</code> between the end of <code>self</code> to the beginning of <code>end</code>.</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>    ____             ___\n    self lorem ipsum end\n        ^^^^^^^^^^^^^\n</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.until\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#987\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.until\" class=\"fn\">until</a>(self, end: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Returns a <code>Span</code> from the beginning of <code>self</code> until the beginning of <code>end</code>.</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>    ____             ___\n    self lorem ipsum end\n    ^^^^^^^^^^^^^^^^^\n</code></pre></div></div></details><section id=\"method.from_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#996\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(self, inner: <a class=\"struct\" href=\"rustc_span/struct.InnerSpan.html\" title=\"struct rustc_span::InnerSpan\">InnerSpan</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_def_site_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1008\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_def_site_ctxt\" class=\"fn\">with_def_site_ctxt</a>(self, expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Equivalent of <code>Span::def_site</code> from the proc macro API,\nexcept that the location is taken from the <code>self</code> span.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_call_site_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_call_site_ctxt\" class=\"fn\">with_call_site_ctxt</a>(self, expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Equivalent of <code>Span::call_site</code> from the proc macro API,\nexcept that the location is taken from the <code>self</code> span.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_mixed_site_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1020\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_mixed_site_ctxt\" class=\"fn\">with_mixed_site_ctxt</a>(self, expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class=\"docblock\"><p>Equivalent of <code>Span::mixed_site</code> from the proc macro API,\nexcept that the location is taken from the <code>self</code> span.</p>\n</div></details><section id=\"method.apply_mark\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1032\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.apply_mark\" class=\"fn\">apply_mark</a>(self, expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>, transparency: <a class=\"enum\" href=\"rustc_span/hygiene/enum.Transparency.html\" title=\"enum rustc_span::hygiene::Transparency\">Transparency</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.remove_mark\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1037\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.remove_mark\" class=\"fn\">remove_mark</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a></h4></section><section id=\"method.adjust\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1047\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.adjust\" class=\"fn\">adjust</a>(&amp;mut self, expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>&gt;</h4></section><section id=\"method.normalize_to_macros_2_0_and_adjust\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1057\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.normalize_to_macros_2_0_and_adjust\" class=\"fn\">normalize_to_macros_2_0_and_adjust</a>(\n    &amp;mut self,\n    expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>&gt;</h4></section><section id=\"method.glob_adjust\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1067\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.glob_adjust\" class=\"fn\">glob_adjust</a>(\n    &amp;mut self,\n    expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>,\n    glob_span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>&gt;&gt;</h4></section><section id=\"method.reverse_glob_adjust\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1077-1081\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.reverse_glob_adjust\" class=\"fn\">reverse_glob_adjust</a>(\n    &amp;mut self,\n    expn_id: <a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>,\n    glob_span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/hygiene/struct.ExpnId.html\" title=\"struct rustc_span::hygiene::ExpnId\">ExpnId</a>&gt;&gt;</h4></section><section id=\"method.normalize_to_macros_2_0\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1091\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.normalize_to_macros_2_0\" class=\"fn\">normalize_to_macros_2_0</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.normalize_to_macro_rules\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/lib.rs.html#1096\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.normalize_to_macro_rules\" class=\"fn\">normalize_to_macro_rules</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></div></details>",0,"rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#248\">source</a><a href=\"#impl-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#250-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.new\" class=\"fn\">new</a>(\n    lo: <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a>,\n    hi: <a class=\"struct\" href=\"rustc_span/struct.BytePos.html\" title=\"struct rustc_span::BytePos\">BytePos</a>,\n    ctxt: <a class=\"struct\" href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\">SyntaxContext</a>,\n    parent: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.data\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#287\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.data\" class=\"fn\">data</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/struct.SpanData.html\" title=\"struct rustc_span::SpanData\">SpanData</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_untracked\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#298\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.data_untracked\" class=\"fn\">data_untracked</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/struct.SpanData.html\" title=\"struct rustc_span::SpanData\">SpanData</a></h4></section></summary><div class=\"docblock\"><p>Internal function to translate between an encoded span and the expanded representation.\nThis function must not be used outside the incremental engine.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dummy\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#310\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.is_dummy\" class=\"fn\">is_dummy</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this is a dummy span with any hygienic context.</p>\n</div></details><section id=\"method.map_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#326\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.map_ctxt\" class=\"fn\">map_ctxt</a>(self, map: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\">SyntaxContext</a>) -&gt; <a class=\"struct\" href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\">SyntaxContext</a>) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#366\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.ctxt\" class=\"fn\">ctxt</a>(self) -&gt; <a class=\"struct\" href=\"rustc_span/hygiene/struct.SyntaxContext.html\" title=\"struct rustc_span::hygiene::SyntaxContext\">SyntaxContext</a></h4></section></summary><div class=\"docblock\"><p>This function is used as a fast path when decoding the full <code>SpanData</code> is not necessary.\nIt’s a cut-down version of <code>data_untracked</code>.</p>\n</div></details><section id=\"method.eq_ctxt\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#372\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.eq_ctxt\" class=\"fn\">eq_ctxt</a>(self, other: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.with_parent\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#385\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.with_parent\" class=\"fn\">with_parent</a>(self, parent: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section><section id=\"method.parent\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#415\">source</a><h4 class=\"code-header\">pub fn <a href=\"rustc_span/span_encoding/struct.Span.html#tymethod.parent\" class=\"fn\">parent</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>&gt;</h4></section></div></details>",0,"rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#222-262\">source</a><a href=\"#impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#222-262\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_middle/ty/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#222-262\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self</h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<TyCtxt<'tcx>>","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#222-262\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#222-262\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_middle::ty::TypeVisitor::Result\">Result</a></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<TyCtxt<'tcx>>","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<section id=\"impl-Copy-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#impl-Copy-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section>","Copy","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<section id=\"impl-Eq-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#impl-Eq-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section>","Eq","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"],["<section id=\"impl-StructuralPartialEq-for-Span\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_span/span_encoding.rs.html#82\">source</a><a href=\"#impl-StructuralPartialEq-for-Span\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h3></section>","StructuralPartialEq","rustc_middle::query::queries::source_span::Value","rustc_middle::query::queries::source_span::ProvidedValue","rustc_middle::query::queries::def_span::Value","rustc_middle::query::queries::def_span::ProvidedValue"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()