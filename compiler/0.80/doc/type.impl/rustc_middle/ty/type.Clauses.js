(function() {var type_impls = {
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Flags-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#961-969\">source</a><a href=\"#impl-Flags-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_type_ir/visit/trait.Flags.html\" title=\"trait rustc_type_ir::visit::Flags\">Flags</a> for <a class=\"type\" href=\"rustc_middle/ty/type.Clauses.html\" title=\"type rustc_middle::ty::Clauses\">Clauses</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.flags\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#962-964\">source</a><a href=\"#method.flags\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.Flags.html#tymethod.flags\" class=\"fn\">flags</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.TypeFlags.html\" title=\"struct rustc_middle::ty::TypeFlags\">TypeFlags</a></h4></section><section id=\"method.outer_exclusive_binder\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#966-968\">source</a><a href=\"#method.outer_exclusive_binder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.Flags.html#tymethod.outer_exclusive_binder\" class=\"fn\">outer_exclusive_binder</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.DebruijnIndex.html\" title=\"struct rustc_middle::ty::DebruijnIndex\">DebruijnIndex</a></h4></section></div></details>","Flags","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Key","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Value","rustc_middle::query::queries::reveal_opaque_types_in_bounds::LocalKey","rustc_middle::query::queries::reveal_opaque_types_in_bounds::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#443-449\">source</a><a href=\"#impl-Key-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"type\" href=\"rustc_middle/ty/type.Clauses.html\" title=\"type rustc_middle::ty::Clauses\">Clauses</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Cache\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Cache\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/keys/trait.Key.html#associatedtype.Cache\" class=\"associatedtype\">Cache</a>&lt;V&gt; = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCache.html\" title=\"struct rustc_query_system::query::caches::DefaultCache\">DefaultCache</a>&lt;&amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.RawList.html\" title=\"struct rustc_middle::ty::list::RawList\">RawList</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/list/struct.TypeInfo.html\" title=\"struct rustc_middle::ty::list::TypeInfo\">TypeInfo</a>, <a class=\"struct\" href=\"rustc_middle/ty/predicate/struct.Clause.html\" title=\"struct rustc_middle::ty::predicate::Clause\">Clause</a>&lt;'tcx&gt;&gt;, V&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#446-448\">source</a><a href=\"#method.default_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, _: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#40-42\">source</a><a href=\"#method.key_as_def_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_def_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_def_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_def_id\" class=\"fn\">ty_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Key","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Value","rustc_middle::query::queries::reveal_opaque_types_in_bounds::LocalKey","rustc_middle::query::queries::reveal_opaque_types_in_bounds::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#537-544\">source</a><a href=\"#impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"type\" href=\"rustc_middle/ty/type.Clauses.html\" title=\"type rustc_middle::ty::Clauses\">Clauses</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#538-543\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_middle/ty/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#90\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<TyCtxt<'tcx>>","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Key","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Value","rustc_middle::query::queries::reveal_opaque_types_in_bounds::LocalKey","rustc_middle::query::queries::reveal_opaque_types_in_bounds::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeSuperVisitable%3CTyCtxt%3C'tcx%3E%3E-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#531-535\">source</a><a href=\"#impl-TypeSuperVisitable%3CTyCtxt%3C'tcx%3E%3E-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeSuperVisitable.html\" title=\"trait rustc_middle::ty::TypeSuperVisitable\">TypeSuperVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"type\" href=\"rustc_middle/ty/type.Clauses.html\" title=\"type rustc_middle::ty::Clauses\">Clauses</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.super_visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#532-534\">source</a><a href=\"#method.super_visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeSuperVisitable.html#tymethod.super_visit_with\" class=\"fn\">super_visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    &amp;self,\n    visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>,\n) -&gt; V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_middle::ty::TypeVisitor::Result\">Result</a></h4></section></summary><div class='docblock'>Provides a default visit for a recursive type of interest. This should\nonly be called within <code>TypeVisitor</code> methods, when a non-custom\ntraversal is desired for the value of the type of interest passed to\nthat method. For example, in <code>MyVisitor::visit_ty(ty)</code>, it is valid to\ncall <code>ty.super_visit_with(self)</code>, but any other visiting should be done\nwith <code>xyz.visit_with(self)</code>.</div></details></div></details>","TypeSuperVisitable<TyCtxt<'tcx>>","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Key","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Value","rustc_middle::query::queries::reveal_opaque_types_in_bounds::LocalKey","rustc_middle::query::queries::reveal_opaque_types_in_bounds::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#525-529\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-%26RawList%3CTypeInfo,+Clause%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"type\" href=\"rustc_middle/ty/type.Clauses.html\" title=\"type rustc_middle::ty::Clauses\">Clauses</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#526-528\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_middle::ty::TypeVisitor::Result\">Result</a></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<TyCtxt<'tcx>>","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Key","rustc_middle::query::queries::reveal_opaque_types_in_bounds::Value","rustc_middle::query::queries::reveal_opaque_types_in_bounds::LocalKey","rustc_middle::query::queries::reveal_opaque_types_in_bounds::ProvidedValue"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()