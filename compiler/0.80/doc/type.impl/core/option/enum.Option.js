(function() {var type_impls = {
"rustc_errors":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#99\">source</a><a href=\"#impl-AsULE-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" class=\"associatedtype\">ULE</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#101\">source</a><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\" class=\"fn\">to_unaligned</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#105\">source</a><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\" class=\"fn\">from_unaligned</a>(other: <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\">Read more</a></div></details></div></details>","AsULE","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2038-2040\">source</a></span><a href=\"#impl-Clone-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2043\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2051\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Debug-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#373\">source</a><a href=\"#impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#374\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","Decodable<D>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2060\">source</a></span><a href=\"#impl-Default-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2070\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>opt: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = Option::default();\n<span class=\"macro\">assert!</span>(opt.is_none());</code></pre></div>\n</div></details></div></details>","Default","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#927-929\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#931-933\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DummyAstNode-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1699\">source</a><a href=\"#impl-DummyAstNode-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/mut_visit/trait.DummyAstNode.html\" title=\"trait rustc_ast::mut_visit::DummyAstNode\">DummyAstNode</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dummy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1700\">source</a><a href=\"#method.dummy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/mut_visit/trait.DummyAstNode.html#tymethod.dummy\" class=\"fn\">dummy</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","DummyAstNode","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#361\">source</a><a href=\"#impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_serialize/serialize.rs.html#362\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></div></details>","Encodable<S>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#206-209\">source</a><a href=\"#impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;<a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionVarULE.html\" title=\"struct zerovec::ule::option::OptionVarULE\">OptionVarULE</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#211\">source</a><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\" class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#217\">source</a><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#228\">source</a><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_write\" class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" title=\"method zerovec::ule::encode::EncodeAsVarULE::encode_var_ule_len::encode_var_ule_len\"><code>Self::encode_var_ule_len()</code></a></div></details></div></details>","EncodeAsVarULE<OptionVarULE<U>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2120\">source</a></span><a href=\"#impl-From%3CT%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2130\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Moves <code>val</code> into a new <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;u8&gt; = Option::from(<span class=\"number\">67</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">67</span>), o);</code></pre></div>\n</div></details></div></details>","From<T>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2411\">source</a></span><a href=\"#impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2473\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nno further elements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is\nreturned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> occur, a container of type\n<code>V</code> containing the values of each <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a> is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Here is an example which increments every integer in a vector.\nWe use the checked variant of <code>add</code> that returns <code>None</code> when the\ncalculation would result in an overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">0_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_add(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">Some</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));</code></pre></div>\n<p>As you can see, this will return the expected, valid items.</p>\n<p>Here is another example that tries to subtract one from another list\nof integers, this time checking for underflow:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">2_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_sub(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Since the last element is zero, it would underflow. Thus, the resulting\nvalue is <code>None</code>.</p>\n<p>Here is a variation on the previous example, showing that no\nfurther elements are taken from <code>iter</code> after the first <code>None</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">3_u16</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>];\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>shared = <span class=\"number\">0</span>;\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| { shared += x; x.checked_sub(<span class=\"number\">2</span>) })\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(shared, <span class=\"number\">6</span>);</code></pre></div>\n<p>Since the third element caused an underflow, no further elements were taken,\nso the final value of <code>shared</code> is 6 (= <code>3 + 2 + 1</code>), not 16.</p>\n</div></details></div></details>","FromIterator<Option<A>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#173-176\">source</a><a href=\"#impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"docblock\"><p>Collect an arbitrary <code>Option</code>-wrapped collection.</p>\n<p>If any item is <code>None</code>, then all previous items collected are discarded,\nand it returns only <code>None</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#178-180\">source</a><a href=\"#method.from_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\" class=\"fn\">from_par_iter</a>&lt;I&gt;(par_iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of the collection from the parallel iterator <code>par_iter</code>. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\">Read more</a></div></details></div></details>","FromParallelIterator<Option<T>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2512\">source</a><a href=\"#impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2514\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(_: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual<Yeet<()>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2501\">source</a><a href=\"#impl-FromResidual-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2503\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(residual: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasAttrs-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#304\">source</a><a href=\"#impl-HasAttrs-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#305\">source</a><a href=\"#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"constant\">SUPPORTS_CUSTOM_INNER_ATTRS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::SUPPORTS_CUSTOM_INNER_ATTRS</h4></section></summary><div class='docblock'>This is <code>true</code> if this <code>HasAttrs</code> might support ‘custom’ (proc-macro) inner\nattributes. Attributes like <code>#![cfg]</code> and <code>#![cfg_attr]</code> are not\nconsidered ‘custom’ attributes. <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\">Read more</a></div></details><section id=\"method.attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#306\">source</a><a href=\"#method.attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.attrs\" class=\"fn\">attrs</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>]</h4></section><section id=\"method.visit_attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#309\">source</a><a href=\"#method.visit_attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.visit_attrs\" class=\"fn\">visit_attrs</a>(&amp;mut self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"struct\" href=\"https://docs.rs/thin-vec/0.2.13/thin_vec/struct.ThinVec.html\" title=\"struct thin_vec::ThinVec\">ThinVec</a>&lt;<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>&gt;))</h4></section></div></details>","HasAttrs","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasTokens-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#140\">source</a><a href=\"#impl-HasTokens-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#141\">source</a><a href=\"#method.tokens\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens\" class=\"fn\">tokens</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;</h4></section><section id=\"method.tokens_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#144\">source</a><a href=\"#method.tokens_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens_mut\" class=\"fn\">tokens_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;&gt;</h4></section></div></details>","HasTokens","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Hash-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#457-459\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#462\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2076\">source</a></span><a href=\"#impl-IntoIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2094\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a consuming iterator over the possibly contained value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"string\"</span>);\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"string\">\"string\"</span>]);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert!</span>(v.is_empty());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#26\">source</a><a href=\"#impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#30\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3C(T,+U)%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1857\">source</a><a href=\"#impl-Option%3C(T,+U)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U)</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0\">1.66.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1874\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unzip\" class=\"fn\">unzip</a>(self) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;)</h4></section></summary><div class=\"docblock\"><p>Unzips an option containing a tuple of two options.</p>\n<p>If <code>self</code> is <code>Some((a, b))</code> this method returns <code>(Some(a), Some(b))</code>.\nOtherwise, <code>(None, None)</code> is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"hi\"</span>));\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>::&lt;(u8, u32)&gt;;\n\n<span class=\"macro\">assert_eq!</span>(x.unzip(), (<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hi\"</span>)));\n<span class=\"macro\">assert_eq!</span>(y.unzip(), (<span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">None</span>));</code></pre></div>\n</div></details></div></details>",0,"rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#589\">source</a><a href=\"#impl-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#609\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some\" class=\"fn\">is_some</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some_and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#630\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some_and\" class=\"fn\">is_some_and</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> and the value inside of it matches a predicate.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#653\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none\" class=\"fn\">is_none</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> value.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none_or\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#676\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none_or\" class=\"fn\">is_none_or</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>is_none_or</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> or the value inside of it matches a predicate.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(is_none_or)]\n\n</span><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#710\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>\nwithout moving the <a href=\"../../std/string/struct.String.html\" title=\"String\"><code>String</code></a>. The <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map\" title=\"method core::option::Option::map\"><code>map</code></a> method takes the <code>self</code> argument by value,\nconsuming the original, so this technique uses <code>as_ref</code> to first take an <code>Option</code> to a\nreference to the value inside the original.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>text: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Hello, world!\"</span>.to_string());\n<span class=\"comment\">// First, cast `Option&lt;String&gt;` to `Option&lt;&amp;String&gt;` with `as_ref`,\n// then consume *that* with `map`, leaving `text` on the stack.\n</span><span class=\"kw\">let </span>text_length: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = text.as_ref().map(|s| s.len());\n<span class=\"macro\">println!</span>(<span class=\"string\">\"still can print text: {text:?}\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">match </span>x.as_mut() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#746\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_ref\" class=\"fn\">as_pin_ref</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#762\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_mut\" class=\"fn\">as_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#808\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice of the contained value, if any. If this is <code>None</code>, an\nempty slice is returned. This can be useful to have a single type of\niterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;T&gt;</code> and wish to get a slice of <code>T</code>,\nyou can unpack it via <code>opt.map_or(&amp;[], std::slice::from_ref)</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_slice(), <span class=\"prelude-val\">None</span>.as_slice()],\n    [<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;</span>[][..]],\n);</code></pre></div>\n<p>The inverse of this function is (discounting\nborrowing) <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first\" title=\"method slice::first\"><code>[_]::first</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">for </span>i <span class=\"kw\">in </span>[<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234_u16</span>), <span class=\"prelude-val\">None</span>] {\n    <span class=\"macro\">assert_eq!</span>(i.as_ref(), i.as_slice().first());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#863\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice of the contained value, if any. If this is\n<code>None</code>, an empty slice is returned. This can be useful to have a\nsingle type of iterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;mut T&gt;</code> instead of a\n<code>&amp;mut Option&lt;T&gt;</code>, which this method takes, you can obtain a mutable\nslice via <code>opt.map_or(&amp;mut [], std::slice::from_mut)</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_mut_slice(), <span class=\"prelude-val\">None</span>.as_mut_slice()],\n    [<span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;mut </span>[][..]],\n);</code></pre></div>\n<p>The result is a mutable slice of zero or one items that points into\nour original <code>Option</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>);\nx.as_mut_slice()[<span class=\"number\">0</span>] += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1235</span>));</code></pre></div>\n<p>The inverse of this method (discounting borrowing)\nis <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first_mut\" title=\"method slice::first_mut\"><code>[_]::first_mut</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">123</span>).as_mut_slice().first_mut(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">123</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#930\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.expect\" class=\"fn\">expect</a>(self, msg: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the value is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> with a custom panic message provided by\n<code>msg</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"value\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.expect(<span class=\"string\">\"fruits are healthy\"</span>), <span class=\"string\">\"value\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\nx.expect(<span class=\"string\">\"fruits are healthy\"</span>); <span class=\"comment\">// panics with `fruits are healthy`</span></code></pre></div>\n<h5 id=\"recommended-message-style\"><a class=\"doc-anchor\" href=\"#recommended-message-style\">§</a>Recommended Message Style</h5>\n<p>We recommend that <code>expect</code> messages are used to describe the reason you\n<em>expect</em> the <code>Option</code> should be <code>Some</code>.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>item = slice.get(<span class=\"number\">0</span>)\n    .expect(<span class=\"string\">\"slice should not be empty\"</span>);</code></pre></div>\n<p><strong>Hint</strong>: If you’re having trouble remembering how to phrase expect\nerror messages remember to focus on the word “should” as in “env\nvariable should be set by blah” or “the given binary should be available\nand executable by the current user”.</p>\n<p>For more detail on expect message styles and the reasoning behind our\nrecommendation please refer to the section on <a href=\"../../std/error/index.html#common-message-styles\">“Common Message\nStyles”</a> in the <a href=\"../../std/error/index.html\"><code>std::error</code></a> module docs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#967\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<p>Because this function may panic, its use is generally discouraged.\nInstead, prefer to use pattern matching and handle the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\ncase explicitly, or call <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or\" title=\"method core::option::Option::unwrap_or\"><code>unwrap_or</code></a>, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>, or\n<a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_default\" title=\"method core::option::Option::unwrap_or_default\"><code>unwrap_or_default</code></a>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the self value equals <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>); <span class=\"comment\">// fails</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#990\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or\" class=\"fn\">unwrap_or</a>(self, default: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a provided default.</p>\n<p>Arguments passed to <code>unwrap_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"car\"</span>).unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"car\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"bike\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1009-1011\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_else\" class=\"fn\">unwrap_or_else</a>&lt;F&gt;(self, f: F) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or computes it from a closure.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">10</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">20</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_default\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1040-1042\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_default\" class=\"fn\">unwrap_or_default</a>(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a default.</p>\n<p>Consumes the <code>self</code> argument then, if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, returns the contained\nvalue, otherwise if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, returns the <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" title=\"associated function core::default::Default::default\">default value</a> for that\ntype.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.unwrap_or_default(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(y.unwrap_or_default(), <span class=\"number\">12</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const unstable\">1.58.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1074\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_unchecked\" class=\"fn\">unwrap_unchecked</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value,\nwithout checking that the value is not <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Calling this method on <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is <em><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\">undefined behavior</a></em>.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>); <span class=\"comment\">// Undefined behavior!</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1105-1107\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a contained value (if <code>Some</code>) or returns <code>None</code> (if <code>None</code>).</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an\n<code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>, consuming the original:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>maybe_some_string = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, World!\"</span>));\n<span class=\"comment\">// `Option::map` takes self *by value*, consuming `maybe_some_string`\n</span><span class=\"kw\">let </span>maybe_some_len = maybe_some_string.map(|s| s.len());\n<span class=\"macro\">assert_eq!</span>(maybe_some_len, <span class=\"prelude-val\">Some</span>(<span class=\"number\">13</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map(|s| s.len()), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1135\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>),</div></h4></section></summary><div class=\"docblock\"><p>Calls a function with a reference to the contained value if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<p>Returns the original option.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>list = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n\n<span class=\"comment\">// prints \"got: 2\"\n</span><span class=\"kw\">let </span>x = list\n    .get(<span class=\"number\">1</span>)\n    .inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>))\n    .expect(<span class=\"string\">\"list should be long enough\"</span>);\n\n<span class=\"comment\">// prints nothing\n</span>list.get(<span class=\"number\">5</span>).inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1164-1166\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or\" class=\"fn\">map_or</a>&lt;U, F&gt;(self, default: U, f: F) -&gt; U<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Returns the provided default result (if none),\nor applies a function to the contained value (if any).</p>\n<p>Arguments passed to <code>map_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map_or_else\" title=\"method core::option::Option::map_or_else\"><code>map_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1209-1212\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or_else\" class=\"fn\">map_or_else</a>&lt;U, D, F&gt;(self, default: D, f: F) -&gt; U<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; U,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Computes a default function result (if none), or\napplies a different function to the contained value (if any).</p>\n<h5 id=\"basic-examples\"><a class=\"doc-anchor\" href=\"#basic-examples\">§</a>Basic examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">21</span>;\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n<h5 id=\"handling-a-result-based-fallback\"><a class=\"doc-anchor\" href=\"#handling-a-result-based-fallback\">§</a>Handling a Result-based fallback</h5>\n<p>A somewhat common occurrence when dealing with optional values\nin combination with <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a> is the case where one wants to invoke\na fallible fallback if the option is not present.  This example\nparses a command line argument (if present), or the contents of a file to\nan integer.  However, unlike accessing the command line argument, reading\nthe file is fallible, so it must be wrapped with <code>Ok</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v: u64 = std::env::args()\n   .nth(<span class=\"number\">1</span>)\n   .map_or_else(|| std::fs::read_to_string(<span class=\"string\">\"/etc/someconfig.conf\"</span>), <span class=\"prelude-val\">Ok</span>)<span class=\"question-mark\">?\n   </span>.parse()<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1243\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or\" class=\"fn\">ok_or</a>&lt;E&gt;(self, err: E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;</h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err)</code></a>.</p>\n<p>Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.ok_or_else\" title=\"method core::option::Option::ok_or_else\"><code>ok_or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1268-1270\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or_else\" class=\"fn\">ok_or_else</a>&lt;E, F&gt;(self, err: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; E,</div></h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err())</code></a>.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1294-1296\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref\" class=\"fn\">as_deref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to <code>Option&lt;&amp;T::Target&gt;</code>.</p>\n<p>Leaves the original Option in-place, creating a new one with a reference\nto the original one, additionally coercing the contents via <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\"><code>Deref</code></a>.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1320-1322\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref_mut\" class=\"fn\">as_deref_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to <code>Option&lt;&amp;mut T::Target&gt;</code>.</p>\n<p>Leaves the original <code>Option</code> in-place, creating a new one containing a mutable reference to\nthe inner type’s <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"associated type core::ops::deref::Deref::Target\"><code>Deref::Target</code></a> type.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref_mut().map(|x| {\n    x.make_ascii_uppercase();\n    x\n}), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"HEY\"</span>.to_owned().as_mut_str()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1348\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.Iter.html\" title=\"struct core::option::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the possibly contained value.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">4</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1369\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IterMut.html\" title=\"struct core::option::IterMut\">IterMut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable iterator over the possibly contained value.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"kw\">match </span>x.iter_mut().next() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter_mut().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1406\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and\" class=\"fn\">and</a>&lt;U&gt;(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>and</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.and_then\" title=\"method core::option::Option::and_then\"><code>and_then</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1445-1447\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and_then\" class=\"fn\">and_then</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>f</code> with the\nwrapped value and returns the result.</p>\n<p>Some languages call this operation flatmap.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>sq_then_to_string(x: u32) -&gt; <span class=\"prelude-ty\">Option</span>&lt;String&gt; {\n    x.checked_mul(x).map(|sq| sq.to_string())\n}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>.to_string()));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">1_000_000</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>); <span class=\"comment\">// overflowed!\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Often used to chain fallible operations that may return <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>arr_2d = [[<span class=\"string\">\"A0\"</span>, <span class=\"string\">\"A1\"</span>], [<span class=\"string\">\"B0\"</span>, <span class=\"string\">\"B1\"</span>]];\n\n<span class=\"kw\">let </span>item_0_1 = arr_2d.get(<span class=\"number\">0</span>).and_then(|row| row.get(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(item_0_1, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"A1\"</span>));\n\n<span class=\"kw\">let </span>item_2_0 = arr_2d.get(<span class=\"number\">2</span>).and_then(|row| row.get(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(item_2_0, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1481-1483\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>predicate</code>\nwith the wrapped value and returns:</p>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(t)</code></a> if <code>predicate</code> returns <code>true</code> (where <code>t</code> is the wrapped\nvalue), and</li>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>predicate</code> returns <code>false</code>.</li>\n</ul>\n<p>This function works similar to <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.filter\" title=\"method core::iter::traits::iterator::Iterator::filter\"><code>Iterator::filter()</code></a>. You can imagine\nthe <code>Option&lt;T&gt;</code> being an iterator over one or zero elements. <code>filter()</code>\nlets you decide which elements to keep.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>is_even(n: <span class=\"kw-2\">&amp;</span>i32) -&gt; bool {\n    n % <span class=\"number\">2 </span>== <span class=\"number\">0\n</span>}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>).filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).filter(is_even), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1522\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or\" class=\"fn\">or</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.or_else\" title=\"method core::option::Option::or_else\"><code>or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1544-1546\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or_else\" class=\"fn\">or_else</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise calls <code>f</code> and\nreturns the result.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>nobody() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">None </span>}\n<span class=\"kw\">fn </span>vikings() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>) }\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>).or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(nobody), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1577\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.xor\" class=\"fn\">xor</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> if exactly one of <code>self</code>, <code>optb</code> is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, otherwise returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1611\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option, then returns a mutable reference to it.</p>\n<p>If the option already contains a value, the old value is dropped.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.get_or_insert\" title=\"method core::option::Option::get_or_insert\"><code>Option::get_or_insert</code></a>, which doesn’t update the value if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>opt = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">1</span>);\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">2</span>);\n<span class=\"kw-2\">*</span>val = <span class=\"number\">3</span>;\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1640\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert\" class=\"fn\">get_or_insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.insert\" title=\"method core::option::Option::insert\"><code>Option::insert</code></a>, which updates the value even if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert(<span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_default\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1671-1673\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_default\" class=\"fn\">get_or_insert_default</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_get_or_insert_default</code>)</span></div></span></summary><div class=\"docblock\"><p>Inserts the default value into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_get_or_insert_default)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_default();\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">0</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_with\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1697-1699\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_with\" class=\"fn\">get_or_insert_with</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Inserts a value computed from <code>f</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nthen returns a mutable reference to the contained value.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_with(|| <span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, leaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> in its place.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_if\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1763-1765\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take_if\" class=\"fn\">take_if</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, but only if the predicate evaluates to\n<code>true</code> on a mutable reference to the value.</p>\n<p>In other words, replaces <code>self</code> with <code>None</code> if the predicate returns <code>true</code>.\nThis method operates similar to <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.take\" title=\"method core::option::Option::take\"><code>Option::take</code></a> but conditional.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw\">if </span><span class=\"kw-2\">*</span>v == <span class=\"number\">42 </span>{\n    <span class=\"kw-2\">*</span>v += <span class=\"number\">1</span>;\n    <span class=\"bool-val\">false\n</span>} <span class=\"kw\">else </span>{\n    <span class=\"bool-val\">false\n</span>});\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw-2\">*</span>v == <span class=\"number\">43</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0, const unstable\">1.31.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1790\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Replaces the actual value in the option by the value given in parameter,\nreturning the old value if present,\nleaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> in its place without deinitializing either one.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1810\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Zips <code>self</code> with another <code>Option</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some((s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hi\"</span>);\n<span class=\"kw\">let </span>z = <span class=\"prelude-val\">None</span>::&lt;u8&gt;;\n\n<span class=\"macro\">assert_eq!</span>(x.zip(y), <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"hi\"</span>)));\n<span class=\"macro\">assert_eq!</span>(x.zip(z), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_with\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1846-1848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip_with\" class=\"fn\">zip_with</a>&lt;U, F, R&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T, U) -&gt; R,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_zip</code>)</span></div></span></summary><div class=\"docblock\"><p>Zips <code>self</code> and another <code>Option</code> with function <code>f</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some(f(s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_zip)]\n\n#[derive(Debug, PartialEq)]\n</span><span class=\"kw\">struct </span>Point {\n    x: f64,\n    y: f64,\n}\n\n<span class=\"kw\">impl </span>Point {\n    <span class=\"kw\">fn </span>new(x: f64, y: f64) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self </span>{ x, y }\n    }\n}\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">17.5</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42.7</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.zip_with(y, Point::new), <span class=\"prelude-val\">Some</span>(Point { x: <span class=\"number\">17.5</span>, y: <span class=\"number\">42.7 </span>}));\n<span class=\"macro\">assert_eq!</span>(x.zip_with(<span class=\"prelude-val\">None</span>, Point::new), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2221\">source</a></span><a href=\"#impl-Ord-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2223\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#855-857\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#876-878\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2190\">source</a></span><a href=\"#impl-PartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2192\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2208\">source</a></span><a href=\"#impl-PartialOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2210\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#244-246\">source</a></span><a href=\"#impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#265-267\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the product of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This multiplies each number in a vector of strings,\nif a string could not be parsed the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n<span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Product<Option<U>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#99-101\">source</a><a href=\"#impl-Serialize-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#104-106\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableOrd-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#472\">source</a><a href=\"#impl-StableOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#473\">source</a><a href=\"#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"constant\">CAN_USE_UNSTABLE_SORT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::CAN_USE_UNSTABLE_SORT</h4></section><details class=\"toggle\" open><summary><section id=\"associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#476\">source</a><a href=\"#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"constant\">THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> = ()</h4></section></summary><div class='docblock'>Marker to ensure that implementors have carefully considered\nwhether their <code>Ord</code> implementation obeys this trait’s contract.</div></details></div></details>","StableOrd","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#214-216\">source</a></span><a href=\"#impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#235-237\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the sum of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This sums up the position of the character ‘a’ in a vector of strings,\nif a word did not have the character ‘a’ the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"great\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"good\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Sum<Option<U>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToJson-for-Option%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#86\">source</a><a href=\"#impl-ToJson-for-Option%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_json\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#87\">source</a><a href=\"#method.to_json\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_target/json/trait.ToJson.html#tymethod.to_json\" class=\"fn\">to_json</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.117/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a></h4></section></div></details>","ToJson","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Try-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2482\">source</a><a href=\"#impl-Try-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value produced by <code>?</code> when <em>not</em> short-circuiting.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Residual\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Residual\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" class=\"associatedtype\">Residual</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value passed to <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" title=\"associated function core::ops::try_trait::FromResidual::from_residual\"><code>FromResidual::from_residual</code></a>\nas part of <code>?</code> when short-circuiting. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_output\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2487\">source</a><a href=\"#method.from_output\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\" class=\"fn\">from_output</a>(output: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from its <code>Output</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.branch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2492\">source</a><a href=\"#method.branch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\" class=\"fn\">branch</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;, T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Used in <code>?</code> to decide whether the operator should produce a value\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Continue\" title=\"variant core::ops::control_flow::ControlFlow::Continue\"><code>ControlFlow::Continue</code></a>)\nor propagate a value back to the caller\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Break\" title=\"variant core::ops::control_flow::ControlFlow::Break\"><code>ControlFlow::Break</code></a>). <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\">Read more</a></div></details></div></details>","Try","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#258\">source</a><a href=\"#impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#259\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;F as <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_type_ir::fold::FallibleTypeFolder::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#90\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFolder.html\" title=\"trait rustc_type_ir::fold::TypeFolder\">TypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<I>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#149\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#150\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_type_ir::visit::TypeVisitor::Result\">Result</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnifyValue-for-Option%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#585\">source</a><a href=\"#impl-UnifyValue-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a></h4></section></summary><div class='docblock'>Defines the type to return when merging of two values fails.\nIf merging is infallible, use the special struct <code>NoError</code>\nfound in this crate, which unlocks various more convenient\nmethods on the unification table.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unify_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#588\">source</a><a href=\"#method.unify_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#tymethod.unify_values\" class=\"fn\">unify_values</a>(\n    a: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n    b: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Given two values, produce a new value that combines them.\nIf that is not possible, produce an error.</div></details></div></details>","UnifyValue","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#740\">source</a><a href=\"#impl-Value-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#741\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#93\">source</a><a href=\"#impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\" class=\"fn\">transform</a>(&amp;'a self) -&gt; &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\" class=\"fn\">transform_owned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\" class=\"fn\">make</a>(from: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\" class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\">Read more</a></div></details></div></details>","Yokeable<'a>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#98\">source</a><a href=\"#impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, C, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#99\">source</a><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html#tymethod.zero_from\" class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, Option<C>>","rustc_errors::markdown::parse::ParseResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/map/kv.rs.html#76-78\">source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\">ZeroVec</a>&lt;'a, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = &lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt; as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","rustc_errors::markdown::parse::ParseResult"],["<section id=\"impl-CloneableCart-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/yoke.rs.html#661\">source</a><a href=\"#impl-CloneableCart-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a>,</div></h3></section>","CloneableCart","rustc_errors::markdown::parse::ParseResult"],["<section id=\"impl-Copy-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Copy-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_errors::markdown::parse::ParseResult"],["<section id=\"impl-Eq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Eq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_errors::markdown::parse::ParseResult"],["<section id=\"impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2188\">source</a></span><a href=\"#impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section>","StructuralPartialEq","rustc_errors::markdown::parse::ParseResult"]],
"rustc_expand":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#99\">source</a><a href=\"#impl-AsULE-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" class=\"associatedtype\">ULE</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#101\">source</a><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\" class=\"fn\">to_unaligned</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#105\">source</a><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\" class=\"fn\">from_unaligned</a>(other: <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\">Read more</a></div></details></div></details>","AsULE","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2038-2040\">source</a></span><a href=\"#impl-Clone-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2043\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2051\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Debug-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#373\">source</a><a href=\"#impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#374\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","Decodable<D>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2060\">source</a></span><a href=\"#impl-Default-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2070\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>opt: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = Option::default();\n<span class=\"macro\">assert!</span>(opt.is_none());</code></pre></div>\n</div></details></div></details>","Default","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#927-929\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#931-933\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DummyAstNode-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1699\">source</a><a href=\"#impl-DummyAstNode-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/mut_visit/trait.DummyAstNode.html\" title=\"trait rustc_ast::mut_visit::DummyAstNode\">DummyAstNode</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dummy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1700\">source</a><a href=\"#method.dummy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/mut_visit/trait.DummyAstNode.html#tymethod.dummy\" class=\"fn\">dummy</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","DummyAstNode","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#361\">source</a><a href=\"#impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#362\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></div></details>","Encodable<S>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#206-209\">source</a><a href=\"#impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;<a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionVarULE.html\" title=\"struct zerovec::ule::option::OptionVarULE\">OptionVarULE</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#211\">source</a><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\" class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#217\">source</a><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#228\">source</a><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_write\" class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" title=\"method zerovec::ule::encode::EncodeAsVarULE::encode_var_ule_len::encode_var_ule_len\"><code>Self::encode_var_ule_len()</code></a></div></details></div></details>","EncodeAsVarULE<OptionVarULE<U>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Option%3CT%3E%3E-for-Option%3C%26T%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2136\">source</a></span><a href=\"#impl-From%3C%26Option%3CT%3E%3E-for-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2157\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(o: &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Converts an <code><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> into an <code><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>, preserving\nthe original. The <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map\" title=\"method core::option::Option::map\"><code>map</code></a> method takes the <code>self</code> argument by value, consuming the original,\nso this technique uses <code>from</code> to first take an <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a> to a reference\nto the value inside the original.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>s: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, Rustaceans!\"</span>));\n<span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = Option::from(<span class=\"kw-2\">&amp;</span>s).map(|ss: <span class=\"kw-2\">&amp;</span>String| ss.len());\n\n<span class=\"macro\">println!</span>(<span class=\"string\">\"Can still print s: {s:?}\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(o, <span class=\"prelude-val\">Some</span>(<span class=\"number\">18</span>));</code></pre></div>\n</div></details></div></details>","From<&'a Option<T>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2120\">source</a></span><a href=\"#impl-From%3CT%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2130\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Moves <code>val</code> into a new <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;u8&gt; = Option::from(<span class=\"number\">67</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">67</span>), o);</code></pre></div>\n</div></details></div></details>","From<T>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2411\">source</a></span><a href=\"#impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2473\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nno further elements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is\nreturned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> occur, a container of type\n<code>V</code> containing the values of each <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a> is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Here is an example which increments every integer in a vector.\nWe use the checked variant of <code>add</code> that returns <code>None</code> when the\ncalculation would result in an overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">0_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_add(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">Some</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));</code></pre></div>\n<p>As you can see, this will return the expected, valid items.</p>\n<p>Here is another example that tries to subtract one from another list\nof integers, this time checking for underflow:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">2_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_sub(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Since the last element is zero, it would underflow. Thus, the resulting\nvalue is <code>None</code>.</p>\n<p>Here is a variation on the previous example, showing that no\nfurther elements are taken from <code>iter</code> after the first <code>None</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">3_u16</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>];\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>shared = <span class=\"number\">0</span>;\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| { shared += x; x.checked_sub(<span class=\"number\">2</span>) })\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(shared, <span class=\"number\">6</span>);</code></pre></div>\n<p>Since the third element caused an underflow, no further elements were taken,\nso the final value of <code>shared</code> is 6 (= <code>3 + 2 + 1</code>), not 16.</p>\n</div></details></div></details>","FromIterator<Option<A>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#173-176\">source</a><a href=\"#impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"docblock\"><p>Collect an arbitrary <code>Option</code>-wrapped collection.</p>\n<p>If any item is <code>None</code>, then all previous items collected are discarded,\nand it returns only <code>None</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#178-180\">source</a><a href=\"#method.from_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\" class=\"fn\">from_par_iter</a>&lt;I&gt;(par_iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of the collection from the parallel iterator <code>par_iter</code>. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\">Read more</a></div></details></div></details>","FromParallelIterator<Option<T>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2512\">source</a><a href=\"#impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2514\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(_: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual<Yeet<()>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2501\">source</a><a href=\"#impl-FromResidual-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2503\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(residual: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3C%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasAttrs-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#304\">source</a><a href=\"#impl-HasAttrs-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#305\">source</a><a href=\"#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"constant\">SUPPORTS_CUSTOM_INNER_ATTRS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::SUPPORTS_CUSTOM_INNER_ATTRS</h4></section></summary><div class='docblock'>This is <code>true</code> if this <code>HasAttrs</code> might support ‘custom’ (proc-macro) inner\nattributes. Attributes like <code>#![cfg]</code> and <code>#![cfg_attr]</code> are not\nconsidered ‘custom’ attributes. <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\">Read more</a></div></details><section id=\"method.attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#306\">source</a><a href=\"#method.attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.attrs\" class=\"fn\">attrs</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>]</h4></section><section id=\"method.visit_attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#309\">source</a><a href=\"#method.visit_attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.visit_attrs\" class=\"fn\">visit_attrs</a>(&amp;mut self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"struct\" href=\"https://docs.rs/thin-vec/0.2.13/thin_vec/struct.ThinVec.html\" title=\"struct thin_vec::ThinVec\">ThinVec</a>&lt;<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>&gt;))</h4></section></div></details>","HasAttrs","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasTokens-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#140\">source</a><a href=\"#impl-HasTokens-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#141\">source</a><a href=\"#method.tokens\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens\" class=\"fn\">tokens</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;</h4></section><section id=\"method.tokens_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#144\">source</a><a href=\"#method.tokens_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens_mut\" class=\"fn\">tokens_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;&gt;</h4></section></div></details>","HasTokens","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Hash-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#457-459\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#462\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2076\">source</a></span><a href=\"#impl-IntoIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2094\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a consuming iterator over the possibly contained value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"string\"</span>);\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"string\">\"string\"</span>]);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert!</span>(v.is_empty());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#26\">source</a><a href=\"#impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#30\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3C%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1882\">source</a><a href=\"#impl-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0, const unstable\">1.35.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1898-1900\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.copied\" class=\"fn\">copied</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents of the\noption.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">12</span>;\n<span class=\"kw\">let </span>opt_x = <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(opt_x, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">12</span>));\n<span class=\"kw\">let </span>copied = opt_x.copied();\n<span class=\"macro\">assert_eq!</span>(copied, <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1924-1926\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.cloned\" class=\"fn\">cloned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents of the\noption.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">12</span>;\n<span class=\"kw\">let </span>opt_x = <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(opt_x, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">12</span>));\n<span class=\"kw\">let </span>cloned = opt_x.cloned();\n<span class=\"macro\">assert_eq!</span>(cloned, <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>));</code></pre></div>\n</div></details></div></details>",0,"rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#589\">source</a><a href=\"#impl-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#609\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some\" class=\"fn\">is_some</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some_and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#630\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some_and\" class=\"fn\">is_some_and</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> and the value inside of it matches a predicate.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#653\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none\" class=\"fn\">is_none</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> value.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none_or\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#676\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none_or\" class=\"fn\">is_none_or</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>is_none_or</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> or the value inside of it matches a predicate.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(is_none_or)]\n\n</span><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#710\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>\nwithout moving the <a href=\"../../std/string/struct.String.html\" title=\"String\"><code>String</code></a>. The <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map\" title=\"method core::option::Option::map\"><code>map</code></a> method takes the <code>self</code> argument by value,\nconsuming the original, so this technique uses <code>as_ref</code> to first take an <code>Option</code> to a\nreference to the value inside the original.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>text: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Hello, world!\"</span>.to_string());\n<span class=\"comment\">// First, cast `Option&lt;String&gt;` to `Option&lt;&amp;String&gt;` with `as_ref`,\n// then consume *that* with `map`, leaving `text` on the stack.\n</span><span class=\"kw\">let </span>text_length: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = text.as_ref().map(|s| s.len());\n<span class=\"macro\">println!</span>(<span class=\"string\">\"still can print text: {text:?}\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">match </span>x.as_mut() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#746\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_ref\" class=\"fn\">as_pin_ref</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#762\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_mut\" class=\"fn\">as_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#808\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice of the contained value, if any. If this is <code>None</code>, an\nempty slice is returned. This can be useful to have a single type of\niterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;T&gt;</code> and wish to get a slice of <code>T</code>,\nyou can unpack it via <code>opt.map_or(&amp;[], std::slice::from_ref)</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_slice(), <span class=\"prelude-val\">None</span>.as_slice()],\n    [<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;</span>[][..]],\n);</code></pre></div>\n<p>The inverse of this function is (discounting\nborrowing) <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first\" title=\"method slice::first\"><code>[_]::first</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">for </span>i <span class=\"kw\">in </span>[<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234_u16</span>), <span class=\"prelude-val\">None</span>] {\n    <span class=\"macro\">assert_eq!</span>(i.as_ref(), i.as_slice().first());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#863\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice of the contained value, if any. If this is\n<code>None</code>, an empty slice is returned. This can be useful to have a\nsingle type of iterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;mut T&gt;</code> instead of a\n<code>&amp;mut Option&lt;T&gt;</code>, which this method takes, you can obtain a mutable\nslice via <code>opt.map_or(&amp;mut [], std::slice::from_mut)</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_mut_slice(), <span class=\"prelude-val\">None</span>.as_mut_slice()],\n    [<span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;mut </span>[][..]],\n);</code></pre></div>\n<p>The result is a mutable slice of zero or one items that points into\nour original <code>Option</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>);\nx.as_mut_slice()[<span class=\"number\">0</span>] += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1235</span>));</code></pre></div>\n<p>The inverse of this method (discounting borrowing)\nis <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first_mut\" title=\"method slice::first_mut\"><code>[_]::first_mut</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">123</span>).as_mut_slice().first_mut(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">123</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#930\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.expect\" class=\"fn\">expect</a>(self, msg: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the value is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> with a custom panic message provided by\n<code>msg</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"value\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.expect(<span class=\"string\">\"fruits are healthy\"</span>), <span class=\"string\">\"value\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\nx.expect(<span class=\"string\">\"fruits are healthy\"</span>); <span class=\"comment\">// panics with `fruits are healthy`</span></code></pre></div>\n<h5 id=\"recommended-message-style\"><a class=\"doc-anchor\" href=\"#recommended-message-style\">§</a>Recommended Message Style</h5>\n<p>We recommend that <code>expect</code> messages are used to describe the reason you\n<em>expect</em> the <code>Option</code> should be <code>Some</code>.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>item = slice.get(<span class=\"number\">0</span>)\n    .expect(<span class=\"string\">\"slice should not be empty\"</span>);</code></pre></div>\n<p><strong>Hint</strong>: If you’re having trouble remembering how to phrase expect\nerror messages remember to focus on the word “should” as in “env\nvariable should be set by blah” or “the given binary should be available\nand executable by the current user”.</p>\n<p>For more detail on expect message styles and the reasoning behind our\nrecommendation please refer to the section on <a href=\"../../std/error/index.html#common-message-styles\">“Common Message\nStyles”</a> in the <a href=\"../../std/error/index.html\"><code>std::error</code></a> module docs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#967\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<p>Because this function may panic, its use is generally discouraged.\nInstead, prefer to use pattern matching and handle the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\ncase explicitly, or call <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or\" title=\"method core::option::Option::unwrap_or\"><code>unwrap_or</code></a>, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>, or\n<a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_default\" title=\"method core::option::Option::unwrap_or_default\"><code>unwrap_or_default</code></a>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the self value equals <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>); <span class=\"comment\">// fails</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#990\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or\" class=\"fn\">unwrap_or</a>(self, default: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a provided default.</p>\n<p>Arguments passed to <code>unwrap_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"car\"</span>).unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"car\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"bike\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1009-1011\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_else\" class=\"fn\">unwrap_or_else</a>&lt;F&gt;(self, f: F) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or computes it from a closure.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">10</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">20</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_default\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1040-1042\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_default\" class=\"fn\">unwrap_or_default</a>(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a default.</p>\n<p>Consumes the <code>self</code> argument then, if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, returns the contained\nvalue, otherwise if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, returns the <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" title=\"associated function core::default::Default::default\">default value</a> for that\ntype.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.unwrap_or_default(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(y.unwrap_or_default(), <span class=\"number\">12</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const unstable\">1.58.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1074\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_unchecked\" class=\"fn\">unwrap_unchecked</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value,\nwithout checking that the value is not <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Calling this method on <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is <em><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\">undefined behavior</a></em>.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>); <span class=\"comment\">// Undefined behavior!</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1105-1107\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a contained value (if <code>Some</code>) or returns <code>None</code> (if <code>None</code>).</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an\n<code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>, consuming the original:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>maybe_some_string = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, World!\"</span>));\n<span class=\"comment\">// `Option::map` takes self *by value*, consuming `maybe_some_string`\n</span><span class=\"kw\">let </span>maybe_some_len = maybe_some_string.map(|s| s.len());\n<span class=\"macro\">assert_eq!</span>(maybe_some_len, <span class=\"prelude-val\">Some</span>(<span class=\"number\">13</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map(|s| s.len()), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1135\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>),</div></h4></section></summary><div class=\"docblock\"><p>Calls a function with a reference to the contained value if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<p>Returns the original option.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>list = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n\n<span class=\"comment\">// prints \"got: 2\"\n</span><span class=\"kw\">let </span>x = list\n    .get(<span class=\"number\">1</span>)\n    .inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>))\n    .expect(<span class=\"string\">\"list should be long enough\"</span>);\n\n<span class=\"comment\">// prints nothing\n</span>list.get(<span class=\"number\">5</span>).inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1164-1166\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or\" class=\"fn\">map_or</a>&lt;U, F&gt;(self, default: U, f: F) -&gt; U<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Returns the provided default result (if none),\nor applies a function to the contained value (if any).</p>\n<p>Arguments passed to <code>map_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map_or_else\" title=\"method core::option::Option::map_or_else\"><code>map_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1209-1212\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or_else\" class=\"fn\">map_or_else</a>&lt;U, D, F&gt;(self, default: D, f: F) -&gt; U<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; U,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Computes a default function result (if none), or\napplies a different function to the contained value (if any).</p>\n<h5 id=\"basic-examples\"><a class=\"doc-anchor\" href=\"#basic-examples\">§</a>Basic examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">21</span>;\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n<h5 id=\"handling-a-result-based-fallback\"><a class=\"doc-anchor\" href=\"#handling-a-result-based-fallback\">§</a>Handling a Result-based fallback</h5>\n<p>A somewhat common occurrence when dealing with optional values\nin combination with <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a> is the case where one wants to invoke\na fallible fallback if the option is not present.  This example\nparses a command line argument (if present), or the contents of a file to\nan integer.  However, unlike accessing the command line argument, reading\nthe file is fallible, so it must be wrapped with <code>Ok</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v: u64 = std::env::args()\n   .nth(<span class=\"number\">1</span>)\n   .map_or_else(|| std::fs::read_to_string(<span class=\"string\">\"/etc/someconfig.conf\"</span>), <span class=\"prelude-val\">Ok</span>)<span class=\"question-mark\">?\n   </span>.parse()<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1243\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or\" class=\"fn\">ok_or</a>&lt;E&gt;(self, err: E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;</h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err)</code></a>.</p>\n<p>Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.ok_or_else\" title=\"method core::option::Option::ok_or_else\"><code>ok_or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1268-1270\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or_else\" class=\"fn\">ok_or_else</a>&lt;E, F&gt;(self, err: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; E,</div></h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err())</code></a>.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1294-1296\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref\" class=\"fn\">as_deref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to <code>Option&lt;&amp;T::Target&gt;</code>.</p>\n<p>Leaves the original Option in-place, creating a new one with a reference\nto the original one, additionally coercing the contents via <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\"><code>Deref</code></a>.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1320-1322\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref_mut\" class=\"fn\">as_deref_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to <code>Option&lt;&amp;mut T::Target&gt;</code>.</p>\n<p>Leaves the original <code>Option</code> in-place, creating a new one containing a mutable reference to\nthe inner type’s <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"associated type core::ops::deref::Deref::Target\"><code>Deref::Target</code></a> type.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref_mut().map(|x| {\n    x.make_ascii_uppercase();\n    x\n}), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"HEY\"</span>.to_owned().as_mut_str()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1348\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.Iter.html\" title=\"struct core::option::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the possibly contained value.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">4</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1369\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IterMut.html\" title=\"struct core::option::IterMut\">IterMut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable iterator over the possibly contained value.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"kw\">match </span>x.iter_mut().next() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter_mut().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1406\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and\" class=\"fn\">and</a>&lt;U&gt;(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>and</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.and_then\" title=\"method core::option::Option::and_then\"><code>and_then</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1445-1447\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and_then\" class=\"fn\">and_then</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>f</code> with the\nwrapped value and returns the result.</p>\n<p>Some languages call this operation flatmap.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>sq_then_to_string(x: u32) -&gt; <span class=\"prelude-ty\">Option</span>&lt;String&gt; {\n    x.checked_mul(x).map(|sq| sq.to_string())\n}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>.to_string()));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">1_000_000</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>); <span class=\"comment\">// overflowed!\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Often used to chain fallible operations that may return <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>arr_2d = [[<span class=\"string\">\"A0\"</span>, <span class=\"string\">\"A1\"</span>], [<span class=\"string\">\"B0\"</span>, <span class=\"string\">\"B1\"</span>]];\n\n<span class=\"kw\">let </span>item_0_1 = arr_2d.get(<span class=\"number\">0</span>).and_then(|row| row.get(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(item_0_1, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"A1\"</span>));\n\n<span class=\"kw\">let </span>item_2_0 = arr_2d.get(<span class=\"number\">2</span>).and_then(|row| row.get(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(item_2_0, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1481-1483\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>predicate</code>\nwith the wrapped value and returns:</p>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(t)</code></a> if <code>predicate</code> returns <code>true</code> (where <code>t</code> is the wrapped\nvalue), and</li>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>predicate</code> returns <code>false</code>.</li>\n</ul>\n<p>This function works similar to <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.filter\" title=\"method core::iter::traits::iterator::Iterator::filter\"><code>Iterator::filter()</code></a>. You can imagine\nthe <code>Option&lt;T&gt;</code> being an iterator over one or zero elements. <code>filter()</code>\nlets you decide which elements to keep.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>is_even(n: <span class=\"kw-2\">&amp;</span>i32) -&gt; bool {\n    n % <span class=\"number\">2 </span>== <span class=\"number\">0\n</span>}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>).filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).filter(is_even), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1522\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or\" class=\"fn\">or</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.or_else\" title=\"method core::option::Option::or_else\"><code>or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1544-1546\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or_else\" class=\"fn\">or_else</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise calls <code>f</code> and\nreturns the result.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>nobody() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">None </span>}\n<span class=\"kw\">fn </span>vikings() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>) }\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>).or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(nobody), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1577\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.xor\" class=\"fn\">xor</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> if exactly one of <code>self</code>, <code>optb</code> is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, otherwise returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1611\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option, then returns a mutable reference to it.</p>\n<p>If the option already contains a value, the old value is dropped.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.get_or_insert\" title=\"method core::option::Option::get_or_insert\"><code>Option::get_or_insert</code></a>, which doesn’t update the value if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>opt = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">1</span>);\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">2</span>);\n<span class=\"kw-2\">*</span>val = <span class=\"number\">3</span>;\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1640\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert\" class=\"fn\">get_or_insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.insert\" title=\"method core::option::Option::insert\"><code>Option::insert</code></a>, which updates the value even if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert(<span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_default\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1671-1673\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_default\" class=\"fn\">get_or_insert_default</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_get_or_insert_default</code>)</span></div></span></summary><div class=\"docblock\"><p>Inserts the default value into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_get_or_insert_default)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_default();\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">0</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_with\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1697-1699\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_with\" class=\"fn\">get_or_insert_with</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Inserts a value computed from <code>f</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nthen returns a mutable reference to the contained value.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_with(|| <span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, leaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> in its place.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_if\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1763-1765\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take_if\" class=\"fn\">take_if</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, but only if the predicate evaluates to\n<code>true</code> on a mutable reference to the value.</p>\n<p>In other words, replaces <code>self</code> with <code>None</code> if the predicate returns <code>true</code>.\nThis method operates similar to <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.take\" title=\"method core::option::Option::take\"><code>Option::take</code></a> but conditional.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw\">if </span><span class=\"kw-2\">*</span>v == <span class=\"number\">42 </span>{\n    <span class=\"kw-2\">*</span>v += <span class=\"number\">1</span>;\n    <span class=\"bool-val\">false\n</span>} <span class=\"kw\">else </span>{\n    <span class=\"bool-val\">false\n</span>});\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw-2\">*</span>v == <span class=\"number\">43</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0, const unstable\">1.31.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1790\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Replaces the actual value in the option by the value given in parameter,\nreturning the old value if present,\nleaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> in its place without deinitializing either one.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1810\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Zips <code>self</code> with another <code>Option</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some((s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hi\"</span>);\n<span class=\"kw\">let </span>z = <span class=\"prelude-val\">None</span>::&lt;u8&gt;;\n\n<span class=\"macro\">assert_eq!</span>(x.zip(y), <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"hi\"</span>)));\n<span class=\"macro\">assert_eq!</span>(x.zip(z), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_with\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1846-1848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip_with\" class=\"fn\">zip_with</a>&lt;U, F, R&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T, U) -&gt; R,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_zip</code>)</span></div></span></summary><div class=\"docblock\"><p>Zips <code>self</code> and another <code>Option</code> with function <code>f</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some(f(s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_zip)]\n\n#[derive(Debug, PartialEq)]\n</span><span class=\"kw\">struct </span>Point {\n    x: f64,\n    y: f64,\n}\n\n<span class=\"kw\">impl </span>Point {\n    <span class=\"kw\">fn </span>new(x: f64, y: f64) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self </span>{ x, y }\n    }\n}\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">17.5</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42.7</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.zip_with(y, Point::new), <span class=\"prelude-val\">Some</span>(Point { x: <span class=\"number\">17.5</span>, y: <span class=\"number\">42.7 </span>}));\n<span class=\"macro\">assert_eq!</span>(x.zip_with(<span class=\"prelude-val\">None</span>, Point::new), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2221\">source</a></span><a href=\"#impl-Ord-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2223\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#855-857\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#876-878\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2190\">source</a></span><a href=\"#impl-PartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2192\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2208\">source</a></span><a href=\"#impl-PartialOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2210\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#244-246\">source</a></span><a href=\"#impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#265-267\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the product of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This multiplies each number in a vector of strings,\nif a string could not be parsed the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n<span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Product<Option<U>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#99-101\">source</a><a href=\"#impl-Serialize-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#104-106\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableOrd-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#472\">source</a><a href=\"#impl-StableOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#473\">source</a><a href=\"#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"constant\">CAN_USE_UNSTABLE_SORT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::CAN_USE_UNSTABLE_SORT</h4></section><details class=\"toggle\" open><summary><section id=\"associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#476\">source</a><a href=\"#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"constant\">THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> = ()</h4></section></summary><div class='docblock'>Marker to ensure that implementors have carefully considered\nwhether their <code>Ord</code> implementation obeys this trait’s contract.</div></details></div></details>","StableOrd","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#214-216\">source</a></span><a href=\"#impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#235-237\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the sum of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This sums up the position of the character ‘a’ in a vector of strings,\nif a word did not have the character ‘a’ the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"great\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"good\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Sum<Option<U>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToJson-for-Option%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#86\">source</a><a href=\"#impl-ToJson-for-Option%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_json\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#87\">source</a><a href=\"#method.to_json\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_target/json/trait.ToJson.html#tymethod.to_json\" class=\"fn\">to_json</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.117/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a></h4></section></div></details>","ToJson","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Try-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2482\">source</a><a href=\"#impl-Try-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value produced by <code>?</code> when <em>not</em> short-circuiting.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Residual\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Residual\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" class=\"associatedtype\">Residual</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value passed to <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" title=\"associated function core::ops::try_trait::FromResidual::from_residual\"><code>FromResidual::from_residual</code></a>\nas part of <code>?</code> when short-circuiting. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_output\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2487\">source</a><a href=\"#method.from_output\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\" class=\"fn\">from_output</a>(output: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from its <code>Output</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.branch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2492\">source</a><a href=\"#method.branch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\" class=\"fn\">branch</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;, T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Used in <code>?</code> to decide whether the operator should produce a value\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Continue\" title=\"variant core::ops::control_flow::ControlFlow::Continue\"><code>ControlFlow::Continue</code></a>)\nor propagate a value back to the caller\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Break\" title=\"variant core::ops::control_flow::ControlFlow::Break\"><code>ControlFlow::Break</code></a>). <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\">Read more</a></div></details></div></details>","Try","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#258\">source</a><a href=\"#impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#259\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;F as <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_type_ir::fold::FallibleTypeFolder::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#90\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFolder.html\" title=\"trait rustc_type_ir::fold::TypeFolder\">TypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<I>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#149\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#150\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_type_ir::visit::TypeVisitor::Result\">Result</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnifyValue-for-Option%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#585\">source</a><a href=\"#impl-UnifyValue-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a></h4></section></summary><div class='docblock'>Defines the type to return when merging of two values fails.\nIf merging is infallible, use the special struct <code>NoError</code>\nfound in this crate, which unlocks various more convenient\nmethods on the unification table.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unify_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#588\">source</a><a href=\"#method.unify_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#tymethod.unify_values\" class=\"fn\">unify_values</a>(\n    a: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n    b: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Given two values, produce a new value that combines them.\nIf that is not possible, produce an error.</div></details></div></details>","UnifyValue","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#740\">source</a><a href=\"#impl-Value-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#741\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#93\">source</a><a href=\"#impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\" class=\"fn\">transform</a>(&amp;'a self) -&gt; &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\" class=\"fn\">transform_owned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\" class=\"fn\">make</a>(from: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\" class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\">Read more</a></div></details></div></details>","Yokeable<'a>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#98\">source</a><a href=\"#impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, C, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#99\">source</a><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html#tymethod.zero_from\" class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, Option<C>>","rustc_expand::base::LintStoreExpandDyn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/map/kv.rs.html#76-78\">source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\">ZeroVec</a>&lt;'a, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = &lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt; as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","rustc_expand::base::LintStoreExpandDyn"],["<section id=\"impl-CloneableCart-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/yoke.rs.html#661\">source</a><a href=\"#impl-CloneableCart-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a>,</div></h3></section>","CloneableCart","rustc_expand::base::LintStoreExpandDyn"],["<section id=\"impl-Copy-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Copy-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_expand::base::LintStoreExpandDyn"],["<section id=\"impl-Eq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Eq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_expand::base::LintStoreExpandDyn"],["<section id=\"impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2188\">source</a></span><a href=\"#impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section>","StructuralPartialEq","rustc_expand::base::LintStoreExpandDyn"]],
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Ci128%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Ci128%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Ci16%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Ci16%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Ci32%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Ci32%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Ci64%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Ci64%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cisize%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cisize%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cu128%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cu128%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cu16%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cu16%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cu32%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cu32%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cu64%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cu64%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-Option%3CNonZero%3Cusize%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-AsBytes-for-Option%3CNonZero%3Cusize%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2711\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2783-2785\">source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.as_bytes_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2862\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2919\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2980\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#99\">source</a><a href=\"#impl-AsULE-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" class=\"associatedtype\">ULE</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#101\">source</a><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\" class=\"fn\">to_unaligned</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#105\">source</a><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\" class=\"fn\">from_unaligned</a>(other: <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\">Read more</a></div></details></div></details>","AsULE","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2038-2040\">source</a></span><a href=\"#impl-Clone-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2043\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2051\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Debug-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#373\">source</a><a href=\"#impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#374\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","Decodable<D>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2060\">source</a></span><a href=\"#impl-Default-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2070\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>opt: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = Option::default();\n<span class=\"macro\">assert!</span>(opt.is_none());</code></pre></div>\n</div></details></div></details>","Default","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#927-929\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#931-933\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DummyAstNode-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1699\">source</a><a href=\"#impl-DummyAstNode-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/mut_visit/trait.DummyAstNode.html\" title=\"trait rustc_ast::mut_visit::DummyAstNode\">DummyAstNode</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dummy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1700\">source</a><a href=\"#method.dummy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/mut_visit/trait.DummyAstNode.html#tymethod.dummy\" class=\"fn\">dummy</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","DummyAstNode","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#361\">source</a><a href=\"#impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#362\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></div></details>","Encodable<S>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#206-209\">source</a><a href=\"#impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;<a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionVarULE.html\" title=\"struct zerovec::ule::option::OptionVarULE\">OptionVarULE</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#211\">source</a><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\" class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#217\">source</a><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#228\">source</a><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_write\" class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" title=\"method zerovec::ule::encode::EncodeAsVarULE::encode_var_ule_len::encode_var_ule_len\"><code>Self::encode_var_ule_len()</code></a></div></details></div></details>","EncodeAsVarULE<OptionVarULE<U>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3C%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#179-181\">source</a><a href=\"#impl-EraseType-for-Option%3C%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3C%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#175-177\">source</a><a href=\"#impl-EraseType-for-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3C(DefId,+EntryFnType)%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3C(DefId,+EntryFnType)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>, <a class=\"enum\" href=\"rustc_session/config/enum.EntryFnType.html\" title=\"enum rustc_session::config::EntryFnType\">EntryFnType</a>)&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CAllocatorKind%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CAllocatorKind%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"rustc_ast/expand/allocator/enum.AllocatorKind.html\" title=\"enum rustc_ast::expand::allocator::AllocatorKind\">AllocatorKind</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CAsyncDestructor%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CAsyncDestructor%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.AsyncDestructor.html\" title=\"struct rustc_middle::ty::AsyncDestructor\">AsyncDestructor</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CConstStability%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CConstStability%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_attr/builtin/struct.ConstStability.html\" title=\"struct rustc_attr::builtin::ConstStability\">ConstStability</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">24</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CCoroutineKind%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CCoroutineKind%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"rustc_hir/hir/enum.CoroutineKind.html\" title=\"enum rustc_hir::hir::CoroutineKind\">CoroutineKind</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CCrateNum%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CCrateNum%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.CrateNum.html\" title=\"struct rustc_span::def_id::CrateNum\">CrateNum</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CDefId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CDefId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CDefKind%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CDefKind%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"rustc_hir/def/enum.DefKind.html\" title=\"enum rustc_hir::def::DefKind\">DefKind</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CDefaultBodyStability%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CDefaultBodyStability%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_attr/builtin/struct.DefaultBodyStability.html\" title=\"struct rustc_attr::builtin::DefaultBodyStability\">DefaultBodyStability</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CDeprecationEntry%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CDeprecationEntry%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/middle/stability/struct.DeprecationEntry.html\" title=\"struct rustc_middle::middle::stability::DeprecationEntry\">DeprecationEntry</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CDestructor%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CDestructor%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Destructor.html\" title=\"struct rustc_middle::ty::Destructor\">Destructor</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CDestructuredConstant%3C'_%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#183-185\">source</a><a href=\"#impl-EraseType-for-Option%3CDestructuredConstant%3C'_%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/mir/query/struct.DestructuredConstant.html\" title=\"struct rustc_middle::mir::query::DestructuredConstant\">DestructuredConstant</a>&lt;'_&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">24</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CEarlyBinder%3CTyCtxt%3C'_%3E,+Ty%3C'_%3E%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#191-193\">source</a><a href=\"#impl-EraseType-for-Option%3CEarlyBinder%3CTyCtxt%3C'_%3E,+Ty%3C'_%3E%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"rustc_middle/ty/sty/type.EarlyBinder.html\" title=\"type rustc_middle::ty::sty::EarlyBinder\">EarlyBinder</a>&lt;'_, <a class=\"struct\" href=\"rustc_middle/ty/struct.Ty.html\" title=\"struct rustc_middle::ty::Ty\">Ty</a>&lt;'_&gt;&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CFieldIdx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CFieldIdx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_target/abi/struct.FieldIdx.html\" title=\"struct rustc_target::abi::FieldIdx\">FieldIdx</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CHirId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CHirId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_hir/hir_id/struct.HirId.html\" title=\"struct rustc_hir::hir_id::HirId\">HirId</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CImplTraitHeader%3C'_%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#187-189\">source</a><a href=\"#impl-EraseType-for-Option%3CImplTraitHeader%3C'_%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ImplTraitHeader.html\" title=\"struct rustc_middle::ty::ImplTraitHeader\">ImplTraitHeader</a>&lt;'_&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">24</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CImplTraitInTraitData%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CImplTraitInTraitData%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"rustc_middle/ty/enum.ImplTraitInTraitData.html\" title=\"enum rustc_middle::ty::ImplTraitInTraitData\">ImplTraitInTraitData</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CIntrinsicDef%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CIntrinsicDef%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/intrinsic/struct.IntrinsicDef.html\" title=\"struct rustc_middle::ty::intrinsic::IntrinsicDef\">IntrinsicDef</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CLocalDefId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CLocalDefId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CPanicStrategy%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CPanicStrategy%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"rustc_target/spec/enum.PanicStrategy.html\" title=\"enum rustc_target::spec::PanicStrategy\">PanicStrategy</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CScalarInt%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CScalarInt%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/consts/int/struct.ScalarInt.html\" title=\"struct rustc_middle::ty::consts::int::ScalarInt\">ScalarInt</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CSpan%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CSpan%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CStability%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CStability%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_attr/builtin/struct.Stability.html\" title=\"struct rustc_attr::builtin::Stability\">Stability</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3CSvh%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3CSvh%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_data_structures/svh/struct.Svh.html\" title=\"struct rustc_data_structures::svh::Svh\">Svh</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">24</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-Option%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#229-331\">source</a><a href=\"#impl-EraseType-for-Option%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/erase/trait.EraseType.html#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Current%3E-for-Option%3C%26Id%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#316\">source</a><a href=\"#impl-From%3C%26Current%3E-for-Option%3C%26Id%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#317\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cur: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Current>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Current%3E-for-Option%3C%26Metadata%3C'static%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#337\">source</a><a href=\"#impl-From%3C%26Current%3E-for-Option%3C%26Metadata%3C'static%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'static&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#338\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cur: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'static&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Current>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Current%3E-for-Option%3CId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#322\">source</a><a href=\"#impl-From%3C%26Current%3E-for-Option%3CId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#323\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cur: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Current>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26EnteredSpan%3E-for-Option%3C%26Id%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1443\">source</a><a href=\"#impl-From%3C%26EnteredSpan%3E-for-Option%3C%26Id%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1444\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(span: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a EnteredSpan>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26EnteredSpan%3E-for-Option%3CId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1449\">source</a><a href=\"#impl-From%3C%26EnteredSpan%3E-for-Option%3CId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1450\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(span: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a EnteredSpan>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Id%3E-for-Option%3CId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#97\">source</a><a href=\"#impl-From%3C%26Id%3E-for-Option%3CId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#98\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(id: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Id>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Language%3E-for-Option%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/unic-langid-impl/0.9.5/src/unic_langid_impl/subtags/language.rs.html#66\">source</a><a href=\"#impl-From%3C%26Language%3E-for-Option%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/unic-langid-impl/0.9.5/unic_langid_impl/subtags/language/struct.Language.html\" title=\"struct unic_langid_impl::subtags::language::Language\">Language</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/unic-langid-impl/0.9.5/src/unic_langid_impl/subtags/language.rs.html#67\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: &amp;<a class=\"struct\" href=\"https://docs.rs/unic-langid-impl/0.9.5/unic_langid_impl/subtags/language/struct.Language.html\" title=\"struct unic_langid_impl::subtags::language::Language\">Language</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Language>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Option%3CT%3E%3E-for-Option%3C%26T%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2136\">source</a></span><a href=\"#impl-From%3C%26Option%3CT%3E%3E-for-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2157\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(o: &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Converts an <code><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> into an <code><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>, preserving\nthe original. The <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map\" title=\"method core::option::Option::map\"><code>map</code></a> method takes the <code>self</code> argument by value, consuming the original,\nso this technique uses <code>from</code> to first take an <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a> to a reference\nto the value inside the original.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>s: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, Rustaceans!\"</span>));\n<span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = Option::from(<span class=\"kw-2\">&amp;</span>s).map(|ss: <span class=\"kw-2\">&amp;</span>String| ss.len());\n\n<span class=\"macro\">println!</span>(<span class=\"string\">\"Can still print s: {s:?}\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(o, <span class=\"prelude-val\">Some</span>(<span class=\"number\">18</span>));</code></pre></div>\n</div></details></div></details>","From<&'a Option<T>>","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Span%3E-for-Option%3C%26Id%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1425\">source</a><a href=\"#impl-From%3C%26Span%3E-for-Option%3C%26Id%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html\" title=\"struct tracing::span::Span\">Span</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1426\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(span: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html\" title=\"struct tracing::span::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Span>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Span%3E-for-Option%3CId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1431\">source</a><a href=\"#impl-From%3C%26Span%3E-for-Option%3CId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html\" title=\"struct tracing::span::Span\">Span</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1432\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(span: &amp;'a <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html\" title=\"struct tracing::span::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Span>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+Option%3CT%3E%3E-for-Option%3C%26mut+T%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2163\">source</a></span><a href=\"#impl-From%3C%26mut+Option%3CT%3E%3E-for-Option%3C%26mut+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2179\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(o: &amp;'a mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>s = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;mut </span>String&gt; = Option::from(<span class=\"kw-2\">&amp;mut </span>s);\n\n<span class=\"kw\">match </span>o {\n    <span class=\"prelude-val\">Some</span>(t) =&gt; <span class=\"kw-2\">*</span>t = String::from(<span class=\"string\">\"Hello, Rustaceans!\"</span>),\n    <span class=\"prelude-val\">None </span>=&gt; (),\n}\n\n<span class=\"macro\">assert_eq!</span>(s, <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, Rustaceans!\"</span>)));</code></pre></div>\n</div></details></div></details>","From<&'a mut Option<T>>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCurrent%3E-for-Option%3CId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#328\">source</a><a href=\"#impl-From%3CCurrent%3E-for-Option%3CId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/span.rs.html#329\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cur: <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Current>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEitherOrBoth%3CA,+B%3E%3E-for-Option%3CEither%3CA,+B%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.12.1/src/itertools/either_or_both.rs.html#497\">source</a><a href=\"#impl-From%3CEitherOrBoth%3CA,+B%3E%3E-for-Option%3CEither%3CA,+B%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/itertools/0.12.1/itertools/either_or_both/enum.EitherOrBoth.html\" title=\"enum itertools::either_or_both::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://docs.rs/either/1/either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;A, B&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.12.1/src/itertools/either_or_both.rs.html#498\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"https://docs.rs/itertools/0.12.1/itertools/either_or_both/enum.EitherOrBoth.html\" title=\"enum itertools::either_or_both::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://docs.rs/either/1/either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;A, B&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EitherOrBoth<A, B>>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLanguage%3E-for-Option%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/unic-langid-impl/0.9.5/src/unic_langid_impl/subtags/language.rs.html#60\">source</a><a href=\"#impl-From%3CLanguage%3E-for-Option%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/unic-langid-impl/0.9.5/unic_langid_impl/subtags/language/struct.Language.html\" title=\"struct unic_langid_impl::subtags::language::Language\">Language</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/unic-langid-impl/0.9.5/src/unic_langid_impl/subtags/language.rs.html#61\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"https://docs.rs/unic-langid-impl/0.9.5/unic_langid_impl/subtags/language/struct.Language.html\" title=\"struct unic_langid_impl::subtags::language::Language\">Language</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Language>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLevelFilter%3E-for-Option%3CLevel%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/metadata.rs.html#618\">source</a><a href=\"#impl-From%3CLevelFilter%3E-for-Option%3CLevel%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/metadata/struct.LevelFilter.html\" title=\"struct tracing_core::metadata::LevelFilter\">LevelFilter</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/metadata/struct.Level.html\" title=\"struct tracing_core::metadata::Level\">Level</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/metadata.rs.html#620\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(filter: <a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/metadata/struct.LevelFilter.html\" title=\"struct tracing_core::metadata::LevelFilter\">LevelFilter</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/metadata/struct.Level.html\" title=\"struct tracing_core::metadata::Level\">Level</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LevelFilter>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSpan%3E-for-Option%3CId%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1437\">source</a><a href=\"#impl-From%3CSpan%3E-for-Option%3CId%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html\" title=\"struct tracing::span::Span\">Span</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing/0.1.37/src/tracing/span.rs.html#1438\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(span: <a class=\"struct\" href=\"https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html\" title=\"struct tracing::span::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Span>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2120\">source</a></span><a href=\"#impl-From%3CT%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2130\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Moves <code>val</code> into a new <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;u8&gt; = Option::from(<span class=\"number\">67</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">67</span>), o);</code></pre></div>\n</div></details></div></details>","From<T>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Ci128%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Ci128%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Ci16%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Ci16%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Ci32%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Ci32%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Ci64%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Ci64%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cisize%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cisize%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cu128%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cu128%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cu16%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cu16%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cu32%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cu32%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cu64%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cu64%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-Option%3CNonZero%3Cusize%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromBytes-for-Option%3CNonZero%3Cusize%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1854-1856\">source</a><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\" class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1896-1898\">source</a><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\" class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1932-1934\">source</a><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\" class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.ref_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1974-1976\">source</a><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\" class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2021-2023\">source</a><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\" class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2061-2063\">source</a><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\" class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2108-2110\">source</a><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\" class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2159-2161\">source</a><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\" class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2210-2212\">source</a><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\" class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2261-2263\">source</a><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\" class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2316-2318\">source</a><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\" class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2371-2373\">source</a><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\" class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.mut_slice_from_suffix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2408-2410\">source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\" class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2447-2449\">source</a><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\" class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#2481-2483\">source</a><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\" class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromBytes.html#method.read_from_suffix\">Read more</a></div></details></div></details>","FromBytes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2411\">source</a></span><a href=\"#impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2473\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nno further elements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is\nreturned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> occur, a container of type\n<code>V</code> containing the values of each <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a> is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Here is an example which increments every integer in a vector.\nWe use the checked variant of <code>add</code> that returns <code>None</code> when the\ncalculation would result in an overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">0_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_add(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">Some</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));</code></pre></div>\n<p>As you can see, this will return the expected, valid items.</p>\n<p>Here is another example that tries to subtract one from another list\nof integers, this time checking for underflow:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">2_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_sub(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Since the last element is zero, it would underflow. Thus, the resulting\nvalue is <code>None</code>.</p>\n<p>Here is a variation on the previous example, showing that no\nfurther elements are taken from <code>iter</code> after the first <code>None</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">3_u16</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>];\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>shared = <span class=\"number\">0</span>;\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| { shared += x; x.checked_sub(<span class=\"number\">2</span>) })\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(shared, <span class=\"number\">6</span>);</code></pre></div>\n<p>Since the third element caused an underflow, no further elements were taken,\nso the final value of <code>shared</code> is 6 (= <code>3 + 2 + 1</code>), not 16.</p>\n</div></details></div></details>","FromIterator<Option<A>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#173-176\">source</a><a href=\"#impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"docblock\"><p>Collect an arbitrary <code>Option</code>-wrapped collection.</p>\n<p>If any item is <code>None</code>, then all previous items collected are discarded,\nand it returns only <code>None</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#178-180\">source</a><a href=\"#method.from_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\" class=\"fn\">from_par_iter</a>&lt;I&gt;(par_iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of the collection from the parallel iterator <code>par_iter</code>. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\">Read more</a></div></details></div></details>","FromParallelIterator<Option<T>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReader%3C'a%3E-for-Option%3CComponentValType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmparser/0.118.2/src/wasmparser/readers/component/types.rs.html#135\">source</a><a href=\"#impl-FromReader%3C'a%3E-for-Option%3CComponentValType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/wasmparser/0.118.2/wasmparser/readers/trait.FromReader.html\" title=\"trait wasmparser::readers::FromReader\">FromReader</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://docs.rs/wasmparser/0.118.2/wasmparser/readers/component/types/enum.ComponentValType.html\" title=\"enum wasmparser::readers::component::types::ComponentValType\">ComponentValType</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmparser/0.118.2/src/wasmparser/readers/component/types.rs.html#136\">source</a><a href=\"#method.from_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/wasmparser/0.118.2/wasmparser/readers/trait.FromReader.html#tymethod.from_reader\" class=\"fn\">from_reader</a>(\n    reader: &amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmparser/0.118.2/wasmparser/binary_reader/struct.BinaryReader.html\" title=\"struct wasmparser::binary_reader::BinaryReader\">BinaryReader</a>&lt;'a&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://docs.rs/wasmparser/0.118.2/wasmparser/readers/component/types/enum.ComponentValType.html\" title=\"enum wasmparser::readers::component::types::ComponentValType\">ComponentValType</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/wasmparser/0.118.2/wasmparser/binary_reader/struct.BinaryReaderError.html\" title=\"struct wasmparser::binary_reader::BinaryReaderError\">BinaryReaderError</a>&gt;</h4></section></summary><div class='docblock'>Attempts to read <code>Self</code> from the provided binary reader, returning an\nerror if it is unable to do so.</div></details></div></details>","FromReader<'a>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2512\">source</a><a href=\"#impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2514\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(_: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual<Yeet<()>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2501\">source</a><a href=\"#impl-FromResidual-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2503\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(residual: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3C%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3C%26mut+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3C%26mut+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonNull%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonNull%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Ci128%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Ci128%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Ci16%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Ci16%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Ci32%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Ci32%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Ci64%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Ci64%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cisize%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cisize%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cu128%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cu128%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cu16%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cu16%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cu32%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cu32%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cu64%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cu64%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3CNonZero%3Cusize%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-FromZeroes-for-Option%3CNonZero%3Cusize%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn()+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn()+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>() -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: A, _: B, _: C, _: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, C, D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: B, _: C, _: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: C, _: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cextern+%22C%22+fn(L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn()+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn()+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>() -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: A, _: B, _: C, _: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, C, D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: B, _: C, _: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(C,+D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: C, _: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(D,+E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: D, _: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(E,+F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: E, _: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(F,+G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: F, _: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(G,+H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G, H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: G, _: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(H,+I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: H, _: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(I,+J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(I,+J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: I, _: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(J,+K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(J,+K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;J, K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: J, _: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasAttrs-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#304\">source</a><a href=\"#impl-HasAttrs-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#305\">source</a><a href=\"#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"constant\">SUPPORTS_CUSTOM_INNER_ATTRS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::SUPPORTS_CUSTOM_INNER_ATTRS</h4></section></summary><div class='docblock'>This is <code>true</code> if this <code>HasAttrs</code> might support ‘custom’ (proc-macro) inner\nattributes. Attributes like <code>#![cfg]</code> and <code>#![cfg_attr]</code> are not\nconsidered ‘custom’ attributes. <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\">Read more</a></div></details><section id=\"method.attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#306\">source</a><a href=\"#method.attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.attrs\" class=\"fn\">attrs</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>]</h4></section><section id=\"method.visit_attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#309\">source</a><a href=\"#method.visit_attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.visit_attrs\" class=\"fn\">visit_attrs</a>(&amp;mut self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"struct\" href=\"https://docs.rs/thin-vec/0.2.13/thin_vec/struct.ThinVec.html\" title=\"struct thin_vec::ThinVec\">ThinVec</a>&lt;<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>&gt;))</h4></section></div></details>","HasAttrs","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasTokens-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#140\">source</a><a href=\"#impl-HasTokens-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#141\">source</a><a href=\"#method.tokens\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens\" class=\"fn\">tokens</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;</h4></section><section id=\"method.tokens_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#144\">source</a><a href=\"#method.tokens_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens_mut\" class=\"fn\">tokens_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;&gt;</h4></section></div></details>","HasTokens","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Hash-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#457-459\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#462\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2100\">source</a></span><a href=\"#impl-IntoIterator-for-%26Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.Iter.html\" title=\"struct core::option::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2104\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.Iter.html\" title=\"struct core::option::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_middle::query::queries::mir_coroutine_witnesses::Value","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::Value","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26mut+Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2110\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IterMut.html\" title=\"struct core::option::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2114\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IterMut.html\" title=\"struct core::option::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2076\">source</a></span><a href=\"#impl-IntoIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2094\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a consuming iterator over the possibly contained value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"string\"</span>);\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"string\">\"string\"</span>]);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert!</span>(v.is_empty());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#99\">source</a><a href=\"#impl-IntoParallelIterator-for-%26Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.Iter.html\" title=\"struct rayon::option::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#103\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.Iter.html\" title=\"struct rayon::option::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_middle::query::queries::mir_coroutine_witnesses::Value","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::Value","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26mut+Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#129\">source</a><a href=\"#impl-IntoParallelIterator-for-%26mut+Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for &amp;'a mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IterMut.html\" title=\"struct rayon::option::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#133\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IterMut.html\" title=\"struct rayon::option::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#26\">source</a><a href=\"#impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#30\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-Option%3CSymbol%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#479-485\">source</a><a href=\"#impl-Key-for-Option%3CSymbol%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Cache\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Cache\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/query/keys/trait.Key.html#associatedtype.Cache\" class=\"associatedtype\">Cache</a>&lt;V&gt; = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCache.html\" title=\"struct rustc_query_system::query::caches::DefaultCache\">DefaultCache</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/symbol/struct.Symbol.html\" title=\"struct rustc_span::symbol::Symbol\">Symbol</a>&gt;, V&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#482-484\">source</a><a href=\"#method.default_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, _tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#40-42\">source</a><a href=\"#method.key_as_def_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_def_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_def_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_def_id\" class=\"fn\">ty_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lift%3CTyCtxt%3C'tcx%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#284-292\">source</a><a href=\"#impl-Lift%3CTyCtxt%3C'tcx%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, T: <a class=\"trait\" href=\"rustc_middle/ty/lift/trait.Lift.html\" title=\"trait rustc_middle::ty::lift::Lift\">Lift</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_middle/ty/lift/trait.Lift.html\" title=\"trait rustc_middle::ty::lift::Lift\">Lift</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Lifted\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Lifted\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/ty/lift/trait.Lift.html#associatedtype.Lifted\" class=\"associatedtype\">Lifted</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"rustc_middle/ty/lift/trait.Lift.html\" title=\"trait rustc_middle::ty::lift::Lift\">Lift</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/lift/trait.Lift.html#associatedtype.Lifted\" title=\"type rustc_middle::ty::lift::Lift::Lifted\">Lifted</a>&gt;</h4></section><section id=\"method.lift_to_interner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/structural_impls.rs.html#286-291\">source</a><a href=\"#method.lift_to_interner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/lift/trait.Lift.html#tymethod.lift_to_interner\" class=\"fn\">lift_to_interner</a>(self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"rustc_middle/ty/lift/trait.Lift.html#associatedtype.Lifted\" title=\"type rustc_middle::ty::lift::Lift::Lifted\">Lifted</a>&gt;</h4></section></div></details>","Lift<TyCtxt<'tcx>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MirVisitable%3C'tcx%3E-for-Option%3CTerminator%3C'tcx%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/mir/visit.rs.html#1254-1258\">source</a><a href=\"#impl-MirVisitable%3C'tcx%3E-for-Option%3CTerminator%3C'tcx%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/mir/visit/trait.MirVisitable.html\" title=\"trait rustc_middle::mir::visit::MirVisitable\">MirVisitable</a>&lt;'tcx&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/mir/terminator/struct.Terminator.html\" title=\"struct rustc_middle::mir::terminator::Terminator\">Terminator</a>&lt;'tcx&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/mir/visit.rs.html#1255-1257\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/mir/visit/trait.MirVisitable.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;self, location: <a class=\"struct\" href=\"rustc_middle/mir/struct.Location.html\" title=\"struct rustc_middle::mir::Location\">Location</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"rustc_middle/mir/visit/trait.Visitor.html\" title=\"trait rustc_middle::mir::visit::Visitor\">Visitor</a>&lt;'tcx&gt;)</h4></section></div></details>","MirVisitable<'tcx>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3C%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1882\">source</a><a href=\"#impl-Option%3C%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0, const unstable\">1.35.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1898-1900\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.copied\" class=\"fn\">copied</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents of the\noption.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">12</span>;\n<span class=\"kw\">let </span>opt_x = <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(opt_x, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">12</span>));\n<span class=\"kw\">let </span>copied = opt_x.copied();\n<span class=\"macro\">assert_eq!</span>(copied, <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1924-1926\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.cloned\" class=\"fn\">cloned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents of the\noption.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">12</span>;\n<span class=\"kw\">let </span>opt_x = <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(opt_x, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">12</span>));\n<span class=\"kw\">let </span>cloned = opt_x.cloned();\n<span class=\"macro\">assert_eq!</span>(cloned, <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>));</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3C%26mut+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1935\">source</a><a href=\"#impl-Option%3C%26mut+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0, const unstable\">1.35.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1951-1953\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.copied\" class=\"fn\">copied</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents of the\noption.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"number\">12</span>;\n<span class=\"kw\">let </span>opt_x = <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span>x);\n<span class=\"macro\">assert_eq!</span>(opt_x, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">12</span>));\n<span class=\"kw\">let </span>copied = opt_x.copied();\n<span class=\"macro\">assert_eq!</span>(copied, <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1975-1977\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.cloned\" class=\"fn\">cloned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents of the\noption.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"number\">12</span>;\n<span class=\"kw\">let </span>opt_x = <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span>x);\n<span class=\"macro\">assert_eq!</span>(opt_x, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">12</span>));\n<span class=\"kw\">let </span>cloned = opt_x.cloned();\n<span class=\"macro\">assert_eq!</span>(cloned, <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>));</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3C(T,+U)%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1857\">source</a><a href=\"#impl-Option%3C(T,+U)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U)</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0\">1.66.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1874\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unzip\" class=\"fn\">unzip</a>(self) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;)</h4></section></summary><div class=\"docblock\"><p>Unzips an option containing a tuple of two options.</p>\n<p>If <code>self</code> is <code>Some((a, b))</code> this method returns <code>(Some(a), Some(b))</code>.\nOtherwise, <code>(None, None)</code> is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"hi\"</span>));\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>::&lt;(u8, u32)&gt;;\n\n<span class=\"macro\">assert_eq!</span>(x.unzip(), (<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hi\"</span>)));\n<span class=\"macro\">assert_eq!</span>(y.unzip(), (<span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">None</span>));</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3COption%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2524\">source</a><a href=\"#impl-Option%3COption%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0, const unstable\">1.40.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2552\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;Option&lt;T&gt;&gt;</code> to <code>Option&lt;T&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"prelude-ty\">Option</span>&lt;u32&gt;&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>), x.flatten());\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"prelude-ty\">Option</span>&lt;u32&gt;&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, x.flatten());\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"prelude-ty\">Option</span>&lt;u32&gt;&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, x.flatten());</code></pre></div>\n<p>Flattening only removes one level of nesting at a time:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"prelude-ty\">Option</span>&lt;<span class=\"prelude-ty\">Option</span>&lt;u32&gt;&gt;&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"prelude-val\">Some</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>)));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>)), x.flatten());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>), x.flatten().flatten());</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3CResult%3CT,+E%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1986\">source</a><a href=\"#impl-Option%3CResult%3CT,+E%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transpose\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2006\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.transpose\" class=\"fn\">transpose</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, E&gt;</h4></section></summary><div class=\"docblock\"><p>Transposes an <code>Option</code> of a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result</code></a> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result</code></a> of an <code>Option</code>.</p>\n<p><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> will be mapped to <code><a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\">Ok</a>(<a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\">None</a>)</code>.\n<code><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\">Some</a>(<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\">Ok</a>(_))</code> and <code><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\">Some</a>(<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\">Err</a>(_))</code> will be mapped to\n<code><a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\">Ok</a>(<a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\">Some</a>(_))</code> and <code><a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\">Err</a>(_)</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[derive(Debug, Eq, PartialEq)]\n</span><span class=\"kw\">struct </span>SomeErr;\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Result</span>&lt;<span class=\"prelude-ty\">Option</span>&lt;i32&gt;, SomeErr&gt; = <span class=\"prelude-val\">Ok</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"prelude-ty\">Result</span>&lt;i32, SomeErr&gt;&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"prelude-val\">Ok</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(x, y.transpose());</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#589\">source</a><a href=\"#impl-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#609\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some\" class=\"fn\">is_some</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some_and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#630\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some_and\" class=\"fn\">is_some_and</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> and the value inside of it matches a predicate.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#653\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none\" class=\"fn\">is_none</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> value.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none_or\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#676\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none_or\" class=\"fn\">is_none_or</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>is_none_or</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> or the value inside of it matches a predicate.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(is_none_or)]\n\n</span><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#710\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>\nwithout moving the <a href=\"../../std/string/struct.String.html\" title=\"String\"><code>String</code></a>. The <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map\" title=\"method core::option::Option::map\"><code>map</code></a> method takes the <code>self</code> argument by value,\nconsuming the original, so this technique uses <code>as_ref</code> to first take an <code>Option</code> to a\nreference to the value inside the original.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>text: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Hello, world!\"</span>.to_string());\n<span class=\"comment\">// First, cast `Option&lt;String&gt;` to `Option&lt;&amp;String&gt;` with `as_ref`,\n// then consume *that* with `map`, leaving `text` on the stack.\n</span><span class=\"kw\">let </span>text_length: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = text.as_ref().map(|s| s.len());\n<span class=\"macro\">println!</span>(<span class=\"string\">\"still can print text: {text:?}\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">match </span>x.as_mut() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#746\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_ref\" class=\"fn\">as_pin_ref</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#762\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_mut\" class=\"fn\">as_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#808\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice of the contained value, if any. If this is <code>None</code>, an\nempty slice is returned. This can be useful to have a single type of\niterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;T&gt;</code> and wish to get a slice of <code>T</code>,\nyou can unpack it via <code>opt.map_or(&amp;[], std::slice::from_ref)</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_slice(), <span class=\"prelude-val\">None</span>.as_slice()],\n    [<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;</span>[][..]],\n);</code></pre></div>\n<p>The inverse of this function is (discounting\nborrowing) <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first\" title=\"method slice::first\"><code>[_]::first</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">for </span>i <span class=\"kw\">in </span>[<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234_u16</span>), <span class=\"prelude-val\">None</span>] {\n    <span class=\"macro\">assert_eq!</span>(i.as_ref(), i.as_slice().first());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#863\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice of the contained value, if any. If this is\n<code>None</code>, an empty slice is returned. This can be useful to have a\nsingle type of iterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;mut T&gt;</code> instead of a\n<code>&amp;mut Option&lt;T&gt;</code>, which this method takes, you can obtain a mutable\nslice via <code>opt.map_or(&amp;mut [], std::slice::from_mut)</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_mut_slice(), <span class=\"prelude-val\">None</span>.as_mut_slice()],\n    [<span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;mut </span>[][..]],\n);</code></pre></div>\n<p>The result is a mutable slice of zero or one items that points into\nour original <code>Option</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>);\nx.as_mut_slice()[<span class=\"number\">0</span>] += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1235</span>));</code></pre></div>\n<p>The inverse of this method (discounting borrowing)\nis <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first_mut\" title=\"method slice::first_mut\"><code>[_]::first_mut</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">123</span>).as_mut_slice().first_mut(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">123</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#930\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.expect\" class=\"fn\">expect</a>(self, msg: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the value is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> with a custom panic message provided by\n<code>msg</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"value\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.expect(<span class=\"string\">\"fruits are healthy\"</span>), <span class=\"string\">\"value\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\nx.expect(<span class=\"string\">\"fruits are healthy\"</span>); <span class=\"comment\">// panics with `fruits are healthy`</span></code></pre></div>\n<h5 id=\"recommended-message-style\"><a class=\"doc-anchor\" href=\"#recommended-message-style\">§</a>Recommended Message Style</h5>\n<p>We recommend that <code>expect</code> messages are used to describe the reason you\n<em>expect</em> the <code>Option</code> should be <code>Some</code>.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>item = slice.get(<span class=\"number\">0</span>)\n    .expect(<span class=\"string\">\"slice should not be empty\"</span>);</code></pre></div>\n<p><strong>Hint</strong>: If you’re having trouble remembering how to phrase expect\nerror messages remember to focus on the word “should” as in “env\nvariable should be set by blah” or “the given binary should be available\nand executable by the current user”.</p>\n<p>For more detail on expect message styles and the reasoning behind our\nrecommendation please refer to the section on <a href=\"../../std/error/index.html#common-message-styles\">“Common Message\nStyles”</a> in the <a href=\"../../std/error/index.html\"><code>std::error</code></a> module docs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#967\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<p>Because this function may panic, its use is generally discouraged.\nInstead, prefer to use pattern matching and handle the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\ncase explicitly, or call <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or\" title=\"method core::option::Option::unwrap_or\"><code>unwrap_or</code></a>, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>, or\n<a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_default\" title=\"method core::option::Option::unwrap_or_default\"><code>unwrap_or_default</code></a>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the self value equals <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>); <span class=\"comment\">// fails</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#990\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or\" class=\"fn\">unwrap_or</a>(self, default: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a provided default.</p>\n<p>Arguments passed to <code>unwrap_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"car\"</span>).unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"car\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"bike\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1009-1011\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_else\" class=\"fn\">unwrap_or_else</a>&lt;F&gt;(self, f: F) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or computes it from a closure.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">10</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">20</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_default\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1040-1042\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_default\" class=\"fn\">unwrap_or_default</a>(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a default.</p>\n<p>Consumes the <code>self</code> argument then, if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, returns the contained\nvalue, otherwise if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, returns the <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" title=\"associated function core::default::Default::default\">default value</a> for that\ntype.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.unwrap_or_default(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(y.unwrap_or_default(), <span class=\"number\">12</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const unstable\">1.58.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1074\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_unchecked\" class=\"fn\">unwrap_unchecked</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value,\nwithout checking that the value is not <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Calling this method on <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is <em><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\">undefined behavior</a></em>.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>); <span class=\"comment\">// Undefined behavior!</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1105-1107\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a contained value (if <code>Some</code>) or returns <code>None</code> (if <code>None</code>).</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an\n<code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>, consuming the original:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>maybe_some_string = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, World!\"</span>));\n<span class=\"comment\">// `Option::map` takes self *by value*, consuming `maybe_some_string`\n</span><span class=\"kw\">let </span>maybe_some_len = maybe_some_string.map(|s| s.len());\n<span class=\"macro\">assert_eq!</span>(maybe_some_len, <span class=\"prelude-val\">Some</span>(<span class=\"number\">13</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map(|s| s.len()), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1135\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>),</div></h4></section></summary><div class=\"docblock\"><p>Calls a function with a reference to the contained value if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<p>Returns the original option.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>list = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n\n<span class=\"comment\">// prints \"got: 2\"\n</span><span class=\"kw\">let </span>x = list\n    .get(<span class=\"number\">1</span>)\n    .inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>))\n    .expect(<span class=\"string\">\"list should be long enough\"</span>);\n\n<span class=\"comment\">// prints nothing\n</span>list.get(<span class=\"number\">5</span>).inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1164-1166\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or\" class=\"fn\">map_or</a>&lt;U, F&gt;(self, default: U, f: F) -&gt; U<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Returns the provided default result (if none),\nor applies a function to the contained value (if any).</p>\n<p>Arguments passed to <code>map_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map_or_else\" title=\"method core::option::Option::map_or_else\"><code>map_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1209-1212\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or_else\" class=\"fn\">map_or_else</a>&lt;U, D, F&gt;(self, default: D, f: F) -&gt; U<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; U,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Computes a default function result (if none), or\napplies a different function to the contained value (if any).</p>\n<h5 id=\"basic-examples\"><a class=\"doc-anchor\" href=\"#basic-examples\">§</a>Basic examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">21</span>;\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n<h5 id=\"handling-a-result-based-fallback\"><a class=\"doc-anchor\" href=\"#handling-a-result-based-fallback\">§</a>Handling a Result-based fallback</h5>\n<p>A somewhat common occurrence when dealing with optional values\nin combination with <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a> is the case where one wants to invoke\na fallible fallback if the option is not present.  This example\nparses a command line argument (if present), or the contents of a file to\nan integer.  However, unlike accessing the command line argument, reading\nthe file is fallible, so it must be wrapped with <code>Ok</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v: u64 = std::env::args()\n   .nth(<span class=\"number\">1</span>)\n   .map_or_else(|| std::fs::read_to_string(<span class=\"string\">\"/etc/someconfig.conf\"</span>), <span class=\"prelude-val\">Ok</span>)<span class=\"question-mark\">?\n   </span>.parse()<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1243\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or\" class=\"fn\">ok_or</a>&lt;E&gt;(self, err: E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;</h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err)</code></a>.</p>\n<p>Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.ok_or_else\" title=\"method core::option::Option::ok_or_else\"><code>ok_or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1268-1270\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or_else\" class=\"fn\">ok_or_else</a>&lt;E, F&gt;(self, err: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; E,</div></h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err())</code></a>.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1294-1296\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref\" class=\"fn\">as_deref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to <code>Option&lt;&amp;T::Target&gt;</code>.</p>\n<p>Leaves the original Option in-place, creating a new one with a reference\nto the original one, additionally coercing the contents via <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\"><code>Deref</code></a>.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1320-1322\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref_mut\" class=\"fn\">as_deref_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to <code>Option&lt;&amp;mut T::Target&gt;</code>.</p>\n<p>Leaves the original <code>Option</code> in-place, creating a new one containing a mutable reference to\nthe inner type’s <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"associated type core::ops::deref::Deref::Target\"><code>Deref::Target</code></a> type.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref_mut().map(|x| {\n    x.make_ascii_uppercase();\n    x\n}), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"HEY\"</span>.to_owned().as_mut_str()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1348\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.Iter.html\" title=\"struct core::option::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the possibly contained value.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">4</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1369\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IterMut.html\" title=\"struct core::option::IterMut\">IterMut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable iterator over the possibly contained value.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"kw\">match </span>x.iter_mut().next() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter_mut().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1406\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and\" class=\"fn\">and</a>&lt;U&gt;(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>and</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.and_then\" title=\"method core::option::Option::and_then\"><code>and_then</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1445-1447\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and_then\" class=\"fn\">and_then</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>f</code> with the\nwrapped value and returns the result.</p>\n<p>Some languages call this operation flatmap.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>sq_then_to_string(x: u32) -&gt; <span class=\"prelude-ty\">Option</span>&lt;String&gt; {\n    x.checked_mul(x).map(|sq| sq.to_string())\n}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>.to_string()));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">1_000_000</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>); <span class=\"comment\">// overflowed!\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Often used to chain fallible operations that may return <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>arr_2d = [[<span class=\"string\">\"A0\"</span>, <span class=\"string\">\"A1\"</span>], [<span class=\"string\">\"B0\"</span>, <span class=\"string\">\"B1\"</span>]];\n\n<span class=\"kw\">let </span>item_0_1 = arr_2d.get(<span class=\"number\">0</span>).and_then(|row| row.get(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(item_0_1, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"A1\"</span>));\n\n<span class=\"kw\">let </span>item_2_0 = arr_2d.get(<span class=\"number\">2</span>).and_then(|row| row.get(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(item_2_0, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1481-1483\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>predicate</code>\nwith the wrapped value and returns:</p>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(t)</code></a> if <code>predicate</code> returns <code>true</code> (where <code>t</code> is the wrapped\nvalue), and</li>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>predicate</code> returns <code>false</code>.</li>\n</ul>\n<p>This function works similar to <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.filter\" title=\"method core::iter::traits::iterator::Iterator::filter\"><code>Iterator::filter()</code></a>. You can imagine\nthe <code>Option&lt;T&gt;</code> being an iterator over one or zero elements. <code>filter()</code>\nlets you decide which elements to keep.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>is_even(n: <span class=\"kw-2\">&amp;</span>i32) -&gt; bool {\n    n % <span class=\"number\">2 </span>== <span class=\"number\">0\n</span>}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>).filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).filter(is_even), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1522\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or\" class=\"fn\">or</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.or_else\" title=\"method core::option::Option::or_else\"><code>or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1544-1546\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or_else\" class=\"fn\">or_else</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise calls <code>f</code> and\nreturns the result.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>nobody() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">None </span>}\n<span class=\"kw\">fn </span>vikings() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>) }\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>).or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(nobody), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1577\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.xor\" class=\"fn\">xor</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> if exactly one of <code>self</code>, <code>optb</code> is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, otherwise returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1611\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option, then returns a mutable reference to it.</p>\n<p>If the option already contains a value, the old value is dropped.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.get_or_insert\" title=\"method core::option::Option::get_or_insert\"><code>Option::get_or_insert</code></a>, which doesn’t update the value if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>opt = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">1</span>);\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">2</span>);\n<span class=\"kw-2\">*</span>val = <span class=\"number\">3</span>;\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1640\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert\" class=\"fn\">get_or_insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.insert\" title=\"method core::option::Option::insert\"><code>Option::insert</code></a>, which updates the value even if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert(<span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_default\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1671-1673\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_default\" class=\"fn\">get_or_insert_default</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_get_or_insert_default</code>)</span></div></span></summary><div class=\"docblock\"><p>Inserts the default value into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_get_or_insert_default)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_default();\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">0</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_with\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1697-1699\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_with\" class=\"fn\">get_or_insert_with</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Inserts a value computed from <code>f</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nthen returns a mutable reference to the contained value.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_with(|| <span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, leaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> in its place.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_if\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1763-1765\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take_if\" class=\"fn\">take_if</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, but only if the predicate evaluates to\n<code>true</code> on a mutable reference to the value.</p>\n<p>In other words, replaces <code>self</code> with <code>None</code> if the predicate returns <code>true</code>.\nThis method operates similar to <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.take\" title=\"method core::option::Option::take\"><code>Option::take</code></a> but conditional.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw\">if </span><span class=\"kw-2\">*</span>v == <span class=\"number\">42 </span>{\n    <span class=\"kw-2\">*</span>v += <span class=\"number\">1</span>;\n    <span class=\"bool-val\">false\n</span>} <span class=\"kw\">else </span>{\n    <span class=\"bool-val\">false\n</span>});\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw-2\">*</span>v == <span class=\"number\">43</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0, const unstable\">1.31.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1790\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Replaces the actual value in the option by the value given in parameter,\nreturning the old value if present,\nleaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> in its place without deinitializing either one.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1810\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Zips <code>self</code> with another <code>Option</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some((s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hi\"</span>);\n<span class=\"kw\">let </span>z = <span class=\"prelude-val\">None</span>::&lt;u8&gt;;\n\n<span class=\"macro\">assert_eq!</span>(x.zip(y), <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"hi\"</span>)));\n<span class=\"macro\">assert_eq!</span>(x.zip(z), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_with\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1846-1848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip_with\" class=\"fn\">zip_with</a>&lt;U, F, R&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T, U) -&gt; R,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_zip</code>)</span></div></span></summary><div class=\"docblock\"><p>Zips <code>self</code> and another <code>Option</code> with function <code>f</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some(f(s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_zip)]\n\n#[derive(Debug, PartialEq)]\n</span><span class=\"kw\">struct </span>Point {\n    x: f64,\n    y: f64,\n}\n\n<span class=\"kw\">impl </span>Point {\n    <span class=\"kw\">fn </span>new(x: f64, y: f64) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self </span>{ x, y }\n    }\n}\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">17.5</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42.7</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.zip_with(y, Point::new), <span class=\"prelude-val\">Some</span>(Point { x: <span class=\"number\">17.5</span>, y: <span class=\"number\">42.7 </span>}));\n<span class=\"macro\">assert_eq!</span>(x.zip_with(<span class=\"prelude-val\">None</span>, Point::new), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2221\">source</a></span><a href=\"#impl-Ord-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2223\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#855-857\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#876-878\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterizedOverTcx-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/parameterized.rs.html#16-18\">source</a><a href=\"#impl-ParameterizedOverTcx-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt; <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" class=\"associatedtype\">Value</a>&lt;'tcx&gt; = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" title=\"type rustc_middle::ty::parameterized::ParameterizedOverTcx::Value\">Value</a>&lt;'tcx&gt;&gt;</h4></section></div></details>","ParameterizedOverTcx","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2190\">source</a></span><a href=\"#impl-PartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2192\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2208\">source</a></span><a href=\"#impl-PartialOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2210\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#244-246\">source</a></span><a href=\"#impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#265-267\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the product of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This multiplies each number in a vector of strings,\nif a string could not be parsed the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n<span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Product<Option<U>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Residual%3CT%3E-for-Option%3CInfallible%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2520\">source</a><a href=\"#impl-Residual%3CT%3E-for-Option%3CInfallible%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;T&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.TryType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TryType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" class=\"associatedtype\">TryType</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2_residual</code>)</span></div></span><div class='docblock'>The “return” type of this meta-function.</div></details></div></details>","Residual<T>","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#99-101\">source</a><a href=\"#impl-Serialize-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#104-106\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableOrd-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#472\">source</a><a href=\"#impl-StableOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#473\">source</a><a href=\"#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"constant\">CAN_USE_UNSTABLE_SORT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::CAN_USE_UNSTABLE_SORT</h4></section><details class=\"toggle\" open><summary><section id=\"associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#476\">source</a><a href=\"#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"constant\">THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> = ()</h4></section></summary><div class='docblock'>Marker to ensure that implementors have carefully considered\nwhether their <code>Ord</code> implementation obeys this trait’s contract.</div></details></div></details>","StableOrd","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#214-216\">source</a></span><a href=\"#impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#235-237\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the sum of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This sums up the position of the character ‘a’ in a vector of strings,\nif a word did not have the character ‘a’ the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"great\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"good\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Sum<Option<U>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToJson-for-Option%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#86\">source</a><a href=\"#impl-ToJson-for-Option%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_json\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#87\">source</a><a href=\"#method.to_json\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_target/json/trait.ToJson.html#tymethod.to_json\" class=\"fn\">to_json</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.117/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a></h4></section></div></details>","ToJson","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Try-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2482\">source</a><a href=\"#impl-Try-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value produced by <code>?</code> when <em>not</em> short-circuiting.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Residual\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Residual\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" class=\"associatedtype\">Residual</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value passed to <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" title=\"associated function core::ops::try_trait::FromResidual::from_residual\"><code>FromResidual::from_residual</code></a>\nas part of <code>?</code> when short-circuiting. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_output\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2487\">source</a><a href=\"#method.from_output\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\" class=\"fn\">from_output</a>(output: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from its <code>Output</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.branch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2492\">source</a><a href=\"#method.branch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\" class=\"fn\">branch</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;, T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Used in <code>?</code> to decide whether the operator should produce a value\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Continue\" title=\"variant core::ops::control_flow::ControlFlow::Continue\"><code>ControlFlow::Continue</code></a>)\nor propagate a value back to the caller\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Break\" title=\"variant core::ops::control_flow::ControlFlow::Break\"><code>ControlFlow::Break</code></a>). <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\">Read more</a></div></details></div></details>","Try","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#258\">source</a><a href=\"#impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_middle/ty/trait.Interner.html\" title=\"trait rustc_middle::ty::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#259\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;F as <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_middle/ty/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#90\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<I>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#149\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_middle/ty/trait.Interner.html\" title=\"trait rustc_middle::ty::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#150\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_middle::ty::TypeVisitor::Result\">Result</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_middle/ty/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnifyValue-for-Option%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#585\">source</a><a href=\"#impl-UnifyValue-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a></h4></section></summary><div class='docblock'>Defines the type to return when merging of two values fails.\nIf merging is infallible, use the special struct <code>NoError</code>\nfound in this crate, which unlocks various more convenient\nmethods on the unification table.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unify_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#588\">source</a><a href=\"#method.unify_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#tymethod.unify_values\" class=\"fn\">unify_values</a>(\n    a: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n    b: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Given two values, produce a new value that combines them.\nIf that is not possible, produce an error.</div></details></div></details>","UnifyValue","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#740\">source</a><a href=\"#impl-Value-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#741\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#93\">source</a><a href=\"#impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\" class=\"fn\">transform</a>(&amp;'a self) -&gt; &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\" class=\"fn\">transform_owned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\" class=\"fn\">make</a>(from: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\" class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\">Read more</a></div></details></div></details>","Yokeable<'a>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#98\">source</a><a href=\"#impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, C, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#99\">source</a><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html#tymethod.zero_from\" class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, Option<C>>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/map/kv.rs.html#76-78\">source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\">ZeroVec</a>&lt;'a, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = &lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt; as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<section id=\"impl-CloneableCart-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/yoke.rs.html#661\">source</a><a href=\"#impl-CloneableCart-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a>,</div></h3></section>","CloneableCart","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<section id=\"impl-Copy-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Copy-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<section id=\"impl-Eq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Eq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<section id=\"impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2188\">source</a></span><a href=\"#impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section>","StructuralPartialEq","rustc_middle::thir::UserTy","rustc_middle::query::queries::opt_hir_owner_nodes::Value","rustc_middle::query::queries::opt_hir_owner_nodes::ProvidedValue","rustc_middle::query::queries::check_expectations::Key","rustc_middle::query::queries::check_expectations::LocalKey","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::adt_destructor::Value","rustc_middle::query::queries::adt_destructor::ProvidedValue","rustc_middle::query::queries::adt_async_destructor::Value","rustc_middle::query::queries::adt_async_destructor::ProvidedValue","rustc_middle::query::queries::adt_sized_constraint::Value","rustc_middle::query::queries::adt_sized_constraint::ProvidedValue","rustc_middle::query::queries::coroutine_kind::Value","rustc_middle::query::queries::coroutine_kind::ProvidedValue","rustc_middle::query::queries::associated_type_for_effects::Value","rustc_middle::query::queries::associated_type_for_effects::ProvidedValue","rustc_middle::query::queries::impl_trait_header::Value","rustc_middle::query::queries::impl_trait_header::ProvidedValue","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::Value","rustc_middle::query::queries::self_ty_of_trait_impl_enabling_order_dep_trait_object_hack::ProvidedValue","rustc_middle::query::queries::tag_for_variant::Value","rustc_middle::query::queries::tag_for_variant::ProvidedValue","rustc_middle::query::queries::def_ident_span::Value","rustc_middle::query::queries::def_ident_span::ProvidedValue","rustc_middle::query::queries::lookup_stability::Value","rustc_middle::query::queries::lookup_stability::ProvidedValue","rustc_middle::query::queries::lookup_const_stability::Value","rustc_middle::query::queries::lookup_const_stability::ProvidedValue","rustc_middle::query::queries::lookup_default_body_stability::Value","rustc_middle::query::queries::lookup_default_body_stability::ProvidedValue","rustc_middle::query::queries::lookup_deprecation_entry::Value","rustc_middle::query::queries::lookup_deprecation_entry::ProvidedValue","rustc_middle::query::queries::rendered_precise_capturing_args::Value","rustc_middle::query::queries::rendered_precise_capturing_args::ProvidedValue","rustc_middle::query::queries::impl_parent::Value","rustc_middle::query::queries::impl_parent::ProvidedValue","rustc_middle::query::queries::supertrait_vtable_slot::Value","rustc_middle::query::queries::supertrait_vtable_slot::ProvidedValue","rustc_middle::query::queries::required_panic_strategy::Value","rustc_middle::query::queries::required_panic_strategy::ProvidedValue","rustc_middle::query::queries::extern_crate::Value","rustc_middle::query::queries::extern_crate::ProvidedValue","rustc_middle::query::queries::in_scope_traits_map::Value","rustc_middle::query::queries::in_scope_traits_map::ProvidedValue","rustc_middle::query::queries::upstream_monomorphizations_for::Value","rustc_middle::query::queries::upstream_monomorphizations_for::ProvidedValue","rustc_middle::query::queries::upstream_drop_glue_for::Value","rustc_middle::query::queries::upstream_drop_glue_for::ProvidedValue","rustc_middle::query::queries::upstream_async_drop_glue_for::Value","rustc_middle::query::queries::upstream_async_drop_glue_for::ProvidedValue","rustc_middle::query::queries::entry_fn::Value","rustc_middle::query::queries::entry_fn::ProvidedValue","rustc_middle::query::queries::proc_macro_decls_static::Value","rustc_middle::query::queries::proc_macro_decls_static::ProvidedValue","rustc_middle::query::queries::crate_host_hash::Value","rustc_middle::query::queries::crate_host_hash::ProvidedValue","rustc_middle::query::queries::native_library::Value","rustc_middle::query::queries::native_library::ProvidedValue","rustc_middle::query::queries::named_variable_map::Value","rustc_middle::query::queries::named_variable_map::ProvidedValue","rustc_middle::query::queries::is_late_bound_map::Value","rustc_middle::query::queries::is_late_bound_map::ProvidedValue","rustc_middle::query::queries::late_bound_vars_map::Value","rustc_middle::query::queries::late_bound_vars_map::ProvidedValue","rustc_middle::query::queries::extern_mod_stmt_cnum::Value","rustc_middle::query::queries::extern_mod_stmt_cnum::ProvidedValue","rustc_middle::query::queries::intrinsic_raw::Value","rustc_middle::query::queries::intrinsic_raw::ProvidedValue","rustc_middle::query::queries::allocator_kind::Value","rustc_middle::query::queries::allocator_kind::ProvidedValue","rustc_middle::query::queries::alloc_error_handler_kind::Value","rustc_middle::query::queries::alloc_error_handler_kind::ProvidedValue","rustc_middle::query::queries::upvars_mentioned::Value","rustc_middle::query::queries::upvars_mentioned::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<section id=\"impl-Unaligned-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-Unaligned-for-Option%3CNonZero%3Ci8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\">Unaligned</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;</h3></section>","Unaligned","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"],["<section id=\"impl-Unaligned-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3300-3333\">source</a><a href=\"#impl-Unaligned-for-Option%3CNonZero%3Cu8%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\">Unaligned</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h3></section>","Unaligned","rustc_middle::query::queries::mir_coroutine_witnesses::ProvidedValue","rustc_middle::query::queries::diagnostic_hir_wf_check::ProvidedValue"]],
"rustc_query_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#99\">source</a><a href=\"#impl-AsULE-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" class=\"associatedtype\">ULE</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#101\">source</a><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\" class=\"fn\">to_unaligned</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#105\">source</a><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\" class=\"fn\">from_unaligned</a>(other: <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionULE.html\" title=\"struct zerovec::ule::option::OptionULE\">OptionULE</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\">Read more</a></div></details></div></details>","AsULE","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2038-2040\">source</a></span><a href=\"#impl-Clone-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2043\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2051\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Debug-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#373\">source</a><a href=\"#impl-Decodable%3CD%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decoder.html\" title=\"trait rustc_serialize::serialize::Decoder\">Decoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#374\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","Decodable<D>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2060\">source</a></span><a href=\"#impl-Default-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2070\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>opt: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = Option::default();\n<span class=\"macro\">assert!</span>(opt.is_none());</code></pre></div>\n</div></details></div></details>","Default","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#927-929\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/de/impls.rs.html#931-933\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DummyAstNode-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1699\">source</a><a href=\"#impl-DummyAstNode-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/mut_visit/trait.DummyAstNode.html\" title=\"trait rustc_ast::mut_visit::DummyAstNode\">DummyAstNode</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dummy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/mut_visit.rs.html#1700\">source</a><a href=\"#method.dummy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/mut_visit/trait.DummyAstNode.html#tymethod.dummy\" class=\"fn\">dummy</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></div></details>","DummyAstNode","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#361\">source</a><a href=\"#impl-Encodable%3CS%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encoder.html\" title=\"trait rustc_serialize::serialize::Encoder\">Encoder</a>,\n    T: <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_serialize/serialize.rs.html#362\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_serialize/serialize/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></div></details>","Encodable<S>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#206-209\">source</a><a href=\"#impl-EncodeAsVarULE%3COptionVarULE%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;<a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/option/struct.OptionVarULE.html\" title=\"struct zerovec::ule::option::OptionVarULE\">OptionVarULE</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#211\">source</a><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\" class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#217\">source</a><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/ule/option.rs.html#228\">source</a><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_write\" class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" title=\"method zerovec::ule::encode::EncodeAsVarULE::encode_var_ule_len::encode_var_ule_len\"><code>Self::encode_var_ule_len()</code></a></div></details></div></details>","EncodeAsVarULE<OptionVarULE<U>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2120\">source</a></span><a href=\"#impl-From%3CT%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2130\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Moves <code>val</code> into a new <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>o: <span class=\"prelude-ty\">Option</span>&lt;u8&gt; = Option::from(<span class=\"number\">67</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">67</span>), o);</code></pre></div>\n</div></details></div></details>","From<T>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2411\">source</a></span><a href=\"#impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2473\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nno further elements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is\nreturned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> occur, a container of type\n<code>V</code> containing the values of each <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a> is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Here is an example which increments every integer in a vector.\nWe use the checked variant of <code>add</code> that returns <code>None</code> when the\ncalculation would result in an overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">0_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_add(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">Some</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));</code></pre></div>\n<p>As you can see, this will return the expected, valid items.</p>\n<p>Here is another example that tries to subtract one from another list\nof integers, this time checking for underflow:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">2_u16</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| x.checked_sub(<span class=\"number\">1</span>))\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Since the last element is zero, it would underflow. Thus, the resulting\nvalue is <code>None</code>.</p>\n<p>Here is a variation on the previous example, showing that no\nfurther elements are taken from <code>iter</code> after the first <code>None</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>items = <span class=\"macro\">vec!</span>[<span class=\"number\">3_u16</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>];\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>shared = <span class=\"number\">0</span>;\n\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Option</span>&lt;Vec&lt;u16&gt;&gt; = items\n    .iter()\n    .map(|x| { shared += x; x.checked_sub(<span class=\"number\">2</span>) })\n    .collect();\n\n<span class=\"macro\">assert_eq!</span>(res, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(shared, <span class=\"number\">6</span>);</code></pre></div>\n<p>Since the third element caused an underflow, no further elements were taken,\nso the final value of <code>shared</code> is 6 (= <code>3 + 2 + 1</code>), not 16.</p>\n</div></details></div></details>","FromIterator<Option<A>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#173-176\">source</a><a href=\"#impl-FromParallelIterator%3COption%3CT%3E%3E-for-Option%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"docblock\"><p>Collect an arbitrary <code>Option</code>-wrapped collection.</p>\n<p>If any item is <code>None</code>, then all previous items collected are discarded,\nand it returns only <code>None</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#178-180\">source</a><a href=\"#method.from_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\" class=\"fn\">from_par_iter</a>&lt;I&gt;(par_iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of the collection from the parallel iterator <code>par_iter</code>. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\">Read more</a></div></details></div></details>","FromParallelIterator<Option<T>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2512\">source</a><a href=\"#impl-FromResidual%3CYeet%3C()%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2514\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(_: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/struct.Yeet.html\" title=\"struct core::ops::try_trait::Yeet\">Yeet</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual<Yeet<()>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromResidual-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2501\">source</a><a href=\"#impl-FromResidual-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html\" title=\"trait core::ops::try_trait::FromResidual\">FromResidual</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_residual\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2503\">source</a><a href=\"#method.from_residual\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" class=\"fn\">from_residual</a>(residual: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from a compatible <code>Residual</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\">Read more</a></div></details></div></details>","FromResidual","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-Option%3Cfn(K,+L)+-%3E+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#3335-3370\">source</a><a href=\"#impl-FromZeroes-for-Option%3Cfn(K,+L)+-%3E+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, L, M&gt; <a class=\"trait\" href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: K, _: L) -&gt; M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1416\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerocopy/0.7.34/src/zerocopy/lib.rs.html#1456-1458\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"https://docs.rs/zerocopy/0.7.34/zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasAttrs-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#304\">source</a><a href=\"#impl-HasAttrs-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasAttrs.html\" title=\"trait rustc_ast::ast_traits::HasAttrs\">HasAttrs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#305\">source</a><a href=\"#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\" class=\"constant\">SUPPORTS_CUSTOM_INNER_ATTRS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::SUPPORTS_CUSTOM_INNER_ATTRS</h4></section></summary><div class='docblock'>This is <code>true</code> if this <code>HasAttrs</code> might support ‘custom’ (proc-macro) inner\nattributes. Attributes like <code>#![cfg]</code> and <code>#![cfg_attr]</code> are not\nconsidered ‘custom’ attributes. <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#associatedconstant.SUPPORTS_CUSTOM_INNER_ATTRS\">Read more</a></div></details><section id=\"method.attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#306\">source</a><a href=\"#method.attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.attrs\" class=\"fn\">attrs</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>]</h4></section><section id=\"method.visit_attrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#309\">source</a><a href=\"#method.visit_attrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasAttrs.html#tymethod.visit_attrs\" class=\"fn\">visit_attrs</a>(&amp;mut self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"struct\" href=\"https://docs.rs/thin-vec/0.2.13/thin_vec/struct.ThinVec.html\" title=\"struct thin_vec::ThinVec\">ThinVec</a>&lt;<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>&gt;))</h4></section></div></details>","HasAttrs","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasTokens-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#140\">source</a><a href=\"#impl-HasTokens-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_ast/ast_traits/trait.HasTokens.html\" title=\"trait rustc_ast::ast_traits::HasTokens\">HasTokens</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#141\">source</a><a href=\"#method.tokens\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens\" class=\"fn\">tokens</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;</h4></section><section id=\"method.tokens_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_ast/ast_traits.rs.html#144\">source</a><a href=\"#method.tokens_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_ast/ast_traits/trait.HasTokens.html#tymethod.tokens_mut\" class=\"fn\">tokens_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_ast/tokenstream/struct.LazyAttrTokenStream.html\" title=\"struct rustc_ast::tokenstream::LazyAttrTokenStream\">LazyAttrTokenStream</a>&gt;&gt;</h4></section></div></details>","HasTokens","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Hash-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#457-459\">source</a><a href=\"#impl-HashStable%3CCTX%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, CTX&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;CTX&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#462\">source</a><a href=\"#method.hash_stable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_data_structures/stable_hasher/trait.HashStable.html#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CTX</a>, hasher: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_stable_hash::stable_hasher::StableHasher\">StableHasher</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustc-stable-hash/0.1.0/rustc_stable_hash/sip128/struct.SipHasher128.html\" title=\"struct rustc_stable_hash::sip128::SipHasher128\">SipHasher128</a>&gt;)</h4></section></div></details>","HashStable<CTX>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2076\">source</a></span><a href=\"#impl-IntoIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2094\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a consuming iterator over the possibly contained value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"string\"</span>);\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"string\">\"string\"</span>]);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>v: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.into_iter().collect();\n<span class=\"macro\">assert!</span>(v.is_empty());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#26\">source</a><a href=\"#impl-IntoParallelIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustc-rayon/0.5.0/src/rayon/option.rs.html#30\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"https://docs.rs/rustc-rayon/0.5.0/rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#589\">source</a><a href=\"#impl-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#609\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some\" class=\"fn\">is_some</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some(), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_some_and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#630\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_some_and\" class=\"fn\">is_some_and</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> and the value inside of it matches a predicate.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_some_and(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#653\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none\" class=\"fn\">is_none</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> value.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none(), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_none_or\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#676\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.is_none_or\" class=\"fn\">is_none_or</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>is_none_or</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if the option is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> or the value inside of it matches a predicate.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(is_none_or)]\n\n</span><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.is_none_or(|x| x &gt; <span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.48.0\">1.0.0 (const: 1.48.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#710\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>\nwithout moving the <a href=\"../../std/string/struct.String.html\" title=\"String\"><code>String</code></a>. The <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map\" title=\"method core::option::Option::map\"><code>map</code></a> method takes the <code>self</code> argument by value,\nconsuming the original, so this technique uses <code>as_ref</code> to first take an <code>Option</code> to a\nreference to the value inside the original.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>text: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Hello, world!\"</span>.to_string());\n<span class=\"comment\">// First, cast `Option&lt;String&gt;` to `Option&lt;&amp;String&gt;` with `as_ref`,\n// then consume *that* with `map`, leaving `text` on the stack.\n</span><span class=\"kw\">let </span>text_length: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = text.as_ref().map(|s| s.len());\n<span class=\"macro\">println!</span>(<span class=\"string\">\"still can print text: {text:?}\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">match </span>x.as_mut() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#746\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_ref\" class=\"fn\">as_pin_ref</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"shared reference\">&amp;</a>T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_pin_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0, const unstable\">1.33.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#762\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_pin_mut\" class=\"fn\">as_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code><a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> Option&lt;T&gt;&gt;</code> to <code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\" title=\"mutable reference\">&amp;mut</a> T&gt;&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#808\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice of the contained value, if any. If this is <code>None</code>, an\nempty slice is returned. This can be useful to have a single type of\niterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;T&gt;</code> and wish to get a slice of <code>T</code>,\nyou can unpack it via <code>opt.map_or(&amp;[], std::slice::from_ref)</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_slice(), <span class=\"prelude-val\">None</span>.as_slice()],\n    [<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;</span>[][..]],\n);</code></pre></div>\n<p>The inverse of this function is (discounting\nborrowing) <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first\" title=\"method slice::first\"><code>[_]::first</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">for </span>i <span class=\"kw\">in </span>[<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234_u16</span>), <span class=\"prelude-val\">None</span>] {\n    <span class=\"macro\">assert_eq!</span>(i.as_ref(), i.as_slice().first());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.75.0, const unstable\">1.75.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#863\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice of the contained value, if any. If this is\n<code>None</code>, an empty slice is returned. This can be useful to have a\nsingle type of iterator over an <code>Option</code> or slice.</p>\n<p>Note: Should you have an <code>Option&lt;&amp;mut T&gt;</code> instead of a\n<code>&amp;mut Option&lt;T&gt;</code>, which this method takes, you can obtain a mutable\nslice via <code>opt.map_or(&amp;mut [], std::slice::from_mut)</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    [<span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>).as_mut_slice(), <span class=\"prelude-val\">None</span>.as_mut_slice()],\n    [<span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1234</span>][..], <span class=\"kw-2\">&amp;mut </span>[][..]],\n);</code></pre></div>\n<p>The result is a mutable slice of zero or one items that points into\nour original <code>Option</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1234</span>);\nx.as_mut_slice()[<span class=\"number\">0</span>] += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1235</span>));</code></pre></div>\n<p>The inverse of this method (discounting borrowing)\nis <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.first_mut\" title=\"method slice::first_mut\"><code>[_]::first_mut</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">123</span>).as_mut_slice().first_mut(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">123</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#930\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.expect\" class=\"fn\">expect</a>(self, msg: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the value is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> with a custom panic message provided by\n<code>msg</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"value\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.expect(<span class=\"string\">\"fruits are healthy\"</span>), <span class=\"string\">\"value\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\nx.expect(<span class=\"string\">\"fruits are healthy\"</span>); <span class=\"comment\">// panics with `fruits are healthy`</span></code></pre></div>\n<h5 id=\"recommended-message-style\"><a class=\"doc-anchor\" href=\"#recommended-message-style\">§</a>Recommended Message Style</h5>\n<p>We recommend that <code>expect</code> messages are used to describe the reason you\n<em>expect</em> the <code>Option</code> should be <code>Some</code>.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>item = slice.get(<span class=\"number\">0</span>)\n    .expect(<span class=\"string\">\"slice should not be empty\"</span>);</code></pre></div>\n<p><strong>Hint</strong>: If you’re having trouble remembering how to phrase expect\nerror messages remember to focus on the word “should” as in “env\nvariable should be set by blah” or “the given binary should be available\nand executable by the current user”.</p>\n<p>For more detail on expect message styles and the reasoning behind our\nrecommendation please refer to the section on <a href=\"../../std/error/index.html#common-message-styles\">“Common Message\nStyles”</a> in the <a href=\"../../std/error/index.html\"><code>std::error</code></a> module docs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#967\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value.</p>\n<p>Because this function may panic, its use is generally discouraged.\nInstead, prefer to use pattern matching and handle the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\ncase explicitly, or call <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or\" title=\"method core::option::Option::unwrap_or\"><code>unwrap_or</code></a>, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>, or\n<a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_default\" title=\"method core::option::Option::unwrap_or_default\"><code>unwrap_or_default</code></a>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the self value equals <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"string\">\"air\"</span>); <span class=\"comment\">// fails</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#990\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or\" class=\"fn\">unwrap_or</a>(self, default: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a provided default.</p>\n<p>Arguments passed to <code>unwrap_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.unwrap_or_else\" title=\"method core::option::Option::unwrap_or_else\"><code>unwrap_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"car\"</span>).unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"car\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or(<span class=\"string\">\"bike\"</span>), <span class=\"string\">\"bike\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1009-1011\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_else\" class=\"fn\">unwrap_or_else</a>&lt;F&gt;(self, f: F) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or computes it from a closure.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">10</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.unwrap_or_else(|| <span class=\"number\">2 </span>* k), <span class=\"number\">20</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_default\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1040-1042\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_or_default\" class=\"fn\">unwrap_or_default</a>(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value or a default.</p>\n<p>Consumes the <code>self</code> argument then, if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, returns the contained\nvalue, otherwise if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, returns the <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" title=\"associated function core::default::Default::default\">default value</a> for that\ntype.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"number\">12</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.unwrap_or_default(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(y.unwrap_or_default(), <span class=\"number\">12</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const unstable\">1.58.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/91930\" title=\"Tracking issue for const_option_ext\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1074\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.unwrap_unchecked\" class=\"fn\">unwrap_unchecked</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> value, consuming the <code>self</code> value,\nwithout checking that the value is not <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Calling this method on <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is <em><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\">undefined behavior</a></em>.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"air\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>);</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ x.unwrap_unchecked() }, <span class=\"string\">\"air\"</span>); <span class=\"comment\">// Undefined behavior!</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1105-1107\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a contained value (if <code>Some</code>) or returns <code>None</code> (if <code>None</code>).</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<p>Calculates the length of an <code>Option&lt;<a href=\"../../std/string/struct.String.html\" title=\"String\">String</a>&gt;</code> as an\n<code>Option&lt;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code>, consuming the original:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>maybe_some_string = <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">\"Hello, World!\"</span>));\n<span class=\"comment\">// `Option::map` takes self *by value*, consuming `maybe_some_string`\n</span><span class=\"kw\">let </span>maybe_some_len = maybe_some_string.map(|s| s.len());\n<span class=\"macro\">assert_eq!</span>(maybe_some_len, <span class=\"prelude-val\">Some</span>(<span class=\"number\">13</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map(|s| s.len()), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1135\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>),</div></h4></section></summary><div class=\"docblock\"><p>Calls a function with a reference to the contained value if <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<p>Returns the original option.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>list = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n\n<span class=\"comment\">// prints \"got: 2\"\n</span><span class=\"kw\">let </span>x = list\n    .get(<span class=\"number\">1</span>)\n    .inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>))\n    .expect(<span class=\"string\">\"list should be long enough\"</span>);\n\n<span class=\"comment\">// prints nothing\n</span>list.get(<span class=\"number\">5</span>).inspect(|x| <span class=\"macro\">println!</span>(<span class=\"string\">\"got: {x}\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1164-1166\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or\" class=\"fn\">map_or</a>&lt;U, F&gt;(self, default: U, f: F) -&gt; U<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Returns the provided default result (if none),\nor applies a function to the contained value (if any).</p>\n<p>Arguments passed to <code>map_or</code> are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.map_or_else\" title=\"method core::option::Option::map_or_else\"><code>map_or_else</code></a>,\nwhich is lazily evaluated.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or(<span class=\"number\">42</span>, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1209-1212\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.map_or_else\" class=\"fn\">map_or_else</a>&lt;U, D, F&gt;(self, default: D, f: F) -&gt; U<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; U,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Computes a default function result (if none), or\napplies a different function to the contained value (if any).</p>\n<h5 id=\"basic-examples\"><a class=\"doc-anchor\" href=\"#basic-examples\">§</a>Basic examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>k = <span class=\"number\">21</span>;\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.map_or_else(|| <span class=\"number\">2 </span>* k, |v| v.len()), <span class=\"number\">42</span>);</code></pre></div>\n<h5 id=\"handling-a-result-based-fallback\"><a class=\"doc-anchor\" href=\"#handling-a-result-based-fallback\">§</a>Handling a Result-based fallback</h5>\n<p>A somewhat common occurrence when dealing with optional values\nin combination with <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a> is the case where one wants to invoke\na fallible fallback if the option is not present.  This example\nparses a command line argument (if present), or the contents of a file to\nan integer.  However, unlike accessing the command line argument, reading\nthe file is fallible, so it must be wrapped with <code>Ok</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v: u64 = std::env::args()\n   .nth(<span class=\"number\">1</span>)\n   .map_or_else(|| std::fs::read_to_string(<span class=\"string\">\"/etc/someconfig.conf\"</span>), <span class=\"prelude-val\">Ok</span>)<span class=\"question-mark\">?\n   </span>.parse()<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1243\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or\" class=\"fn\">ok_or</a>&lt;E&gt;(self, err: E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;</h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err)</code></a>.</p>\n<p>Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.ok_or_else\" title=\"method core::option::Option::ok_or_else\"><code>ok_or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1268-1270\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.ok_or_else\" class=\"fn\">ok_or_else</a>&lt;E, F&gt;(self, err: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; E,</div></h4></section></summary><div class=\"docblock\"><p>Transforms the <code>Option&lt;T&gt;</code> into a <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result&lt;T, E&gt;</code></a>, mapping <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(v)</code></a> to\n<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok(v)</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err(err())</code></a>.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1294-1296\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref\" class=\"fn\">as_deref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to <code>Option&lt;&amp;T::Target&gt;</code>.</p>\n<p>Leaves the original Option in-place, creating a new one with a reference\nto the original one, additionally coercing the contents via <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\"><code>Deref</code></a>.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.as_deref(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1320-1322\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.as_deref_mut\" class=\"fn\">as_deref_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to <code>Option&lt;&amp;mut T::Target&gt;</code>.</p>\n<p>Leaves the original <code>Option</code> in-place, creating a new one containing a mutable reference to\nthe inner type’s <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"associated type core::ops::deref::Deref::Target\"><code>Deref::Target</code></a> type.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;String&gt; = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hey\"</span>.to_owned());\n<span class=\"macro\">assert_eq!</span>(x.as_deref_mut().map(|x| {\n    x.make_ascii_uppercase();\n    x\n}), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"HEY\"</span>.to_owned().as_mut_str()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1348\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.Iter.html\" title=\"struct core::option::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the possibly contained value.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">4</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1369\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/option/struct.IterMut.html\" title=\"struct core::option::IterMut\">IterMut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable iterator over the possibly contained value.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>);\n<span class=\"kw\">match </span>x.iter_mut().next() {\n    <span class=\"prelude-val\">Some</span>(v) =&gt; <span class=\"kw-2\">*</span>v = <span class=\"number\">42</span>,\n    <span class=\"prelude-val\">None </span>=&gt; {},\n}\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.iter_mut().next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1406\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and\" class=\"fn\">and</a>&lt;U&gt;(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>and</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.and_then\" title=\"method core::option::Option::and_then\"><code>and_then</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>str&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.and(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1445-1447\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.and_then\" class=\"fn\">and_then</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>f</code> with the\nwrapped value and returns the result.</p>\n<p>Some languages call this operation flatmap.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>sq_then_to_string(x: u32) -&gt; <span class=\"prelude-ty\">Option</span>&lt;String&gt; {\n    x.checked_mul(x).map(|sq| sq.to_string())\n}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>.to_string()));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">1_000_000</span>).and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>); <span class=\"comment\">// overflowed!\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.and_then(sq_then_to_string), <span class=\"prelude-val\">None</span>);</code></pre></div>\n<p>Often used to chain fallible operations that may return <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>arr_2d = [[<span class=\"string\">\"A0\"</span>, <span class=\"string\">\"A1\"</span>], [<span class=\"string\">\"B0\"</span>, <span class=\"string\">\"B1\"</span>]];\n\n<span class=\"kw\">let </span>item_0_1 = arr_2d.get(<span class=\"number\">0</span>).and_then(|row| row.get(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(item_0_1, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"A1\"</span>));\n\n<span class=\"kw\">let </span>item_2_0 = arr_2d.get(<span class=\"number\">2</span>).and_then(|row| row.get(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(item_2_0, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1481-1483\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the option is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, otherwise calls <code>predicate</code>\nwith the wrapped value and returns:</p>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some(t)</code></a> if <code>predicate</code> returns <code>true</code> (where <code>t</code> is the wrapped\nvalue), and</li>\n<li><a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>predicate</code> returns <code>false</code>.</li>\n</ul>\n<p>This function works similar to <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.filter\" title=\"method core::iter::traits::iterator::Iterator::filter\"><code>Iterator::filter()</code></a>. You can imagine\nthe <code>Option&lt;T&gt;</code> being an iterator over one or zero elements. <code>filter()</code>\nlets you decide which elements to keep.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>is_even(n: <span class=\"kw-2\">&amp;</span>i32) -&gt; bool {\n    n % <span class=\"number\">2 </span>== <span class=\"number\">0\n</span>}\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>).filter(is_even), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>).filter(is_even), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1522\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or\" class=\"fn\">or</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise returns <code>optb</code>.</p>\n<p>Arguments passed to <code>or</code> are eagerly evaluated; if you are passing the\nresult of a function call, it is recommended to use <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.or_else\" title=\"method core::option::Option::or_else\"><code>or_else</code></a>, which is\nlazily evaluated.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.or(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_else\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1544-1546\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.or_else\" class=\"fn\">or_else</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the option if it contains a value, otherwise calls <code>f</code> and\nreturns the result.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>nobody() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">None </span>}\n<span class=\"kw\">fn </span>vikings() -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str&gt; { <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>) }\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>).or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"barbarians\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(vikings), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"vikings\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>.or_else(nobody), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1577\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.xor\" class=\"fn\">xor</a>(self, optb: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> if exactly one of <code>self</code>, <code>optb</code> is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>, otherwise returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"macro\">assert_eq!</span>(x.xor(y), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1611\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option, then returns a mutable reference to it.</p>\n<p>If the option already contains a value, the old value is dropped.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.get_or_insert\" title=\"method core::option::Option::get_or_insert\"><code>Option::get_or_insert</code></a>, which doesn’t update the value if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>opt = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">1</span>);\n<span class=\"kw\">let </span>val = opt.insert(<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>val, <span class=\"number\">2</span>);\n<span class=\"kw-2\">*</span>val = <span class=\"number\">3</span>;\n<span class=\"macro\">assert_eq!</span>(opt.unwrap(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1640\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert\" class=\"fn\">get_or_insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Inserts <code>value</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.insert\" title=\"method core::option::Option::insert\"><code>Option::insert</code></a>, which updates the value even if\nthe option already contains <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a>.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert(<span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_default\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1671-1673\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_default\" class=\"fn\">get_or_insert_default</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_get_or_insert_default</code>)</span></div></span></summary><div class=\"docblock\"><p>Inserts the default value into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, then\nreturns a mutable reference to the contained value.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_get_or_insert_default)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_default();\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">0</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_with\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1697-1699\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.get_or_insert_with\" class=\"fn\">get_or_insert_with</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Inserts a value computed from <code>f</code> into the option if it is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>,\nthen returns a mutable reference to the contained value.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n\n{\n    <span class=\"kw\">let </span>y: <span class=\"kw-2\">&amp;mut </span>u32 = x.get_or_insert_with(|| <span class=\"number\">5</span>);\n    <span class=\"macro\">assert_eq!</span>(y, <span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>);\n\n    <span class=\"kw-2\">*</span>y = <span class=\"number\">7</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1732\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, leaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> in its place.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: <span class=\"prelude-ty\">Option</span>&lt;u32&gt; = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>y = x.take();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_if\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1763-1765\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.take_if\" class=\"fn\">take_if</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Takes the value out of the option, but only if the predicate evaluates to\n<code>true</code> on a mutable reference to the value.</p>\n<p>In other words, replaces <code>self</code> with <code>None</code> if the predicate returns <code>true</code>.\nThis method operates similar to <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#method.take\" title=\"method core::option::Option::take\"><code>Option::take</code></a> but conditional.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw\">if </span><span class=\"kw-2\">*</span>v == <span class=\"number\">42 </span>{\n    <span class=\"kw-2\">*</span>v += <span class=\"number\">1</span>;\n    <span class=\"bool-val\">false\n</span>} <span class=\"kw\">else </span>{\n    <span class=\"bool-val\">false\n</span>});\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>prev = x.take_if(|v| <span class=\"kw-2\">*</span>v == <span class=\"number\">43</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(prev, <span class=\"prelude-val\">Some</span>(<span class=\"number\">43</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0, const unstable\">1.31.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/67441\" title=\"Tracking issue for const_option\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1790\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Replaces the actual value in the option by the value given in parameter,\nreturning the old value if present,\nleaving a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> in its place without deinitializing either one.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = <span class=\"prelude-val\">None</span>;\n<span class=\"kw\">let </span>old = x.replace(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(old, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1810\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Zips <code>self</code> with another <code>Option</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some((s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"hi\"</span>);\n<span class=\"kw\">let </span>z = <span class=\"prelude-val\">None</span>::&lt;u8&gt;;\n\n<span class=\"macro\">assert_eq!</span>(x.zip(y), <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"hi\"</span>)));\n<span class=\"macro\">assert_eq!</span>(x.zip(z), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_with\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#1846-1848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#tymethod.zip_with\" class=\"fn\">zip_with</a>&lt;U, F, R&gt;(self, other: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T, U) -&gt; R,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>option_zip</code>)</span></div></span></summary><div class=\"docblock\"><p>Zips <code>self</code> and another <code>Option</code> with function <code>f</code>.</p>\n<p>If <code>self</code> is <code>Some(s)</code> and <code>other</code> is <code>Some(o)</code>, this method returns <code>Some(f(s, o))</code>.\nOtherwise, <code>None</code> is returned.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(option_zip)]\n\n#[derive(Debug, PartialEq)]\n</span><span class=\"kw\">struct </span>Point {\n    x: f64,\n    y: f64,\n}\n\n<span class=\"kw\">impl </span>Point {\n    <span class=\"kw\">fn </span>new(x: f64, y: f64) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self </span>{ x, y }\n    }\n}\n\n<span class=\"kw\">let </span>x = <span class=\"prelude-val\">Some</span>(<span class=\"number\">17.5</span>);\n<span class=\"kw\">let </span>y = <span class=\"prelude-val\">Some</span>(<span class=\"number\">42.7</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.zip_with(y, Point::new), <span class=\"prelude-val\">Some</span>(Point { x: <span class=\"number\">17.5</span>, y: <span class=\"number\">42.7 </span>}));\n<span class=\"macro\">assert_eq!</span>(x.zip_with(<span class=\"prelude-val\">None</span>, Point::new), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2221\">source</a></span><a href=\"#impl-Ord-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2223\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#855-857\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#876-878\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2190\">source</a></span><a href=\"#impl-PartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2192\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2208\">source</a></span><a href=\"#impl-PartialOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2210\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#244-246\">source</a></span><a href=\"#impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#265-267\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the product of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This multiplies each number in a vector of strings,\nif a string could not be parsed the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">100</span>));\n<span class=\"kw\">let </span>nums = <span class=\"macro\">vec!</span>[<span class=\"string\">\"5\"</span>, <span class=\"string\">\"10\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"2\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = nums.iter().map(|w| w.parse::&lt;usize&gt;().ok()).product();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Product<Option<U>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#99-101\">source</a><a href=\"#impl-Serialize-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.203/src/serde/ser/impls.rs.html#104-106\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableOrd-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#472\">source</a><a href=\"#impl-StableOrd-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html\" title=\"trait rustc_data_structures::stable_hasher::StableOrd\">StableOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#473\">source</a><a href=\"#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.CAN_USE_UNSTABLE_SORT\" class=\"constant\">CAN_USE_UNSTABLE_SORT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = T::CAN_USE_UNSTABLE_SORT</h4></section><details class=\"toggle\" open><summary><section id=\"associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/rustc_data_structures/stable_hasher.rs.html#476\">source</a><a href=\"#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rustc_data_structures/stable_hasher/trait.StableOrd.html#associatedconstant.THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED\" class=\"constant\">THIS_IMPLEMENTATION_HAS_BEEN_TRIPLE_CHECKED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> = ()</h4></section></summary><div class='docblock'>Marker to ensure that implementors have carefully considered\nwhether their <code>Ord</code> implementation obeys this trait’s contract.</div></details></div></details>","StableOrd","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#214-216\">source</a></span><a href=\"#impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#235-237\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;U&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>: if it is a <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, no further\nelements are taken, and the <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned. Should no <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\noccur, the sum of all elements is returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>This sums up the position of the character ‘a’ in a vector of strings,\nif a word did not have the character ‘a’ the operation returns <code>None</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"great\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>words = <span class=\"macro\">vec!</span>[<span class=\"string\">\"have\"</span>, <span class=\"string\">\"a\"</span>, <span class=\"string\">\"good\"</span>, <span class=\"string\">\"day\"</span>];\n<span class=\"kw\">let </span>total: <span class=\"prelude-ty\">Option</span>&lt;usize&gt; = words.iter().map(|w| w.find(<span class=\"string\">'a'</span>)).sum();\n<span class=\"macro\">assert_eq!</span>(total, <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>","Sum<Option<U>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToJson-for-Option%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#86\">source</a><a href=\"#impl-ToJson-for-Option%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"rustc_target/json/trait.ToJson.html\" title=\"trait rustc_target::json::ToJson\">ToJson</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_json\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_target/json.rs.html#87\">source</a><a href=\"#method.to_json\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_target/json/trait.ToJson.html#tymethod.to_json\" class=\"fn\">to_json</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.117/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a></h4></section></div></details>","ToJson","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Try-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2482\">source</a><a href=\"#impl-Try-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value produced by <code>?</code> when <em>not</em> short-circuiting.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Residual\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Residual\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" class=\"associatedtype\">Residual</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>The type of the value passed to <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.FromResidual.html#tymethod.from_residual\" title=\"associated function core::ops::try_trait::FromResidual::from_residual\"><code>FromResidual::from_residual</code></a>\nas part of <code>?</code> when short-circuiting. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#associatedtype.Residual\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_output\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2487\">source</a><a href=\"#method.from_output\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\" class=\"fn\">from_output</a>(output: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Constructs the type from its <code>Output</code> type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.from_output\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.branch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2492\">source</a><a href=\"#method.branch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\" class=\"fn\">branch</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;, T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_trait_v2</code>)</span></div></span><div class='docblock'>Used in <code>?</code> to decide whether the operator should produce a value\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Continue\" title=\"variant core::ops::control_flow::ControlFlow::Continue\"><code>ControlFlow::Continue</code></a>)\nor propagate a value back to the caller\n(because this returned <a href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html#variant.Break\" title=\"variant core::ops::control_flow::ControlFlow::Break\"><code>ControlFlow::Break</code></a>). <a href=\"https://doc.rust-lang.org/nightly/core/ops/try_trait/trait.Try.html#tymethod.branch\">Read more</a></div></details></div></details>","Try","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#258\">source</a><a href=\"#impl-TypeFoldable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFoldable.html\" title=\"trait rustc_type_ir::fold::TypeFoldable\">TypeFoldable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#259\">source</a><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, &lt;F as <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_type_ir::fold::FallibleTypeFolder::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.FallibleTypeFolder.html\" title=\"trait rustc_type_ir::fold::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#90\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/fold/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rustc_type_ir/fold/trait.TypeFolder.html\" title=\"trait rustc_type_ir::fold::TypeFolder\">TypeFolder</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable<I>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#149\">source</a><a href=\"#impl-TypeVisitable%3CI%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"rustc_type_ir/interner/trait.Interner.html\" title=\"trait rustc_type_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitable.html\" title=\"trait rustc_type_ir::visit::TypeVisitable\">TypeVisitable</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/visit.rs.html#150\">source</a><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html#associatedtype.Result\" title=\"type rustc_type_ir::visit::TypeVisitor::Result\">Result</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"rustc_type_ir/visit/trait.TypeVisitor.html\" title=\"trait rustc_type_ir::visit::TypeVisitor\">TypeVisitor</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"rustc_type_ir/visit/trait.TypeVisitable.html#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable<I>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnifyValue-for-Option%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#585\">source</a><a href=\"#impl-UnifyValue-for-Option%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a></h4></section></summary><div class='docblock'>Defines the type to return when merging of two values fails.\nIf merging is infallible, use the special struct <code>NoError</code>\nfound in this crate, which unlocks various more convenient\nmethods on the unification table.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unify_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ena/latest/src/ena/unify/mod.rs.html#588\">source</a><a href=\"#method.unify_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#tymethod.unify_values\" class=\"fn\">unify_values</a>(\n    a: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n    b: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, &lt;V as <a class=\"trait\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html\" title=\"trait ena::unify::UnifyValue\">UnifyValue</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/ena/latest/ena/unify/trait.UnifyValue.html#associatedtype.Error\" title=\"type ena::unify::UnifyValue::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Given two values, produce a new value that combines them.\nIf that is not possible, produce an error.</div></details></div></details>","UnifyValue","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#740\">source</a><a href=\"#impl-Value-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#741\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#93\">source</a><a href=\"#impl-Yokeable%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\" class=\"fn\">transform</a>(&amp;'a self) -&gt; &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\" class=\"fn\">transform_owned</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\" class=\"fn\">make</a>(from: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.make\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/macro_impls.rs.html#95\">source</a><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\" class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>&gt;),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a href=\"https://docs.rs/yoke/0.7.4/yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\">Read more</a></div></details></div></details>","Yokeable<'a>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#98\">source</a><a href=\"#impl-ZeroFrom%3C'zf,+Option%3CC%3E%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, C, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerofrom/0.1.4/src/zerofrom/zero_from.rs.html#99\">source</a><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zerofrom/0.1.4/zerofrom/zero_from/trait.ZeroFrom.html#tymethod.zero_from\" class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, Option<C>>","rustc_query_system::query::config::HashResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zerovec/0.10.2/src/zerovec/map/kv.rs.html#76-78\">source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;: <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\">ZeroVec</a>&lt;'a, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = &lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt; as <a class=\"trait\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/zerovec/0.10.2/zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"https://docs.rs/zerovec/0.10.2/zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","rustc_query_system::query::config::HashResult"],["<section id=\"impl-CloneableCart-for-Option%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/yoke/0.7.4/src/yoke/yoke.rs.html#661\">source</a><a href=\"#impl-CloneableCart-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/yoke/0.7.4/yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a>,</div></h3></section>","CloneableCart","rustc_query_system::query::config::HashResult"],["<section id=\"impl-Copy-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Copy-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rustc_query_system::query::config::HashResult"],["<section id=\"impl-Eq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#569\">source</a></span><a href=\"#impl-Eq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rustc_query_system::query::config::HashResult"],["<section id=\"impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/option.rs.html#2188\">source</a></span><a href=\"#impl-StructuralPartialEq-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h3></section>","StructuralPartialEq","rustc_query_system::query::config::HashResult"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()