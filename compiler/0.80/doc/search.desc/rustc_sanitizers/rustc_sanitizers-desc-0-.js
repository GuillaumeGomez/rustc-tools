searchState.loadedDescShard("rustc_sanitizers", 0, "Sanitizers support for the Rust compiler.\nLLVM Control Flow Integrity (CFI) and cross-language LLVM …\nLLVM Kernel Control Flow Integrity (KCFI) and …\nType metadata identifiers for LLVM Control Flow Integrity …\nGeneralizes pointers for compatibility with Clang …\nGeneralizes repr(C) user-defined type for extern function …\nNormalizes integers for compatibility with Clang …\nOptions for typeid_for_fnabi.\nDo not perform self type erasure for attaching a secondary …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nType metadata identifiers (using Itanium C++ ABI mangling …\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns a type metadata identifier for the specified FnAbi.\nReturns a type metadata identifier for the specified …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nEncodes type metadata identifiers for LLVM CFI and …\nTransforms instances and types for LLVM CFI and …\nReturns a type metadata identifier for the specified FnAbi …\nReturns a type metadata identifier for the specified …\nSubstitution dictionary key.\nOptions for encode_ty.\nType and extended type qualifiers.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nSubstitutes a component if found in the substitution …\nEncodes args using the Itanium C++ ABI with vendor …\nEncodes a const using the Itanium C++ ABI as a literal …\nEncodes a FnSig using the Itanium C++ ABI with vendor …\nEncodes a predicate using the Itanium C++ ABI with vendor …\nEncodes predicates using the Itanium C++ ABI with vendor …\nEncodes a region using the Itanium C++ ABI as a vendor …\nEncodes a ty:Ty using the Itanium C++ ABI with vendor …\nEncodes a ty:Ty name, including its crate and path …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a number to a disambiguator (see …\nConverts a number to a sequence number (see …\nOptions for transform_ty.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTransforms an instance for LLVM CFI and cross-language …\nType metadata identifiers for LLVM Kernel Control Flow …\nReturns a KCFI type metadata identifier for the specified …\nReturns a KCFI type metadata identifier for the specified …")