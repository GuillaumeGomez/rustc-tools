searchState.loadedDescShard("rustc_smir", 0, "The WIP stable interface to rustc internals.\nInstantiate and run the compiler with the provided …\nInstantiate and run the compiler with the provided …\nModule that implements the bridge between Stable MIR and …\nModule that implements what will become the rustc side of …\nSimmilar to rustc’s <code>FxIndexMap</code>, <code>IndexMap</code> with extra …\nTrait used to translate a stable construct to its rustc …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nModule containing the translation from stable mir …\nConvert a stable item into its internal Rust compiler …\nCalls <code>U::from(self)</code>.\nConvert an internal Rust compiler item into its stable …\nLoads the current context and calls a function with it. Do …\nTrait used to convert between an internal MIR type to a …\nThe stable representation of the type implementing Stable.\nLogic required to produce a monomorphic stable body.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nImplementation of <code>[stable_mir::compiler_interface::Context]</code>…\nConversion of internal Rust compiler items to stable ones.\nReturns the argument unchanged.\nReturn whether the instance as a body available.\nCalls <code>U::from(self)</code>.\nReturn whether the item has a body defined by the user.\nBuild a stable mir crate from a given crate number.\nConverts an object to the equivalent Stable MIR …\nCreates an <code>Allocation</code> only from information within the …\nCreates new empty <code>Allocation</code> from given <code>Align</code>.\nBuilds a monomorphic body for a given instance.\nBuild a stable monomorphic body for a given instance based …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nRetrieve the instance name for diagnostic messages.\nCalls <code>U::from(self)</code>.\nConversion of internal Rust compiler <code>rustc_target::abi</code> and …\nHandle the conversion of different internal errors into a …\nConversion of internal Rust compiler <code>mir</code> items to stable …\nConversion of internal Rust compiler <code>ty</code> items to stable …")